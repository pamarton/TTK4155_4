
Oving1_TTK4155_G17_H17.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002c0  00800100  0000228e  00002322  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000228e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000075  008003c0  008003c0  000025e2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000025e2  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001f8  00000000  00000000  0000263e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000242d  00000000  00000000  00002836  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000aab  00000000  00000000  00004c63  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000bed  00000000  00000000  0000570e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000006e0  00000000  00000000  000062fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000873  00000000  00000000  000069dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001b86  00000000  00000000  0000724f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001b8  00000000  00000000  00008dd5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f2 01 	jmp	0x3e4	; 0x3e4 <__ctors_end>
       4:	0c 94 4c 02 	jmp	0x498	; 0x498 <__vector_1>
       8:	0c 94 a8 02 	jmp	0x550	; 0x550 <__vector_2>
       c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      10:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      14:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      18:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      1c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      20:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      24:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      28:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      2c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      30:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      34:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      38:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      3c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      40:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      44:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      48:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      4c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      50:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      54:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      58:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      5c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      60:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      64:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      68:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>
      6c:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	43 61       	ori	r20, 0x13	; 19
      72:	6c 69       	ori	r22, 0x9C	; 156
      74:	62 72       	andi	r22, 0x22	; 34
      76:	61 74       	andi	r22, 0x41	; 65
      78:	65 00       	.word	0x0065	; ????
	...

0000007c <debug_entry_0>:
      7c:	66 69 74 20 73 63 72 65 65 6e 00 00                 fit screen..

00000088 <option_entry_1>:
      88:	43 6f 6e 74 72 61 73 74 00 00 00 00                 Contrast....

00000094 <option_entry_0>:
      94:	4d 75 73 69 63 00 00 00 00 00 00 00                 Music.......

000000a0 <mainmenu_entry_3>:
      a0:	4f 70 74 69 6f 6e 73 00 00 00 00 00                 Options.....

000000ac <mainmenu_entry_2>:
      ac:	44 65 62 75 67 00 00 00 00 00 00 00                 Debug.......

000000b8 <mainmenu_entry_1>:
      b8:	48 69 67 68 73 63 6f 72 65 00 00 00                 Highscore...

000000c4 <font>:
	...
      cc:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
      dc:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
      ec:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
      fc:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     10c:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     11c:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     12c:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     13c:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     14c:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     15c:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     16c:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     17c:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     18c:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     19c:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     1ac:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     1bc:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     1cc:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     1dc:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     1ec:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     1fc:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     20c:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     21c:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     22c:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     23c:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     24c:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     25c:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     26c:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     27c:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     28c:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     29c:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     2ac:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     2bc:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     2cc:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     2dc:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     2ec:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     2fc:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     30c:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     31c:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     32c:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     33c:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     34c:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     35c:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     36c:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     37c:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     38c:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     39c:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     3ac:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
     3bc:	66 86 b0 70 70 b0 86 66 00 7e 42 42 42 42 7e 00     f..pp..f.~BBBB~.
     3cc:	00 7e 7e 7e 7e 7e 7e 00 ff 80 80 80 80 80 80 80     .~~~~~~.........
     3dc:	01 01 01 01 01 01 01 ff                             ........

000003e4 <__ctors_end>:
     3e4:	11 24       	eor	r1, r1
     3e6:	1f be       	out	0x3f, r1	; 63
     3e8:	cf ef       	ldi	r28, 0xFF	; 255
     3ea:	d4 e0       	ldi	r29, 0x04	; 4
     3ec:	de bf       	out	0x3e, r29	; 62
     3ee:	cd bf       	out	0x3d, r28	; 61

000003f0 <__do_copy_data>:
     3f0:	13 e0       	ldi	r17, 0x03	; 3
     3f2:	a0 e0       	ldi	r26, 0x00	; 0
     3f4:	b1 e0       	ldi	r27, 0x01	; 1
     3f6:	ee e8       	ldi	r30, 0x8E	; 142
     3f8:	f2 e2       	ldi	r31, 0x22	; 34
     3fa:	02 c0       	rjmp	.+4      	; 0x400 <__do_copy_data+0x10>
     3fc:	05 90       	lpm	r0, Z+
     3fe:	0d 92       	st	X+, r0
     400:	a0 3c       	cpi	r26, 0xC0	; 192
     402:	b1 07       	cpc	r27, r17
     404:	d9 f7       	brne	.-10     	; 0x3fc <__do_copy_data+0xc>

00000406 <__do_clear_bss>:
     406:	24 e0       	ldi	r18, 0x04	; 4
     408:	a0 ec       	ldi	r26, 0xC0	; 192
     40a:	b3 e0       	ldi	r27, 0x03	; 3
     40c:	01 c0       	rjmp	.+2      	; 0x410 <.do_clear_bss_start>

0000040e <.do_clear_bss_loop>:
     40e:	1d 92       	st	X+, r1

00000410 <.do_clear_bss_start>:
     410:	a5 33       	cpi	r26, 0x35	; 53
     412:	b2 07       	cpc	r27, r18
     414:	e1 f7       	brne	.-8      	; 0x40e <.do_clear_bss_loop>
     416:	0e 94 9c 05 	call	0xb38	; 0xb38 <main>
     41a:	0c 94 45 11 	jmp	0x228a	; 0x228a <_exit>

0000041e <__bad_interrupt>:
     41e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000422 <readADC>:
     422:	82 30       	cpi	r24, 0x02	; 2
     424:	91 05       	cpc	r25, r1
     426:	71 f0       	breq	.+28     	; 0x444 <readADC+0x22>
     428:	1c f4       	brge	.+6      	; 0x430 <readADC+0xe>
     42a:	01 97       	sbiw	r24, 0x01	; 1
     42c:	39 f0       	breq	.+14     	; 0x43c <readADC+0x1a>
     42e:	1c c0       	rjmp	.+56     	; 0x468 <readADC+0x46>
     430:	83 30       	cpi	r24, 0x03	; 3
     432:	91 05       	cpc	r25, r1
     434:	59 f0       	breq	.+22     	; 0x44c <readADC+0x2a>
     436:	04 97       	sbiw	r24, 0x04	; 4
     438:	69 f0       	breq	.+26     	; 0x454 <readADC+0x32>
     43a:	16 c0       	rjmp	.+44     	; 0x468 <readADC+0x46>
     43c:	84 e1       	ldi	r24, 0x14	; 20
     43e:	80 93 00 14 	sts	0x1400, r24
     442:	0b c0       	rjmp	.+22     	; 0x45a <readADC+0x38>
     444:	85 e1       	ldi	r24, 0x15	; 21
     446:	80 93 00 14 	sts	0x1400, r24
     44a:	07 c0       	rjmp	.+14     	; 0x45a <readADC+0x38>
     44c:	86 e1       	ldi	r24, 0x16	; 22
     44e:	80 93 00 14 	sts	0x1400, r24
     452:	03 c0       	rjmp	.+6      	; 0x45a <readADC+0x38>
     454:	87 e1       	ldi	r24, 0x17	; 23
     456:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     45a:	82 e5       	ldi	r24, 0x52	; 82
     45c:	8a 95       	dec	r24
     45e:	f1 f7       	brne	.-4      	; 0x45c <readADC+0x3a>
     460:	80 91 00 14 	lds	r24, 0x1400
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	08 95       	ret
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	90 e0       	ldi	r25, 0x00	; 0
     46c:	08 95       	ret

0000046e <initalize_interrupts>:
 *  Author: pamarton
 */ 
#include "button_interrupts.h"

void initalize_interrupts(void){
	BIT_ON(DDRB, PD2);//enable input
     46e:	ba 9a       	sbi	0x17, 2	; 23
	BIT_ON(DDRB, PD3);
     470:	bb 9a       	sbi	0x17, 3	; 23
	//BIT_ON(PORTB, PD2);//WHY DID WE DO THIS?
	//BIT_ON(PORTB, PD3);//LEAVING THIS HERE FOR NOW 21.09.2017
	
	BIT_ON(MCUCR, ISC00);//configuring the interrupts for INT0 on rising edge
     472:	85 b7       	in	r24, 0x35	; 53
     474:	81 60       	ori	r24, 0x01	; 1
     476:	85 bf       	out	0x35, r24	; 53
	BIT_ON(MCUCR, ISC01);
     478:	85 b7       	in	r24, 0x35	; 53
     47a:	82 60       	ori	r24, 0x02	; 2
     47c:	85 bf       	out	0x35, r24	; 53
	BIT_ON(MCUCR, ISC10);//configuring the interrupts for INT1 on rising edge
     47e:	85 b7       	in	r24, 0x35	; 53
     480:	84 60       	ori	r24, 0x04	; 4
     482:	85 bf       	out	0x35, r24	; 53
	BIT_ON(MCUCR, ISC11);
     484:	85 b7       	in	r24, 0x35	; 53
     486:	88 60       	ori	r24, 0x08	; 8
     488:	85 bf       	out	0x35, r24	; 53
	
	BIT_ON(GICR, INT0);//enabling the interrupts INT0 and INT1 in the memory ???????????????????? 21.09.17
     48a:	8b b7       	in	r24, 0x3b	; 59
     48c:	80 64       	ori	r24, 0x40	; 64
     48e:	8b bf       	out	0x3b, r24	; 59
	BIT_ON(GICR, INT1);
     490:	8b b7       	in	r24, 0x3b	; 59
     492:	80 68       	ori	r24, 0x80	; 128
     494:	8b bf       	out	0x3b, r24	; 59
     496:	08 95       	ret

00000498 <__vector_1>:
}


ISR(INT0_vect){//interrupt button Right
     498:	1f 92       	push	r1
     49a:	0f 92       	push	r0
     49c:	0f b6       	in	r0, 0x3f	; 63
     49e:	0f 92       	push	r0
     4a0:	11 24       	eor	r1, r1
     4a2:	ef 92       	push	r14
     4a4:	ff 92       	push	r15
     4a6:	0f 93       	push	r16
     4a8:	1f 93       	push	r17
     4aa:	2f 93       	push	r18
     4ac:	3f 93       	push	r19
     4ae:	4f 93       	push	r20
     4b0:	5f 93       	push	r21
     4b2:	6f 93       	push	r22
     4b4:	7f 93       	push	r23
     4b6:	8f 93       	push	r24
     4b8:	9f 93       	push	r25
     4ba:	af 93       	push	r26
     4bc:	bf 93       	push	r27
     4be:	cf 93       	push	r28
     4c0:	df 93       	push	r29
     4c2:	ef 93       	push	r30
     4c4:	ff 93       	push	r31
	printf("Right button pressed, printing values:\t\t");
     4c6:	80 e1       	ldi	r24, 0x10	; 16
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	9f 93       	push	r25
     4cc:	8f 93       	push	r24
     4ce:	0e 94 a8 0c 	call	0x1950	; 0x1950 <printf>
	printf("X: %i\tY: %i\tL: %i\tR: %i\n",read_control_input('X'),read_control_input('Y'),read_control_input('L'),read_control_input('R'));//REMOVE THIS AND THE #INCLUDE "input_convercions.h" in button_interrupts.h
     4d2:	82 e5       	ldi	r24, 0x52	; 82
     4d4:	0e 94 cb 03 	call	0x796	; 0x796 <read_control_input>
     4d8:	f8 2e       	mov	r15, r24
     4da:	e9 2e       	mov	r14, r25
     4dc:	8c e4       	ldi	r24, 0x4C	; 76
     4de:	0e 94 cb 03 	call	0x796	; 0x796 <read_control_input>
     4e2:	18 2f       	mov	r17, r24
     4e4:	09 2f       	mov	r16, r25
     4e6:	89 e5       	ldi	r24, 0x59	; 89
     4e8:	0e 94 cb 03 	call	0x796	; 0x796 <read_control_input>
     4ec:	c8 2f       	mov	r28, r24
     4ee:	d9 2f       	mov	r29, r25
     4f0:	88 e5       	ldi	r24, 0x58	; 88
     4f2:	0e 94 cb 03 	call	0x796	; 0x796 <read_control_input>
     4f6:	ef 92       	push	r14
     4f8:	ff 92       	push	r15
     4fa:	0f 93       	push	r16
     4fc:	1f 93       	push	r17
     4fe:	df 93       	push	r29
     500:	cf 93       	push	r28
     502:	9f 93       	push	r25
     504:	8f 93       	push	r24
     506:	89 e3       	ldi	r24, 0x39	; 57
     508:	91 e0       	ldi	r25, 0x01	; 1
     50a:	9f 93       	push	r25
     50c:	8f 93       	push	r24
     50e:	0e 94 a8 0c 	call	0x1950	; 0x1950 <printf>
     512:	8d b7       	in	r24, 0x3d	; 61
     514:	9e b7       	in	r25, 0x3e	; 62
     516:	0c 96       	adiw	r24, 0x0c	; 12
     518:	0f b6       	in	r0, 0x3f	; 63
     51a:	f8 94       	cli
     51c:	9e bf       	out	0x3e, r25	; 62
     51e:	0f be       	out	0x3f, r0	; 63
     520:	8d bf       	out	0x3d, r24	; 61
}
     522:	ff 91       	pop	r31
     524:	ef 91       	pop	r30
     526:	df 91       	pop	r29
     528:	cf 91       	pop	r28
     52a:	bf 91       	pop	r27
     52c:	af 91       	pop	r26
     52e:	9f 91       	pop	r25
     530:	8f 91       	pop	r24
     532:	7f 91       	pop	r23
     534:	6f 91       	pop	r22
     536:	5f 91       	pop	r21
     538:	4f 91       	pop	r20
     53a:	3f 91       	pop	r19
     53c:	2f 91       	pop	r18
     53e:	1f 91       	pop	r17
     540:	0f 91       	pop	r16
     542:	ff 90       	pop	r15
     544:	ef 90       	pop	r14
     546:	0f 90       	pop	r0
     548:	0f be       	out	0x3f, r0	; 63
     54a:	0f 90       	pop	r0
     54c:	1f 90       	pop	r1
     54e:	18 95       	reti

00000550 <__vector_2>:
ISR(INT1_vect){//interrupt button Left
     550:	1f 92       	push	r1
     552:	0f 92       	push	r0
     554:	0f b6       	in	r0, 0x3f	; 63
     556:	0f 92       	push	r0
     558:	11 24       	eor	r1, r1
     55a:	2f 93       	push	r18
     55c:	3f 93       	push	r19
     55e:	4f 93       	push	r20
     560:	5f 93       	push	r21
     562:	6f 93       	push	r22
     564:	7f 93       	push	r23
     566:	8f 93       	push	r24
     568:	9f 93       	push	r25
     56a:	af 93       	push	r26
     56c:	bf 93       	push	r27
     56e:	ef 93       	push	r30
     570:	ff 93       	push	r31
	printf("Left Button Pressed\n");
     572:	82 e5       	ldi	r24, 0x52	; 82
     574:	91 e0       	ldi	r25, 0x01	; 1
     576:	0e 94 bc 0c 	call	0x1978	; 0x1978 <puts>
     57a:	ff 91       	pop	r31
     57c:	ef 91       	pop	r30
     57e:	bf 91       	pop	r27
     580:	af 91       	pop	r26
     582:	9f 91       	pop	r25
     584:	8f 91       	pop	r24
     586:	7f 91       	pop	r23
     588:	6f 91       	pop	r22
     58a:	5f 91       	pop	r21
     58c:	4f 91       	pop	r20
     58e:	3f 91       	pop	r19
     590:	2f 91       	pop	r18
     592:	0f 90       	pop	r0
     594:	0f be       	out	0x3f, r0	; 63
     596:	0f 90       	pop	r0
     598:	1f 90       	pop	r1
     59a:	18 95       	reti

0000059c <calibrate_joystick>:
     59c:	0f 93       	push	r16
     59e:	1f 93       	push	r17
     5a0:	cf 93       	push	r28
     5a2:	df 93       	push	r29
     5a4:	c4 e6       	ldi	r28, 0x64	; 100
     5a6:	d0 e0       	ldi	r29, 0x00	; 0
     5a8:	00 91 ca 03 	lds	r16, 0x03CA
     5ac:	10 91 cb 03 	lds	r17, 0x03CB
     5b0:	81 e0       	ldi	r24, 0x01	; 1
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	0e 94 11 02 	call	0x422	; 0x422 <readADC>
     5b8:	01 58       	subi	r16, 0x81	; 129
     5ba:	1f 4f       	sbci	r17, 0xFF	; 255
     5bc:	08 1b       	sub	r16, r24
     5be:	19 0b       	sbc	r17, r25
     5c0:	10 93 cb 03 	sts	0x03CB, r17
     5c4:	00 93 ca 03 	sts	0x03CA, r16
     5c8:	00 91 c8 03 	lds	r16, 0x03C8
     5cc:	10 91 c9 03 	lds	r17, 0x03C9
     5d0:	82 e0       	ldi	r24, 0x02	; 2
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	0e 94 11 02 	call	0x422	; 0x422 <readADC>
     5d8:	01 58       	subi	r16, 0x81	; 129
     5da:	1f 4f       	sbci	r17, 0xFF	; 255
     5dc:	08 1b       	sub	r16, r24
     5de:	19 0b       	sbc	r17, r25
     5e0:	10 93 c9 03 	sts	0x03C9, r17
     5e4:	00 93 c8 03 	sts	0x03C8, r16
     5e8:	21 97       	sbiw	r28, 0x01	; 1
     5ea:	20 97       	sbiw	r28, 0x00	; 0
     5ec:	e9 f6       	brne	.-70     	; 0x5a8 <calibrate_joystick+0xc>
     5ee:	80 91 ca 03 	lds	r24, 0x03CA
     5f2:	90 91 cb 03 	lds	r25, 0x03CB
     5f6:	24 e6       	ldi	r18, 0x64	; 100
     5f8:	30 e0       	ldi	r19, 0x00	; 0
     5fa:	b9 01       	movw	r22, r18
     5fc:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__divmodhi4>
     600:	70 93 cb 03 	sts	0x03CB, r23
     604:	60 93 ca 03 	sts	0x03CA, r22
     608:	80 91 c8 03 	lds	r24, 0x03C8
     60c:	90 91 c9 03 	lds	r25, 0x03C9
     610:	b9 01       	movw	r22, r18
     612:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__divmodhi4>
     616:	70 93 c9 03 	sts	0x03C9, r23
     61a:	60 93 c8 03 	sts	0x03C8, r22
     61e:	df 91       	pop	r29
     620:	cf 91       	pop	r28
     622:	1f 91       	pop	r17
     624:	0f 91       	pop	r16
     626:	08 95       	ret

00000628 <signal_to_range>:
     628:	2f 92       	push	r2
     62a:	3f 92       	push	r3
     62c:	4f 92       	push	r4
     62e:	5f 92       	push	r5
     630:	6f 92       	push	r6
     632:	7f 92       	push	r7
     634:	8f 92       	push	r8
     636:	9f 92       	push	r9
     638:	af 92       	push	r10
     63a:	bf 92       	push	r11
     63c:	cf 92       	push	r12
     63e:	df 92       	push	r13
     640:	ef 92       	push	r14
     642:	ff 92       	push	r15
     644:	0f 93       	push	r16
     646:	1f 93       	push	r17
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	00 d0       	rcall	.+0      	; 0x64e <signal_to_range+0x26>
     64e:	00 d0       	rcall	.+0      	; 0x650 <signal_to_range+0x28>
     650:	00 d0       	rcall	.+0      	; 0x652 <signal_to_range+0x2a>
     652:	cd b7       	in	r28, 0x3d	; 61
     654:	de b7       	in	r29, 0x3e	; 62
     656:	3c 01       	movw	r6, r24
     658:	7a 83       	std	Y+2, r23	; 0x02
     65a:	69 83       	std	Y+1, r22	; 0x01
     65c:	5c 83       	std	Y+4, r21	; 0x04
     65e:	4b 83       	std	Y+3, r20	; 0x03
     660:	3e 83       	std	Y+6, r19	; 0x06
     662:	2d 83       	std	Y+5, r18	; 0x05
     664:	18 01       	movw	r2, r16
     666:	85 01       	movw	r16, r10
     668:	b9 01       	movw	r22, r18
     66a:	88 27       	eor	r24, r24
     66c:	77 fd       	sbrc	r23, 7
     66e:	80 95       	com	r24
     670:	98 2f       	mov	r25, r24
     672:	0e 94 6d 0a 	call	0x14da	; 0x14da <__floatsisf>
     676:	4b 01       	movw	r8, r22
     678:	5c 01       	movw	r10, r24
     67a:	b3 01       	movw	r22, r6
     67c:	6e 0d       	add	r22, r14
     67e:	7f 1d       	adc	r23, r15
     680:	29 81       	ldd	r18, Y+1	; 0x01
     682:	3a 81       	ldd	r19, Y+2	; 0x02
     684:	62 1b       	sub	r22, r18
     686:	73 0b       	sbc	r23, r19
     688:	88 27       	eor	r24, r24
     68a:	77 fd       	sbrc	r23, 7
     68c:	80 95       	com	r24
     68e:	98 2f       	mov	r25, r24
     690:	0e 94 6d 0a 	call	0x14da	; 0x14da <__floatsisf>
     694:	2b 01       	movw	r4, r22
     696:	3c 01       	movw	r6, r24
     698:	b1 01       	movw	r22, r2
     69a:	8d 81       	ldd	r24, Y+5	; 0x05
     69c:	9e 81       	ldd	r25, Y+6	; 0x06
     69e:	68 1b       	sub	r22, r24
     6a0:	79 0b       	sbc	r23, r25
     6a2:	88 27       	eor	r24, r24
     6a4:	77 fd       	sbrc	r23, 7
     6a6:	80 95       	com	r24
     6a8:	98 2f       	mov	r25, r24
     6aa:	0e 94 6d 0a 	call	0x14da	; 0x14da <__floatsisf>
     6ae:	9b 01       	movw	r18, r22
     6b0:	ac 01       	movw	r20, r24
     6b2:	c3 01       	movw	r24, r6
     6b4:	b2 01       	movw	r22, r4
     6b6:	0e 94 1d 0b 	call	0x163a	; 0x163a <__mulsf3>
     6ba:	2b 01       	movw	r4, r22
     6bc:	3c 01       	movw	r6, r24
     6be:	6b 81       	ldd	r22, Y+3	; 0x03
     6c0:	7c 81       	ldd	r23, Y+4	; 0x04
     6c2:	e9 81       	ldd	r30, Y+1	; 0x01
     6c4:	fa 81       	ldd	r31, Y+2	; 0x02
     6c6:	6e 1b       	sub	r22, r30
     6c8:	7f 0b       	sbc	r23, r31
     6ca:	88 27       	eor	r24, r24
     6cc:	77 fd       	sbrc	r23, 7
     6ce:	80 95       	com	r24
     6d0:	98 2f       	mov	r25, r24
     6d2:	0e 94 6d 0a 	call	0x14da	; 0x14da <__floatsisf>
     6d6:	9b 01       	movw	r18, r22
     6d8:	ac 01       	movw	r20, r24
     6da:	c3 01       	movw	r24, r6
     6dc:	b2 01       	movw	r22, r4
     6de:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <__divsf3>
     6e2:	9b 01       	movw	r18, r22
     6e4:	ac 01       	movw	r20, r24
     6e6:	c5 01       	movw	r24, r10
     6e8:	b4 01       	movw	r22, r8
     6ea:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__addsf3>
     6ee:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__fixsfsi>
     6f2:	c1 01       	movw	r24, r2
     6f4:	80 1b       	sub	r24, r16
     6f6:	91 0b       	sbc	r25, r17
     6f8:	68 17       	cp	r22, r24
     6fa:	79 07       	cpc	r23, r25
     6fc:	74 f5       	brge	.+92     	; 0x75a <signal_to_range+0x132>
     6fe:	8d 81       	ldd	r24, Y+5	; 0x05
     700:	9e 81       	ldd	r25, Y+6	; 0x06
     702:	80 0f       	add	r24, r16
     704:	91 1f       	adc	r25, r17
     706:	86 17       	cp	r24, r22
     708:	97 07       	cpc	r25, r23
     70a:	4c f5       	brge	.+82     	; 0x75e <signal_to_range+0x136>
     70c:	f8 01       	movw	r30, r16
     70e:	11 23       	and	r17, r17
     710:	0c f4       	brge	.+2      	; 0x714 <signal_to_range+0xec>
     712:	31 96       	adiw	r30, 0x01	; 1
     714:	f5 95       	asr	r31
     716:	e7 95       	ror	r30
     718:	d8 01       	movw	r26, r16
     71a:	12 c0       	rjmp	.+36     	; 0x740 <signal_to_range+0x118>
     71c:	8a 0f       	add	r24, r26
     71e:	9b 1f       	adc	r25, r27
     720:	ac 01       	movw	r20, r24
     722:	4e 0f       	add	r20, r30
     724:	5f 1f       	adc	r21, r31
     726:	64 17       	cp	r22, r20
     728:	75 07       	cpc	r23, r21
     72a:	14 f0       	brlt	.+4      	; 0x730 <signal_to_range+0x108>
     72c:	69 01       	movw	r12, r18
     72e:	0b c0       	rjmp	.+22     	; 0x746 <signal_to_range+0x11e>
     730:	c6 01       	movw	r24, r12
     732:	8e 1b       	sub	r24, r30
     734:	9f 0b       	sbc	r25, r31
     736:	86 17       	cp	r24, r22
     738:	97 07       	cpc	r25, r23
     73a:	14 f0       	brlt	.+4      	; 0x740 <signal_to_range+0x118>
     73c:	c0 1a       	sub	r12, r16
     73e:	d1 0a       	sbc	r13, r17
     740:	c6 01       	movw	r24, r12
     742:	80 1b       	sub	r24, r16
     744:	91 0b       	sbc	r25, r17
     746:	96 01       	movw	r18, r12
     748:	20 0f       	add	r18, r16
     74a:	31 1f       	adc	r19, r17
     74c:	62 17       	cp	r22, r18
     74e:	73 07       	cpc	r23, r19
     750:	2c f7       	brge	.-54     	; 0x71c <signal_to_range+0xf4>
     752:	86 17       	cp	r24, r22
     754:	97 07       	cpc	r25, r23
     756:	14 f7       	brge	.-60     	; 0x71c <signal_to_range+0xf4>
     758:	04 c0       	rjmp	.+8      	; 0x762 <signal_to_range+0x13a>
     75a:	61 01       	movw	r12, r2
     75c:	02 c0       	rjmp	.+4      	; 0x762 <signal_to_range+0x13a>
     75e:	cd 80       	ldd	r12, Y+5	; 0x05
     760:	de 80       	ldd	r13, Y+6	; 0x06
     762:	c6 01       	movw	r24, r12
     764:	26 96       	adiw	r28, 0x06	; 6
     766:	0f b6       	in	r0, 0x3f	; 63
     768:	f8 94       	cli
     76a:	de bf       	out	0x3e, r29	; 62
     76c:	0f be       	out	0x3f, r0	; 63
     76e:	cd bf       	out	0x3d, r28	; 61
     770:	df 91       	pop	r29
     772:	cf 91       	pop	r28
     774:	1f 91       	pop	r17
     776:	0f 91       	pop	r16
     778:	ff 90       	pop	r15
     77a:	ef 90       	pop	r14
     77c:	df 90       	pop	r13
     77e:	cf 90       	pop	r12
     780:	bf 90       	pop	r11
     782:	af 90       	pop	r10
     784:	9f 90       	pop	r9
     786:	8f 90       	pop	r8
     788:	7f 90       	pop	r7
     78a:	6f 90       	pop	r6
     78c:	5f 90       	pop	r5
     78e:	4f 90       	pop	r4
     790:	3f 90       	pop	r3
     792:	2f 90       	pop	r2
     794:	08 95       	ret

00000796 <read_control_input>:
     796:	af 92       	push	r10
     798:	bf 92       	push	r11
     79a:	cf 92       	push	r12
     79c:	df 92       	push	r13
     79e:	ef 92       	push	r14
     7a0:	ff 92       	push	r15
     7a2:	0f 93       	push	r16
     7a4:	1f 93       	push	r17
     7a6:	82 35       	cpi	r24, 0x52	; 82
     7a8:	09 f4       	brne	.+2      	; 0x7ac <read_control_input+0x16>
     7aa:	74 c0       	rjmp	.+232    	; 0x894 <read_control_input+0xfe>
     7ac:	20 f4       	brcc	.+8      	; 0x7b6 <read_control_input+0x20>
     7ae:	8c 34       	cpi	r24, 0x4C	; 76
     7b0:	09 f4       	brne	.+2      	; 0x7b4 <read_control_input+0x1e>
     7b2:	4e c0       	rjmp	.+156    	; 0x850 <read_control_input+0xba>
     7b4:	91 c0       	rjmp	.+290    	; 0x8d8 <read_control_input+0x142>
     7b6:	88 35       	cpi	r24, 0x58	; 88
     7b8:	19 f0       	breq	.+6      	; 0x7c0 <read_control_input+0x2a>
     7ba:	89 35       	cpi	r24, 0x59	; 89
     7bc:	29 f1       	breq	.+74     	; 0x808 <read_control_input+0x72>
     7be:	8c c0       	rjmp	.+280    	; 0x8d8 <read_control_input+0x142>
     7c0:	c0 90 c6 03 	lds	r12, 0x03C6
     7c4:	d0 90 c7 03 	lds	r13, 0x03C7
     7c8:	e0 90 ca 03 	lds	r14, 0x03CA
     7cc:	f0 90 cb 03 	lds	r15, 0x03CB
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	0e 94 11 02 	call	0x422	; 0x422 <readADC>
     7d8:	0f 2e       	mov	r0, r31
     7da:	fa e0       	ldi	r31, 0x0A	; 10
     7dc:	af 2e       	mov	r10, r31
     7de:	b1 2c       	mov	r11, r1
     7e0:	f0 2d       	mov	r31, r0
     7e2:	04 e6       	ldi	r16, 0x64	; 100
     7e4:	10 e0       	ldi	r17, 0x00	; 0
     7e6:	2c e9       	ldi	r18, 0x9C	; 156
     7e8:	3f ef       	ldi	r19, 0xFF	; 255
     7ea:	4f ef       	ldi	r20, 0xFF	; 255
     7ec:	50 e0       	ldi	r21, 0x00	; 0
     7ee:	60 e0       	ldi	r22, 0x00	; 0
     7f0:	70 e0       	ldi	r23, 0x00	; 0
     7f2:	0e 94 14 03 	call	0x628	; 0x628 <signal_to_range>
     7f6:	90 93 c7 03 	sts	0x03C7, r25
     7fa:	80 93 c6 03 	sts	0x03C6, r24
     7fe:	80 91 c6 03 	lds	r24, 0x03C6
     802:	90 91 c7 03 	lds	r25, 0x03C7
     806:	6a c0       	rjmp	.+212    	; 0x8dc <read_control_input+0x146>
     808:	c0 90 c4 03 	lds	r12, 0x03C4
     80c:	d0 90 c5 03 	lds	r13, 0x03C5
     810:	e0 90 c8 03 	lds	r14, 0x03C8
     814:	f0 90 c9 03 	lds	r15, 0x03C9
     818:	82 e0       	ldi	r24, 0x02	; 2
     81a:	90 e0       	ldi	r25, 0x00	; 0
     81c:	0e 94 11 02 	call	0x422	; 0x422 <readADC>
     820:	0f 2e       	mov	r0, r31
     822:	fa e0       	ldi	r31, 0x0A	; 10
     824:	af 2e       	mov	r10, r31
     826:	b1 2c       	mov	r11, r1
     828:	f0 2d       	mov	r31, r0
     82a:	04 e6       	ldi	r16, 0x64	; 100
     82c:	10 e0       	ldi	r17, 0x00	; 0
     82e:	2c e9       	ldi	r18, 0x9C	; 156
     830:	3f ef       	ldi	r19, 0xFF	; 255
     832:	4f ef       	ldi	r20, 0xFF	; 255
     834:	50 e0       	ldi	r21, 0x00	; 0
     836:	60 e0       	ldi	r22, 0x00	; 0
     838:	70 e0       	ldi	r23, 0x00	; 0
     83a:	0e 94 14 03 	call	0x628	; 0x628 <signal_to_range>
     83e:	90 93 c5 03 	sts	0x03C5, r25
     842:	80 93 c4 03 	sts	0x03C4, r24
     846:	80 91 c4 03 	lds	r24, 0x03C4
     84a:	90 91 c5 03 	lds	r25, 0x03C5
     84e:	46 c0       	rjmp	.+140    	; 0x8dc <read_control_input+0x146>
     850:	c0 90 c2 03 	lds	r12, 0x03C2
     854:	d0 90 c3 03 	lds	r13, 0x03C3
     858:	83 e0       	ldi	r24, 0x03	; 3
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	0e 94 11 02 	call	0x422	; 0x422 <readADC>
     860:	0f 2e       	mov	r0, r31
     862:	fa e0       	ldi	r31, 0x0A	; 10
     864:	af 2e       	mov	r10, r31
     866:	b1 2c       	mov	r11, r1
     868:	f0 2d       	mov	r31, r0
     86a:	e1 2c       	mov	r14, r1
     86c:	f1 2c       	mov	r15, r1
     86e:	04 e6       	ldi	r16, 0x64	; 100
     870:	10 e0       	ldi	r17, 0x00	; 0
     872:	20 e0       	ldi	r18, 0x00	; 0
     874:	30 e0       	ldi	r19, 0x00	; 0
     876:	4f ef       	ldi	r20, 0xFF	; 255
     878:	50 e0       	ldi	r21, 0x00	; 0
     87a:	60 e0       	ldi	r22, 0x00	; 0
     87c:	70 e0       	ldi	r23, 0x00	; 0
     87e:	0e 94 14 03 	call	0x628	; 0x628 <signal_to_range>
     882:	90 93 c3 03 	sts	0x03C3, r25
     886:	80 93 c2 03 	sts	0x03C2, r24
     88a:	80 91 c2 03 	lds	r24, 0x03C2
     88e:	90 91 c3 03 	lds	r25, 0x03C3
     892:	24 c0       	rjmp	.+72     	; 0x8dc <read_control_input+0x146>
     894:	c0 90 c0 03 	lds	r12, 0x03C0
     898:	d0 90 c1 03 	lds	r13, 0x03C1
     89c:	84 e0       	ldi	r24, 0x04	; 4
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	0e 94 11 02 	call	0x422	; 0x422 <readADC>
     8a4:	0f 2e       	mov	r0, r31
     8a6:	fa e0       	ldi	r31, 0x0A	; 10
     8a8:	af 2e       	mov	r10, r31
     8aa:	b1 2c       	mov	r11, r1
     8ac:	f0 2d       	mov	r31, r0
     8ae:	e1 2c       	mov	r14, r1
     8b0:	f1 2c       	mov	r15, r1
     8b2:	04 e6       	ldi	r16, 0x64	; 100
     8b4:	10 e0       	ldi	r17, 0x00	; 0
     8b6:	20 e0       	ldi	r18, 0x00	; 0
     8b8:	30 e0       	ldi	r19, 0x00	; 0
     8ba:	4f ef       	ldi	r20, 0xFF	; 255
     8bc:	50 e0       	ldi	r21, 0x00	; 0
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	70 e0       	ldi	r23, 0x00	; 0
     8c2:	0e 94 14 03 	call	0x628	; 0x628 <signal_to_range>
     8c6:	90 93 c1 03 	sts	0x03C1, r25
     8ca:	80 93 c0 03 	sts	0x03C0, r24
     8ce:	80 91 c0 03 	lds	r24, 0x03C0
     8d2:	90 91 c1 03 	lds	r25, 0x03C1
     8d6:	02 c0       	rjmp	.+4      	; 0x8dc <read_control_input+0x146>
     8d8:	80 e0       	ldi	r24, 0x00	; 0
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	1f 91       	pop	r17
     8de:	0f 91       	pop	r16
     8e0:	ff 90       	pop	r15
     8e2:	ef 90       	pop	r14
     8e4:	df 90       	pop	r13
     8e6:	cf 90       	pop	r12
     8e8:	bf 90       	pop	r11
     8ea:	af 90       	pop	r10
     8ec:	08 95       	ret

000008ee <initialize_control_input>:
     8ee:	0e 94 ce 02 	call	0x59c	; 0x59c <calibrate_joystick>
     8f2:	88 e5       	ldi	r24, 0x58	; 88
     8f4:	0e 94 cb 03 	call	0x796	; 0x796 <read_control_input>
     8f8:	90 93 c7 03 	sts	0x03C7, r25
     8fc:	80 93 c6 03 	sts	0x03C6, r24
     900:	89 e5       	ldi	r24, 0x59	; 89
     902:	0e 94 cb 03 	call	0x796	; 0x796 <read_control_input>
     906:	90 93 c5 03 	sts	0x03C5, r25
     90a:	80 93 c4 03 	sts	0x03C4, r24
     90e:	8c e4       	ldi	r24, 0x4C	; 76
     910:	0e 94 cb 03 	call	0x796	; 0x796 <read_control_input>
     914:	90 93 c3 03 	sts	0x03C3, r25
     918:	80 93 c2 03 	sts	0x03C2, r24
     91c:	82 e5       	ldi	r24, 0x52	; 82
     91e:	0e 94 cb 03 	call	0x796	; 0x796 <read_control_input>
     922:	90 93 c1 03 	sts	0x03C1, r25
     926:	80 93 c0 03 	sts	0x03C0, r24
     92a:	20 91 c8 03 	lds	r18, 0x03C8
     92e:	30 91 c9 03 	lds	r19, 0x03C9
     932:	80 91 ca 03 	lds	r24, 0x03CA
     936:	90 91 cb 03 	lds	r25, 0x03CB
     93a:	3f 93       	push	r19
     93c:	2f 93       	push	r18
     93e:	9f 93       	push	r25
     940:	8f 93       	push	r24
     942:	86 e6       	ldi	r24, 0x66	; 102
     944:	91 e0       	ldi	r25, 0x01	; 1
     946:	9f 93       	push	r25
     948:	8f 93       	push	r24
     94a:	0e 94 a8 0c 	call	0x1950	; 0x1950 <printf>
     94e:	60 91 c0 03 	lds	r22, 0x03C0
     952:	70 91 c1 03 	lds	r23, 0x03C1
     956:	40 91 c2 03 	lds	r20, 0x03C2
     95a:	50 91 c3 03 	lds	r21, 0x03C3
     95e:	20 91 c4 03 	lds	r18, 0x03C4
     962:	30 91 c5 03 	lds	r19, 0x03C5
     966:	80 91 c6 03 	lds	r24, 0x03C6
     96a:	90 91 c7 03 	lds	r25, 0x03C7
     96e:	7f 93       	push	r23
     970:	6f 93       	push	r22
     972:	5f 93       	push	r21
     974:	4f 93       	push	r20
     976:	3f 93       	push	r19
     978:	2f 93       	push	r18
     97a:	9f 93       	push	r25
     97c:	8f 93       	push	r24
     97e:	8f e8       	ldi	r24, 0x8F	; 143
     980:	91 e0       	ldi	r25, 0x01	; 1
     982:	9f 93       	push	r25
     984:	8f 93       	push	r24
     986:	0e 94 a8 0c 	call	0x1950	; 0x1950 <printf>
     98a:	8d b7       	in	r24, 0x3d	; 61
     98c:	9e b7       	in	r25, 0x3e	; 62
     98e:	40 96       	adiw	r24, 0x10	; 16
     990:	0f b6       	in	r0, 0x3f	; 63
     992:	f8 94       	cli
     994:	9e bf       	out	0x3e, r25	; 62
     996:	0f be       	out	0x3f, r0	; 63
     998:	8d bf       	out	0x3d, r24	; 61
     99a:	08 95       	ret

0000099c <SRAM_test>:
	sei();//enable interrupts
}

#include <stdlib.h>
void SRAM_test(void)//CAN BE REMOVED, IN CASE OF LOW STORAGE
{
     99c:	cf 92       	push	r12
     99e:	df 92       	push	r13
     9a0:	ef 92       	push	r14
     9a2:	ff 92       	push	r15
     9a4:	0f 93       	push	r16
     9a6:	1f 93       	push	r17
     9a8:	cf 93       	push	r28
     9aa:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
     9ac:	88 eb       	ldi	r24, 0xB8	; 184
     9ae:	91 e0       	ldi	r25, 0x01	; 1
     9b0:	0e 94 bc 0c 	call	0x1978	; 0x1978 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     9b4:	0e 94 4d 0c 	call	0x189a	; 0x189a <rand>
     9b8:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     9ba:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     9be:	c0 e0       	ldi	r28, 0x00	; 0
     9c0:	d0 e0       	ldi	r29, 0x00	; 0
#include <stdlib.h>
void SRAM_test(void)//CAN BE REMOVED, IN CASE OF LOW STORAGE
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
     9c2:	00 e0       	ldi	r16, 0x00	; 0
     9c4:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
     9c6:	0f 2e       	mov	r0, r31
     9c8:	fe ec       	ldi	r31, 0xCE	; 206
     9ca:	ef 2e       	mov	r14, r31
     9cc:	f1 e0       	ldi	r31, 0x01	; 1
     9ce:	ff 2e       	mov	r15, r31
     9d0:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     9d2:	0e 94 4d 0c 	call	0x189a	; 0x189a <rand>
     9d6:	fe 01       	movw	r30, r28
     9d8:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
     9da:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     9dc:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     9de:	28 17       	cp	r18, r24
     9e0:	a9 f0       	breq	.+42     	; 0xa0c <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
     9e2:	99 27       	eor	r25, r25
     9e4:	9f 93       	push	r25
     9e6:	8f 93       	push	r24
     9e8:	1f 92       	push	r1
     9ea:	2f 93       	push	r18
     9ec:	df 93       	push	r29
     9ee:	cf 93       	push	r28
     9f0:	ff 92       	push	r15
     9f2:	ef 92       	push	r14
     9f4:	0e 94 a8 0c 	call	0x1950	; 0x1950 <printf>
			write_errors++;
     9f8:	0f 5f       	subi	r16, 0xFF	; 255
     9fa:	1f 4f       	sbci	r17, 0xFF	; 255
     9fc:	8d b7       	in	r24, 0x3d	; 61
     9fe:	9e b7       	in	r25, 0x3e	; 62
     a00:	08 96       	adiw	r24, 0x08	; 8
     a02:	0f b6       	in	r0, 0x3f	; 63
     a04:	f8 94       	cli
     a06:	9e bf       	out	0x3e, r25	; 62
     a08:	0f be       	out	0x3f, r0	; 63
     a0a:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     a0c:	21 96       	adiw	r28, 0x01	; 1
     a0e:	c1 15       	cp	r28, r1
     a10:	98 e0       	ldi	r25, 0x08	; 8
     a12:	d9 07       	cpc	r29, r25
     a14:	f1 f6       	brne	.-68     	; 0x9d2 <SRAM_test+0x36>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
     a16:	c6 01       	movw	r24, r12
     a18:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     a1c:	c0 e0       	ldi	r28, 0x00	; 0
     a1e:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)//CAN BE REMOVED, IN CASE OF LOW STORAGE
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
     a20:	e1 2c       	mov	r14, r1
     a22:	f1 2c       	mov	r15, r1
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
     a24:	0f 2e       	mov	r0, r31
     a26:	f7 e0       	ldi	r31, 0x07	; 7
     a28:	cf 2e       	mov	r12, r31
     a2a:	f2 e0       	ldi	r31, 0x02	; 2
     a2c:	df 2e       	mov	r13, r31
     a2e:	f0 2d       	mov	r31, r0
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
     a30:	0e 94 4d 0c 	call	0x189a	; 0x189a <rand>
     a34:	fe 01       	movw	r30, r28
     a36:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
     a38:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     a3a:	28 17       	cp	r18, r24
     a3c:	b1 f0       	breq	.+44     	; 0xa6a <SRAM_test+0xce>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
     a3e:	99 27       	eor	r25, r25
     a40:	9f 93       	push	r25
     a42:	8f 93       	push	r24
     a44:	1f 92       	push	r1
     a46:	2f 93       	push	r18
     a48:	df 93       	push	r29
     a4a:	cf 93       	push	r28
     a4c:	df 92       	push	r13
     a4e:	cf 92       	push	r12
     a50:	0e 94 a8 0c 	call	0x1950	; 0x1950 <printf>
			retrieval_errors++;
     a54:	8f ef       	ldi	r24, 0xFF	; 255
     a56:	e8 1a       	sub	r14, r24
     a58:	f8 0a       	sbc	r15, r24
     a5a:	8d b7       	in	r24, 0x3d	; 61
     a5c:	9e b7       	in	r25, 0x3e	; 62
     a5e:	08 96       	adiw	r24, 0x08	; 8
     a60:	0f b6       	in	r0, 0x3f	; 63
     a62:	f8 94       	cli
     a64:	9e bf       	out	0x3e, r25	; 62
     a66:	0f be       	out	0x3f, r0	; 63
     a68:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     a6a:	21 96       	adiw	r28, 0x01	; 1
     a6c:	c1 15       	cp	r28, r1
     a6e:	98 e0       	ldi	r25, 0x08	; 8
     a70:	d9 07       	cpc	r29, r25
     a72:	f1 f6       	brne	.-68     	; 0xa30 <SRAM_test+0x94>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with\n%4d errors in write phase and\n%4d errors	in retrieval phase\n\n", write_errors, retrieval_errors);
     a74:	ff 92       	push	r15
     a76:	ef 92       	push	r14
     a78:	1f 93       	push	r17
     a7a:	0f 93       	push	r16
     a7c:	84 e4       	ldi	r24, 0x44	; 68
     a7e:	92 e0       	ldi	r25, 0x02	; 2
     a80:	9f 93       	push	r25
     a82:	8f 93       	push	r24
     a84:	0e 94 a8 0c 	call	0x1950	; 0x1950 <printf>
     a88:	0f 90       	pop	r0
     a8a:	0f 90       	pop	r0
     a8c:	0f 90       	pop	r0
     a8e:	0f 90       	pop	r0
     a90:	0f 90       	pop	r0
     a92:	0f 90       	pop	r0
}
     a94:	df 91       	pop	r29
     a96:	cf 91       	pop	r28
     a98:	1f 91       	pop	r17
     a9a:	0f 91       	pop	r16
     a9c:	ff 90       	pop	r15
     a9e:	ef 90       	pop	r14
     aa0:	df 90       	pop	r13
     aa2:	cf 90       	pop	r12
     aa4:	08 95       	ret

00000aa6 <initalize>:




void initalize(void){
	cli();//disable interrupts
     aa6:	f8 94       	cli
	init_UART(UBBR);
     aa8:	8f e1       	ldi	r24, 0x1F	; 31
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	0e 94 5e 09 	call	0x12bc	; 0x12bc <init_UART>
	printf("LOADING g17_%s %s %s\nINITIALIZING...\n\nUART successfully initialized\n\n", VERSION,__DATE__,__TIME__);
     ab0:	8b e9       	ldi	r24, 0x9B	; 155
     ab2:	92 e0       	ldi	r25, 0x02	; 2
     ab4:	9f 93       	push	r25
     ab6:	8f 93       	push	r24
     ab8:	84 ea       	ldi	r24, 0xA4	; 164
     aba:	92 e0       	ldi	r25, 0x02	; 2
     abc:	9f 93       	push	r25
     abe:	8f 93       	push	r24
     ac0:	80 eb       	ldi	r24, 0xB0	; 176
     ac2:	92 e0       	ldi	r25, 0x02	; 2
     ac4:	9f 93       	push	r25
     ac6:	8f 93       	push	r24
     ac8:	85 eb       	ldi	r24, 0xB5	; 181
     aca:	92 e0       	ldi	r25, 0x02	; 2
     acc:	9f 93       	push	r25
     ace:	8f 93       	push	r24
     ad0:	0e 94 a8 0c 	call	0x1950	; 0x1950 <printf>
	BIT_ON(MCUCR,SRE); //SET THIS IN SOME INITALIZE FUNBCTION
     ad4:	85 b7       	in	r24, 0x35	; 53
     ad6:	80 68       	ori	r24, 0x80	; 128
     ad8:	85 bf       	out	0x35, r24	; 53
	
	
	BIT_ON(SFIOR,XMM2);//HVORFOR GJORDE DE DETTE I OLED?
     ada:	80 b7       	in	r24, 0x30	; 48
     adc:	80 62       	ori	r24, 0x20	; 32
     ade:	80 bf       	out	0x30, r24	; 48
	
	oled_ini();
     ae0:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <oled_ini>
	printf("OLED successfully initialized\n");
     ae4:	8b ef       	ldi	r24, 0xFB	; 251
     ae6:	92 e0       	ldi	r25, 0x02	; 2
     ae8:	0e 94 bc 0c 	call	0x1978	; 0x1978 <puts>
	initialize_menu();
     aec:	0e 94 ce 05 	call	0xb9c	; 0xb9c <initialize_menu>
	
	initialize_control_input();
     af0:	0e 94 77 04 	call	0x8ee	; 0x8ee <initialize_control_input>
	printf("control input successfully initialized\n\n");
     af4:	89 e1       	ldi	r24, 0x19	; 25
     af6:	93 e0       	ldi	r25, 0x03	; 3
     af8:	0e 94 bc 0c 	call	0x1978	; 0x1978 <puts>
	SRAM_test();
     afc:	0e 94 ce 04 	call	0x99c	; 0x99c <SRAM_test>
	printf("SRAM successfully initialized\n");
     b00:	81 e4       	ldi	r24, 0x41	; 65
     b02:	93 e0       	ldi	r25, 0x03	; 3
     b04:	0e 94 bc 0c 	call	0x1978	; 0x1978 <puts>
	initalize_interrupts();
     b08:	0e 94 37 02 	call	0x46e	; 0x46e <initalize_interrupts>
	printf("Interrupts successfully initialized\n");
     b0c:	8f e5       	ldi	r24, 0x5F	; 95
     b0e:	93 e0       	ldi	r25, 0x03	; 3
     b10:	0e 94 bc 0c 	call	0x1978	; 0x1978 <puts>
	printf("Interrupts activated\n");
     b14:	83 e8       	ldi	r24, 0x83	; 131
     b16:	93 e0       	ldi	r25, 0x03	; 3
     b18:	0e 94 bc 0c 	call	0x1978	; 0x1978 <puts>
	printf("\nINITIALIZATION COMPLETE\n");
     b1c:	88 e9       	ldi	r24, 0x98	; 152
     b1e:	93 e0       	ldi	r25, 0x03	; 3
     b20:	0e 94 bc 0c 	call	0x1978	; 0x1978 <puts>
	sei();//enable interrupts
     b24:	78 94       	sei
     b26:	8d b7       	in	r24, 0x3d	; 61
     b28:	9e b7       	in	r25, 0x3e	; 62
     b2a:	08 96       	adiw	r24, 0x08	; 8
     b2c:	0f b6       	in	r0, 0x3f	; 63
     b2e:	f8 94       	cli
     b30:	9e bf       	out	0x3e, r25	; 62
     b32:	0f be       	out	0x3f, r0	; 63
     b34:	8d bf       	out	0x3d, r24	; 61
     b36:	08 95       	ret

00000b38 <main>:
#include "menu.h"

int main(void)
{
	
	initalize();
     b38:	0e 94 53 05 	call	0xaa6	; 0xaa6 <initalize>
	
	sram_init();
     b3c:	0e 94 c3 07 	call	0xf86	; 0xf86 <sram_init>
	sram_write_char('W');
     b40:	87 e5       	ldi	r24, 0x57	; 87
     b42:	0e 94 6f 07 	call	0xede	; 0xede <sram_write_char>
	
	//sram_draw_line(0,0,63,31);
	//sram_draw_line(64,31,127,0);
	//sram_draw_circle(64,32,71);
	write_screen();
     b46:	0e 94 0a 09 	call	0x1214	; 0x1214 <write_screen>
	sram_draw_circle(64,32,61);
     b4a:	4d e3       	ldi	r20, 0x3D	; 61
     b4c:	50 e0       	ldi	r21, 0x00	; 0
     b4e:	60 e2       	ldi	r22, 0x20	; 32
     b50:	70 e0       	ldi	r23, 0x00	; 0
     b52:	80 e4       	ldi	r24, 0x40	; 64
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	0e 94 32 08 	call	0x1064	; 0x1064 <sram_draw_circle>
	write_screen();
     b5a:	0e 94 0a 09 	call	0x1214	; 0x1214 <write_screen>
	//sram_draw_circle(64,32,51);
	write_screen();
     b5e:	0e 94 0a 09 	call	0x1214	; 0x1214 <write_screen>
	//sram_draw_circle(64,32,41);
	write_screen();
     b62:	0e 94 0a 09 	call	0x1214	; 0x1214 <write_screen>
	sram_draw_circle(64,32,31);
     b66:	4f e1       	ldi	r20, 0x1F	; 31
     b68:	50 e0       	ldi	r21, 0x00	; 0
     b6a:	60 e2       	ldi	r22, 0x20	; 32
     b6c:	70 e0       	ldi	r23, 0x00	; 0
     b6e:	80 e4       	ldi	r24, 0x40	; 64
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	0e 94 32 08 	call	0x1064	; 0x1064 <sram_draw_circle>
	write_screen();
     b76:	0e 94 0a 09 	call	0x1214	; 0x1214 <write_screen>
	//sram_draw_circle(64,32,21);
	write_screen();
     b7a:	0e 94 0a 09 	call	0x1214	; 0x1214 <write_screen>
	
	sram_write_string("HI there!");
     b7e:	81 eb       	ldi	r24, 0xB1	; 177
     b80:	93 e0       	ldi	r25, 0x03	; 3
     b82:	0e 94 b8 07 	call	0xf70	; 0xf70 <sram_write_string>
	//sram_draw_circle(64,32,11);
	write_screen();
     b86:	0e 94 0a 09 	call	0x1214	; 0x1214 <write_screen>
	printf("test");
     b8a:	8b eb       	ldi	r24, 0xBB	; 187
     b8c:	93 e0       	ldi	r25, 0x03	; 3
     b8e:	9f 93       	push	r25
     b90:	8f 93       	push	r24
     b92:	0e 94 a8 0c 	call	0x1950	; 0x1950 <printf>
     b96:	0f 90       	pop	r0
     b98:	0f 90       	pop	r0
     b9a:	ff cf       	rjmp	.-2      	; 0xb9a <main+0x62>

00000b9c <initialize_menu>:
menu mainmenu_0;//Highscore
menu mainmenu_1;
menu mainmenu_2;
//menu mainmenu_3;

void initialize_menu(void){
     b9c:	cf 93       	push	r28
     b9e:	df 93       	push	r29
menu* current_selected;

void setup_menu(menu * new_menu, menu * ptr_sib_down, menu * ptr_parent, menu * ptr_child, int n_sib, PGM_P title){
	//new_menu->ptr_self = new_menu;
	//new_menu->ptr_sib_up = ptr_sib_up;
	new_menu->ptr_sib_down = ptr_sib_down;
     ba0:	cd e1       	ldi	r28, 0x1D	; 29
     ba2:	d4 e0       	ldi	r29, 0x04	; 4
     ba4:	d0 93 04 04 	sts	0x0404, r29
     ba8:	c0 93 03 04 	sts	0x0403, r28
	new_menu->ptr_child = ptr_child;
     bac:	10 92 06 04 	sts	0x0406, r1
     bb0:	10 92 05 04 	sts	0x0405, r1
	new_menu->ptr_parent = ptr_parent;
     bb4:	10 92 08 04 	sts	0x0408, r1
     bb8:	10 92 07 04 	sts	0x0407, r1
	
	new_menu->title = title;
     bbc:	ef ef       	ldi	r30, 0xFF	; 255
     bbe:	f3 e0       	ldi	r31, 0x03	; 3
     bc0:	88 eb       	ldi	r24, 0xB8	; 184
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	91 83       	std	Z+1, r25	; 0x01
     bc6:	80 83       	st	Z, r24
	new_menu->n_sib = n_sib;
     bc8:	83 e0       	ldi	r24, 0x03	; 3
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	90 93 02 04 	sts	0x0402, r25
     bd0:	80 93 01 04 	sts	0x0401, r24
menu* current_selected;

void setup_menu(menu * new_menu, menu * ptr_sib_down, menu * ptr_parent, menu * ptr_child, int n_sib, PGM_P title){
	//new_menu->ptr_self = new_menu;
	//new_menu->ptr_sib_up = ptr_sib_up;
	new_menu->ptr_sib_down = ptr_sib_down;
     bd4:	25 ed       	ldi	r18, 0xD5	; 213
     bd6:	33 e0       	ldi	r19, 0x03	; 3
     bd8:	30 93 22 04 	sts	0x0422, r19
     bdc:	20 93 21 04 	sts	0x0421, r18
	new_menu->ptr_child = ptr_child;
     be0:	69 e0       	ldi	r22, 0x09	; 9
     be2:	74 e0       	ldi	r23, 0x04	; 4
     be4:	70 93 24 04 	sts	0x0424, r23
     be8:	60 93 23 04 	sts	0x0423, r22
	new_menu->ptr_parent = ptr_parent;
     bec:	10 92 26 04 	sts	0x0426, r1
     bf0:	10 92 25 04 	sts	0x0425, r1
	
	new_menu->title = title;
     bf4:	4c ea       	ldi	r20, 0xAC	; 172
     bf6:	50 e0       	ldi	r21, 0x00	; 0
     bf8:	59 83       	std	Y+1, r21	; 0x01
     bfa:	48 83       	st	Y, r20
	new_menu->n_sib = n_sib;
     bfc:	90 93 20 04 	sts	0x0420, r25
     c00:	80 93 1f 04 	sts	0x041F, r24
menu* current_selected;

void setup_menu(menu * new_menu, menu * ptr_sib_down, menu * ptr_parent, menu * ptr_child, int n_sib, PGM_P title){
	//new_menu->ptr_self = new_menu;
	//new_menu->ptr_sib_up = ptr_sib_up;
	new_menu->ptr_sib_down = ptr_sib_down;
     c04:	f0 93 da 03 	sts	0x03DA, r31
     c08:	e0 93 d9 03 	sts	0x03D9, r30
	new_menu->ptr_child = ptr_child;
     c0c:	cb ee       	ldi	r28, 0xEB	; 235
     c0e:	d3 e0       	ldi	r29, 0x03	; 3
     c10:	d0 93 dc 03 	sts	0x03DC, r29
     c14:	c0 93 db 03 	sts	0x03DB, r28
	new_menu->ptr_parent = ptr_parent;
     c18:	10 92 de 03 	sts	0x03DE, r1
     c1c:	10 92 dd 03 	sts	0x03DD, r1
	
	new_menu->title = title;
     c20:	40 ea       	ldi	r20, 0xA0	; 160
     c22:	50 e0       	ldi	r21, 0x00	; 0
     c24:	d9 01       	movw	r26, r18
     c26:	4d 93       	st	X+, r20
     c28:	5c 93       	st	X, r21
	new_menu->n_sib = n_sib;
     c2a:	90 93 d8 03 	sts	0x03D8, r25
     c2e:	80 93 d7 03 	sts	0x03D7, r24
menu* current_selected;

void setup_menu(menu * new_menu, menu * ptr_sib_down, menu * ptr_parent, menu * ptr_child, int n_sib, PGM_P title){
	//new_menu->ptr_self = new_menu;
	//new_menu->ptr_sib_up = ptr_sib_up;
	new_menu->ptr_sib_down = ptr_sib_down;
     c32:	25 ef       	ldi	r18, 0xF5	; 245
     c34:	33 e0       	ldi	r19, 0x03	; 3
     c36:	30 93 f0 03 	sts	0x03F0, r19
     c3a:	20 93 ef 03 	sts	0x03EF, r18
	new_menu->ptr_child = ptr_child;
     c3e:	10 92 f2 03 	sts	0x03F2, r1
     c42:	10 92 f1 03 	sts	0x03F1, r1
	new_menu->ptr_parent = ptr_parent;
     c46:	f0 93 f4 03 	sts	0x03F4, r31
     c4a:	e0 93 f3 03 	sts	0x03F3, r30
	
	new_menu->title = title;
     c4e:	84 e9       	ldi	r24, 0x94	; 148
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	99 83       	std	Y+1, r25	; 0x01
     c54:	88 83       	st	Y, r24
	new_menu->n_sib = n_sib;
     c56:	82 e0       	ldi	r24, 0x02	; 2
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	90 93 ee 03 	sts	0x03EE, r25
     c5e:	80 93 ed 03 	sts	0x03ED, r24
menu* current_selected;

void setup_menu(menu * new_menu, menu * ptr_sib_down, menu * ptr_parent, menu * ptr_child, int n_sib, PGM_P title){
	//new_menu->ptr_self = new_menu;
	//new_menu->ptr_sib_up = ptr_sib_up;
	new_menu->ptr_sib_down = ptr_sib_down;
     c62:	d0 93 fa 03 	sts	0x03FA, r29
     c66:	c0 93 f9 03 	sts	0x03F9, r28
	new_menu->ptr_child = ptr_child;
     c6a:	10 92 fc 03 	sts	0x03FC, r1
     c6e:	10 92 fb 03 	sts	0x03FB, r1
	new_menu->ptr_parent = ptr_parent;
     c72:	f0 93 fe 03 	sts	0x03FE, r31
     c76:	e0 93 fd 03 	sts	0x03FD, r30
	
	new_menu->title = title;
     c7a:	48 e8       	ldi	r20, 0x88	; 136
     c7c:	50 e0       	ldi	r21, 0x00	; 0
     c7e:	d9 01       	movw	r26, r18
     c80:	4d 93       	st	X+, r20
     c82:	5c 93       	st	X, r21
	new_menu->n_sib = n_sib;
     c84:	90 93 f8 03 	sts	0x03F8, r25
     c88:	80 93 f7 03 	sts	0x03F7, r24
menu* current_selected;

void setup_menu(menu * new_menu, menu * ptr_sib_down, menu * ptr_parent, menu * ptr_child, int n_sib, PGM_P title){
	//new_menu->ptr_self = new_menu;
	//new_menu->ptr_sib_up = ptr_sib_up;
	new_menu->ptr_sib_down = ptr_sib_down;
     c8c:	c3 e1       	ldi	r28, 0x13	; 19
     c8e:	d4 e0       	ldi	r29, 0x04	; 4
     c90:	d0 93 0e 04 	sts	0x040E, r29
     c94:	c0 93 0d 04 	sts	0x040D, r28
	new_menu->ptr_child = ptr_child;
     c98:	10 92 10 04 	sts	0x0410, r1
     c9c:	10 92 0f 04 	sts	0x040F, r1
	new_menu->ptr_parent = ptr_parent;
     ca0:	f0 93 12 04 	sts	0x0412, r31
     ca4:	e0 93 11 04 	sts	0x0411, r30
	
	new_menu->title = title;
     ca8:	2c e7       	ldi	r18, 0x7C	; 124
     caa:	30 e0       	ldi	r19, 0x00	; 0
     cac:	db 01       	movw	r26, r22
     cae:	2d 93       	st	X+, r18
     cb0:	3c 93       	st	X, r19
	new_menu->n_sib = n_sib;
     cb2:	90 93 0c 04 	sts	0x040C, r25
     cb6:	80 93 0b 04 	sts	0x040B, r24
menu* current_selected;

void setup_menu(menu * new_menu, menu * ptr_sib_down, menu * ptr_parent, menu * ptr_child, int n_sib, PGM_P title){
	//new_menu->ptr_self = new_menu;
	//new_menu->ptr_sib_up = ptr_sib_up;
	new_menu->ptr_sib_down = ptr_sib_down;
     cba:	70 93 18 04 	sts	0x0418, r23
     cbe:	60 93 17 04 	sts	0x0417, r22
	new_menu->ptr_child = ptr_child;
     cc2:	10 92 1a 04 	sts	0x041A, r1
     cc6:	10 92 19 04 	sts	0x0419, r1
	new_menu->ptr_parent = ptr_parent;
     cca:	f0 93 1c 04 	sts	0x041C, r31
     cce:	e0 93 1b 04 	sts	0x041B, r30
	
	new_menu->title = title;
     cd2:	20 e7       	ldi	r18, 0x70	; 112
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	39 83       	std	Y+1, r19	; 0x01
     cd8:	28 83       	st	Y, r18
	new_menu->n_sib = n_sib;
     cda:	90 93 16 04 	sts	0x0416, r25
     cde:	80 93 15 04 	sts	0x0415, r24

	setup_menu(&debug_0,&debug_1,&mainmenu_0,NULL,2,debug_entry_0);
	setup_menu(&debug_1,&debug_0,&mainmenu_0,NULL,2,debug_entry_1);
	
	// current_head is the top entry of the current menu.
	current_head = &mainmenu_0;
     ce2:	f0 93 d2 03 	sts	0x03D2, r31
     ce6:	e0 93 d1 03 	sts	0x03D1, r30
	
	// current_selected is the selected menu entry of the current menu.
	current_selected = &mainmenu_0;
     cea:	f0 93 d4 03 	sts	0x03D4, r31
     cee:	e0 93 d3 03 	sts	0x03D3, r30
	
}
     cf2:	df 91       	pop	r29
     cf4:	cf 91       	pop	r28
     cf6:	08 95       	ret

00000cf8 <oled_home>:
	}
}

void oled_home(void)
{
	page = 0;
     cf8:	10 92 2a 04 	sts	0x042A, r1
     cfc:	10 92 29 04 	sts	0x0429, r1
	col = 0;
     d00:	10 92 28 04 	sts	0x0428, r1
     d04:	10 92 27 04 	sts	0x0427, r1

int page,col;

void write_c(uint8_t cmd)
{
	*oled_cmd = cmd;
     d08:	e0 91 0e 01 	lds	r30, 0x010E
     d0c:	f0 91 0f 01 	lds	r31, 0x010F
     d10:	81 e2       	ldi	r24, 0x21	; 33
     d12:	80 83       	st	Z, r24
     d14:	e0 91 0e 01 	lds	r30, 0x010E
     d18:	f0 91 0f 01 	lds	r31, 0x010F
     d1c:	10 82       	st	Z, r1
     d1e:	e0 91 0e 01 	lds	r30, 0x010E
     d22:	f0 91 0f 01 	lds	r31, 0x010F
     d26:	8f e7       	ldi	r24, 0x7F	; 127
     d28:	80 83       	st	Z, r24
     d2a:	e0 91 0e 01 	lds	r30, 0x010E
     d2e:	f0 91 0f 01 	lds	r31, 0x010F
     d32:	82 e2       	ldi	r24, 0x22	; 34
     d34:	80 83       	st	Z, r24
     d36:	e0 91 0e 01 	lds	r30, 0x010E
     d3a:	f0 91 0f 01 	lds	r31, 0x010F
     d3e:	10 82       	st	Z, r1
     d40:	e0 91 0e 01 	lds	r30, 0x010E
     d44:	f0 91 0f 01 	lds	r31, 0x010F
     d48:	87 e0       	ldi	r24, 0x07	; 7
     d4a:	80 83       	st	Z, r24
     d4c:	08 95       	ret

00000d4e <oled_goto_line>:
	//write_c(0x10);
}



void oled_goto_line(unsigned int line){
     d4e:	cf 93       	push	r28
     d50:	df 93       	push	r29
     d52:	ec 01       	movw	r28, r24
	oled_home();
     d54:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <oled_home>
	page = line;
     d58:	d0 93 2a 04 	sts	0x042A, r29
     d5c:	c0 93 29 04 	sts	0x0429, r28
	if(line < 8){
     d60:	c8 30       	cpi	r28, 0x08	; 8
     d62:	d1 05       	cpc	r29, r1
     d64:	88 f4       	brcc	.+34     	; 0xd88 <oled_goto_line+0x3a>

int page,col;

void write_c(uint8_t cmd)
{
	*oled_cmd = cmd;
     d66:	e0 91 0e 01 	lds	r30, 0x010E
     d6a:	f0 91 0f 01 	lds	r31, 0x010F
     d6e:	10 82       	st	Z, r1
     d70:	e0 91 0e 01 	lds	r30, 0x010E
     d74:	f0 91 0f 01 	lds	r31, 0x010F
     d78:	80 e1       	ldi	r24, 0x10	; 16
     d7a:	80 83       	st	Z, r24
	oled_home();
	page = line;
	if(line < 8){
		write_c(0x00);
		write_c(0x10);
		write_c(0xB0 | line);
     d7c:	c0 6b       	ori	r28, 0xB0	; 176

int page,col;

void write_c(uint8_t cmd)
{
	*oled_cmd = cmd;
     d7e:	e0 91 0e 01 	lds	r30, 0x010E
     d82:	f0 91 0f 01 	lds	r31, 0x010F
     d86:	c0 83       	st	Z, r28
	if(line < 8){
		write_c(0x00);
		write_c(0x10);
		write_c(0xB0 | line);
	}
}
     d88:	df 91       	pop	r29
     d8a:	cf 91       	pop	r28
     d8c:	08 95       	ret

00000d8e <oled_clear_line>:
		printf("parameter too big, oled_goto_column\n");
	}
}

void oled_clear_line(unsigned int line){
	if(line < 8){
     d8e:	08 97       	sbiw	r24, 0x08	; 8
     d90:	50 f4       	brcc	.+20     	; 0xda6 <oled_clear_line+0x18>
     d92:	80 e8       	ldi	r24, 0x80	; 128
     d94:	90 e0       	ldi	r25, 0x00	; 0
}


void write_d(uint8_t data)
{
	*oled_data = data;
     d96:	e0 91 0c 01 	lds	r30, 0x010C
     d9a:	f0 91 0d 01 	lds	r31, 0x010D
     d9e:	10 82       	st	Z, r1
     da0:	01 97       	sbiw	r24, 0x01	; 1
	}
}

void oled_clear_line(unsigned int line){
	if(line < 8){
		for(unsigned int i = 0; i < 128; i++){
     da2:	00 97       	sbiw	r24, 0x00	; 0
     da4:	c1 f7       	brne	.-16     	; 0xd96 <oled_clear_line+0x8>
     da6:	08 95       	ret

00000da8 <oled_reset>:

}


void oled_reset(void)
{		
     da8:	cf 93       	push	r28
     daa:	df 93       	push	r29
	for(int i = 0; i < 8;i++){
     dac:	c0 e0       	ldi	r28, 0x00	; 0
     dae:	d0 e0       	ldi	r29, 0x00	; 0
		oled_clear_line(i);
     db0:	ce 01       	movw	r24, r28
     db2:	0e 94 c7 06 	call	0xd8e	; 0xd8e <oled_clear_line>
}


void oled_reset(void)
{		
	for(int i = 0; i < 8;i++){
     db6:	21 96       	adiw	r28, 0x01	; 1
     db8:	c8 30       	cpi	r28, 0x08	; 8
     dba:	d1 05       	cpc	r29, r1
     dbc:	c9 f7       	brne	.-14     	; 0xdb0 <oled_reset+0x8>
		oled_clear_line(i);
	}
}
     dbe:	df 91       	pop	r29
     dc0:	cf 91       	pop	r28
     dc2:	08 95       	ret

00000dc4 <oled_ini>:


void oled_ini(void)
{
	//Enable the external memory interface
	MCUCR |= (1<<SRE);
     dc4:	85 b7       	in	r24, 0x35	; 53
     dc6:	80 68       	ori	r24, 0x80	; 128
     dc8:	85 bf       	out	0x35, r24	; 53
	SFIOR |= (1<<XMM2);
     dca:	80 b7       	in	r24, 0x30	; 48
     dcc:	80 62       	ori	r24, 0x20	; 32
     dce:	80 bf       	out	0x30, r24	; 48

int page,col;

void write_c(uint8_t cmd)
{
	*oled_cmd = cmd;
     dd0:	e0 91 0e 01 	lds	r30, 0x010E
     dd4:	f0 91 0f 01 	lds	r31, 0x010F
     dd8:	8e ea       	ldi	r24, 0xAE	; 174
     dda:	80 83       	st	Z, r24
     ddc:	e0 91 0e 01 	lds	r30, 0x010E
     de0:	f0 91 0f 01 	lds	r31, 0x010F
     de4:	81 ea       	ldi	r24, 0xA1	; 161
     de6:	80 83       	st	Z, r24
     de8:	e0 91 0e 01 	lds	r30, 0x010E
     dec:	f0 91 0f 01 	lds	r31, 0x010F
     df0:	8a ed       	ldi	r24, 0xDA	; 218
     df2:	80 83       	st	Z, r24
     df4:	e0 91 0e 01 	lds	r30, 0x010E
     df8:	f0 91 0f 01 	lds	r31, 0x010F
     dfc:	82 e1       	ldi	r24, 0x12	; 18
     dfe:	80 83       	st	Z, r24
     e00:	e0 91 0e 01 	lds	r30, 0x010E
     e04:	f0 91 0f 01 	lds	r31, 0x010F
     e08:	88 ec       	ldi	r24, 0xC8	; 200
     e0a:	80 83       	st	Z, r24
     e0c:	e0 91 0e 01 	lds	r30, 0x010E
     e10:	f0 91 0f 01 	lds	r31, 0x010F
     e14:	88 ea       	ldi	r24, 0xA8	; 168
     e16:	80 83       	st	Z, r24
     e18:	e0 91 0e 01 	lds	r30, 0x010E
     e1c:	f0 91 0f 01 	lds	r31, 0x010F
     e20:	8f e3       	ldi	r24, 0x3F	; 63
     e22:	80 83       	st	Z, r24
     e24:	e0 91 0e 01 	lds	r30, 0x010E
     e28:	f0 91 0f 01 	lds	r31, 0x010F
     e2c:	85 ed       	ldi	r24, 0xD5	; 213
     e2e:	80 83       	st	Z, r24
     e30:	e0 91 0e 01 	lds	r30, 0x010E
     e34:	f0 91 0f 01 	lds	r31, 0x010F
     e38:	80 e8       	ldi	r24, 0x80	; 128
     e3a:	80 83       	st	Z, r24
     e3c:	e0 91 0e 01 	lds	r30, 0x010E
     e40:	f0 91 0f 01 	lds	r31, 0x010F
     e44:	81 e8       	ldi	r24, 0x81	; 129
     e46:	80 83       	st	Z, r24
     e48:	e0 91 0e 01 	lds	r30, 0x010E
     e4c:	f0 91 0f 01 	lds	r31, 0x010F
     e50:	80 e5       	ldi	r24, 0x50	; 80
     e52:	80 83       	st	Z, r24
     e54:	e0 91 0e 01 	lds	r30, 0x010E
     e58:	f0 91 0f 01 	lds	r31, 0x010F
     e5c:	89 ed       	ldi	r24, 0xD9	; 217
     e5e:	80 83       	st	Z, r24
     e60:	e0 91 0e 01 	lds	r30, 0x010E
     e64:	f0 91 0f 01 	lds	r31, 0x010F
     e68:	81 e2       	ldi	r24, 0x21	; 33
     e6a:	80 83       	st	Z, r24
     e6c:	e0 91 0e 01 	lds	r30, 0x010E
     e70:	f0 91 0f 01 	lds	r31, 0x010F
     e74:	80 e2       	ldi	r24, 0x20	; 32
     e76:	80 83       	st	Z, r24
     e78:	e0 91 0e 01 	lds	r30, 0x010E
     e7c:	f0 91 0f 01 	lds	r31, 0x010F
     e80:	10 82       	st	Z, r1
     e82:	e0 91 0e 01 	lds	r30, 0x010E
     e86:	f0 91 0f 01 	lds	r31, 0x010F
     e8a:	8b ed       	ldi	r24, 0xDB	; 219
     e8c:	80 83       	st	Z, r24
     e8e:	e0 91 0e 01 	lds	r30, 0x010E
     e92:	f0 91 0f 01 	lds	r31, 0x010F
     e96:	80 e3       	ldi	r24, 0x30	; 48
     e98:	80 83       	st	Z, r24
     e9a:	e0 91 0e 01 	lds	r30, 0x010E
     e9e:	f0 91 0f 01 	lds	r31, 0x010F
     ea2:	8d ea       	ldi	r24, 0xAD	; 173
     ea4:	80 83       	st	Z, r24
     ea6:	e0 91 0e 01 	lds	r30, 0x010E
     eaa:	f0 91 0f 01 	lds	r31, 0x010F
     eae:	10 82       	st	Z, r1
     eb0:	e0 91 0e 01 	lds	r30, 0x010E
     eb4:	f0 91 0f 01 	lds	r31, 0x010F
     eb8:	84 ea       	ldi	r24, 0xA4	; 164
     eba:	80 83       	st	Z, r24
     ebc:	e0 91 0e 01 	lds	r30, 0x010E
     ec0:	f0 91 0f 01 	lds	r31, 0x010F
     ec4:	86 ea       	ldi	r24, 0xA6	; 166
     ec6:	80 83       	st	Z, r24
     ec8:	e0 91 0e 01 	lds	r30, 0x010E
     ecc:	f0 91 0f 01 	lds	r31, 0x010F
     ed0:	8f ea       	ldi	r24, 0xAF	; 175
     ed2:	80 83       	st	Z, r24
	write_c(0xa4);        //out  follows  RAM  content
	write_c(0xa6);        //set  normal  display
	write_c(0xaf);        //  display  on
	
	
	oled_reset();
     ed4:	0e 94 d4 06 	call	0xda8	; 0xda8 <oled_reset>
	oled_home();
     ed8:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <oled_home>
     edc:	08 95       	ret

00000ede <sram_write_char>:
	while (sram_write_char(letters[i++])){
	}
}

int sram_write_char(char letter){
	if(letter != '\0'){
     ede:	88 23       	and	r24, r24
     ee0:	09 f4       	brne	.+2      	; 0xee4 <sram_write_char+0x6>
     ee2:	43 c0       	rjmp	.+134    	; 0xf6a <sram_write_char+0x8c>
     ee4:	e8 2f       	mov	r30, r24
     ee6:	f0 e0       	ldi	r31, 0x00	; 0
     ee8:	ee 0f       	add	r30, r30
     eea:	ff 1f       	adc	r31, r31
     eec:	ee 0f       	add	r30, r30
     eee:	ff 1f       	adc	r31, r31
     ef0:	ee 0f       	add	r30, r30
     ef2:	ff 1f       	adc	r31, r31
     ef4:	ec 53       	subi	r30, 0x3C	; 60
     ef6:	f0 40       	sbci	r31, 0x00	; 0
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	90 e0       	ldi	r25, 0x00	; 0
		for(unsigned int i = 0; i < 8; i++){
			ext_ram[page_sram*128 + col_sram] = pgm_read_byte(&font[letter-' '][i]);
     efc:	a0 91 cf 03 	lds	r26, 0x03CF
     f00:	b0 91 d0 03 	lds	r27, 0x03D0
     f04:	b6 95       	lsr	r27
     f06:	ba 2f       	mov	r27, r26
     f08:	aa 27       	eor	r26, r26
     f0a:	b7 95       	ror	r27
     f0c:	a7 95       	ror	r26
     f0e:	20 91 cd 03 	lds	r18, 0x03CD
     f12:	30 91 ce 03 	lds	r19, 0x03CE
     f16:	a2 0f       	add	r26, r18
     f18:	b3 1f       	adc	r27, r19
     f1a:	20 91 0a 01 	lds	r18, 0x010A
     f1e:	30 91 0b 01 	lds	r19, 0x010B
     f22:	a2 0f       	add	r26, r18
     f24:	b3 1f       	adc	r27, r19
     f26:	24 91       	lpm	r18, Z
     f28:	2c 93       	st	X, r18
			col_sram++;
     f2a:	20 91 cd 03 	lds	r18, 0x03CD
     f2e:	30 91 ce 03 	lds	r19, 0x03CE
     f32:	2f 5f       	subi	r18, 0xFF	; 255
     f34:	3f 4f       	sbci	r19, 0xFF	; 255
     f36:	30 93 ce 03 	sts	0x03CE, r19
     f3a:	20 93 cd 03 	sts	0x03CD, r18
	}
}

int sram_write_char(char letter){
	if(letter != '\0'){
		for(unsigned int i = 0; i < 8; i++){
     f3e:	01 96       	adiw	r24, 0x01	; 1
     f40:	31 96       	adiw	r30, 0x01	; 1
     f42:	88 30       	cpi	r24, 0x08	; 8
     f44:	91 05       	cpc	r25, r1
     f46:	d1 f6       	brne	.-76     	; 0xefc <sram_write_char+0x1e>
			ext_ram[page_sram*128 + col_sram] = pgm_read_byte(&font[letter-' '][i]);
			col_sram++;
		}
		edited |= (0b00000001 << page_sram);
     f48:	81 e0       	ldi	r24, 0x01	; 1
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	00 90 cf 03 	lds	r0, 0x03CF
     f50:	02 c0       	rjmp	.+4      	; 0xf56 <sram_write_char+0x78>
     f52:	88 0f       	add	r24, r24
     f54:	99 1f       	adc	r25, r25
     f56:	0a 94       	dec	r0
     f58:	e2 f7       	brpl	.-8      	; 0xf52 <sram_write_char+0x74>
     f5a:	90 91 cc 03 	lds	r25, 0x03CC
     f5e:	89 2b       	or	r24, r25
     f60:	80 93 cc 03 	sts	0x03CC, r24
		return 1;
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	08 95       	ret
	}else{
		return 0;
     f6a:	80 e0       	ldi	r24, 0x00	; 0
     f6c:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     f6e:	08 95       	ret

00000f70 <sram_write_string>:


//char screendata[8][128][8]; //line, col, data(8)
volatile char *ext_ram = (char *) 0x1800;

void sram_write_string(char letters[]){
     f70:	cf 93       	push	r28
     f72:	df 93       	push	r29
     f74:	ec 01       	movw	r28, r24
	unsigned int i = 0;
	while (sram_write_char(letters[i++])){
     f76:	89 91       	ld	r24, Y+
     f78:	0e 94 6f 07 	call	0xede	; 0xede <sram_write_char>
     f7c:	89 2b       	or	r24, r25
     f7e:	d9 f7       	brne	.-10     	; 0xf76 <sram_write_string+0x6>
	}
}
     f80:	df 91       	pop	r29
     f82:	cf 91       	pop	r28
     f84:	08 95       	ret

00000f86 <sram_init>:
	}else{
		return 0;
	}
}

void sram_init(void){
     f86:	40 e0       	ldi	r20, 0x00	; 0
     f88:	50 e0       	ldi	r21, 0x00	; 0
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	60 e0       	ldi	r22, 0x00	; 0
     f8e:	14 c0       	rjmp	.+40     	; 0xfb8 <sram_init+0x32>
	for(unsigned int r = 0; r < 8; r++){
		for(unsigned int k = 0; k < 128; k++){
			ext_ram[r*128+k] = 0b00000000;
     f90:	9c 01       	movw	r18, r24
     f92:	24 0f       	add	r18, r20
     f94:	35 1f       	adc	r19, r21
     f96:	e0 91 0a 01 	lds	r30, 0x010A
     f9a:	f0 91 0b 01 	lds	r31, 0x010B
     f9e:	e2 0f       	add	r30, r18
     fa0:	f3 1f       	adc	r31, r19
     fa2:	10 82       	st	Z, r1
	}
}

void sram_init(void){
	for(unsigned int r = 0; r < 8; r++){
		for(unsigned int k = 0; k < 128; k++){
     fa4:	01 96       	adiw	r24, 0x01	; 1
     fa6:	80 38       	cpi	r24, 0x80	; 128
     fa8:	91 05       	cpc	r25, r1
     faa:	91 f7       	brne	.-28     	; 0xf90 <sram_init+0xa>
     fac:	40 58       	subi	r20, 0x80	; 128
     fae:	5f 4f       	sbci	r21, 0xFF	; 255
		return 0;
	}
}

void sram_init(void){
	for(unsigned int r = 0; r < 8; r++){
     fb0:	41 15       	cp	r20, r1
     fb2:	84 e0       	ldi	r24, 0x04	; 4
     fb4:	58 07       	cpc	r21, r24
     fb6:	19 f0       	breq	.+6      	; 0xfbe <sram_init+0x38>
	}else{
		return 0;
	}
}

void sram_init(void){
     fb8:	87 2f       	mov	r24, r23
     fba:	96 2f       	mov	r25, r22
     fbc:	e9 cf       	rjmp	.-46     	; 0xf90 <sram_init+0xa>
	for(unsigned int r = 0; r < 8; r++){
		for(unsigned int k = 0; k < 128; k++){
			ext_ram[r*128+k] = 0b00000000;
		}
	}
	edited = 0b11111111;
     fbe:	8f ef       	ldi	r24, 0xFF	; 255
     fc0:	80 93 cc 03 	sts	0x03CC, r24
     fc4:	08 95       	ret

00000fc6 <sram_write_or>:
	ext_ram[page*128 + col] &= data;
	edited |= 1 << page;
}

void sram_write_or(int page, int col, char data){
	ext_ram[page*128 + col] |= data;
     fc6:	fc 01       	movw	r30, r24
     fc8:	f6 95       	lsr	r31
     fca:	fe 2f       	mov	r31, r30
     fcc:	ee 27       	eor	r30, r30
     fce:	f7 95       	ror	r31
     fd0:	e7 95       	ror	r30
     fd2:	6e 0f       	add	r22, r30
     fd4:	7f 1f       	adc	r23, r31
     fd6:	e0 91 0a 01 	lds	r30, 0x010A
     fda:	f0 91 0b 01 	lds	r31, 0x010B
     fde:	e6 0f       	add	r30, r22
     fe0:	f7 1f       	adc	r31, r23
     fe2:	90 81       	ld	r25, Z
     fe4:	49 2b       	or	r20, r25
     fe6:	40 83       	st	Z, r20
	edited |= 1 << page;
     fe8:	21 e0       	ldi	r18, 0x01	; 1
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	a9 01       	movw	r20, r18
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <sram_write_or+0x2e>
     ff0:	44 0f       	add	r20, r20
     ff2:	55 1f       	adc	r21, r21
     ff4:	8a 95       	dec	r24
     ff6:	e2 f7       	brpl	.-8      	; 0xff0 <sram_write_or+0x2a>
     ff8:	ca 01       	movw	r24, r20
     ffa:	90 91 cc 03 	lds	r25, 0x03CC
     ffe:	89 2b       	or	r24, r25
    1000:	80 93 cc 03 	sts	0x03CC, r24
    1004:	08 95       	ret

00001006 <sram_pixel>:
}

int sram_pixel(int x, int y){
	if(x >= 0 && x < 128 && y >= 0 && y < 64){
    1006:	80 38       	cpi	r24, 0x80	; 128
    1008:	91 05       	cpc	r25, r1
    100a:	30 f5       	brcc	.+76     	; 0x1058 <sram_pixel+0x52>
    100c:	60 34       	cpi	r22, 0x40	; 64
    100e:	71 05       	cpc	r23, r1
    1010:	30 f5       	brcc	.+76     	; 0x105e <sram_pixel+0x58>
		sram_write_or((y/8),x,(1<<(y%8)));
    1012:	9b 01       	movw	r18, r22
    1014:	27 70       	andi	r18, 0x07	; 7
    1016:	30 78       	andi	r19, 0x80	; 128
    1018:	33 23       	and	r19, r19
    101a:	34 f4       	brge	.+12     	; 0x1028 <sram_pixel+0x22>
    101c:	21 50       	subi	r18, 0x01	; 1
    101e:	31 09       	sbc	r19, r1
    1020:	28 6f       	ori	r18, 0xF8	; 248
    1022:	3f 6f       	ori	r19, 0xFF	; 255
    1024:	2f 5f       	subi	r18, 0xFF	; 255
    1026:	3f 4f       	sbci	r19, 0xFF	; 255
    1028:	41 e0       	ldi	r20, 0x01	; 1
    102a:	50 e0       	ldi	r21, 0x00	; 0
    102c:	02 c0       	rjmp	.+4      	; 0x1032 <sram_pixel+0x2c>
    102e:	44 0f       	add	r20, r20
    1030:	55 1f       	adc	r21, r21
    1032:	2a 95       	dec	r18
    1034:	e2 f7       	brpl	.-8      	; 0x102e <sram_pixel+0x28>
    1036:	fb 01       	movw	r30, r22
    1038:	ff 23       	and	r31, r31
    103a:	0c f4       	brge	.+2      	; 0x103e <sram_pixel+0x38>
    103c:	37 96       	adiw	r30, 0x07	; 7
    103e:	bc 01       	movw	r22, r24
    1040:	cf 01       	movw	r24, r30
    1042:	95 95       	asr	r25
    1044:	87 95       	ror	r24
    1046:	95 95       	asr	r25
    1048:	87 95       	ror	r24
    104a:	95 95       	asr	r25
    104c:	87 95       	ror	r24
    104e:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <sram_write_or>
		return 1;
    1052:	81 e0       	ldi	r24, 0x01	; 1
    1054:	90 e0       	ldi	r25, 0x00	; 0
    1056:	08 95       	ret
	}
	return 0;
    1058:	80 e0       	ldi	r24, 0x00	; 0
    105a:	90 e0       	ldi	r25, 0x00	; 0
    105c:	08 95       	ret
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	90 e0       	ldi	r25, 0x00	; 0
}
    1062:	08 95       	ret

00001064 <sram_draw_circle>:
			sram_pixel(x,(gradient*(x-x0))+y0);
		}
	}
}

void sram_draw_circle(int x0, int y0, int radius){
    1064:	4f 92       	push	r4
    1066:	5f 92       	push	r5
    1068:	6f 92       	push	r6
    106a:	7f 92       	push	r7
    106c:	8f 92       	push	r8
    106e:	9f 92       	push	r9
    1070:	af 92       	push	r10
    1072:	bf 92       	push	r11
    1074:	cf 92       	push	r12
    1076:	df 92       	push	r13
    1078:	ef 92       	push	r14
    107a:	ff 92       	push	r15
    107c:	cf 93       	push	r28
    107e:	df 93       	push	r29
    1080:	cd b7       	in	r28, 0x3d	; 61
    1082:	de b7       	in	r29, 0x3e	; 62
    1084:	68 97       	sbiw	r28, 0x18	; 24
    1086:	0f b6       	in	r0, 0x3f	; 63
    1088:	f8 94       	cli
    108a:	de bf       	out	0x3e, r29	; 62
    108c:	0f be       	out	0x3f, r0	; 63
    108e:	cd bf       	out	0x3d, r28	; 61
    1090:	6c 01       	movw	r12, r24
    1092:	7b 01       	movw	r14, r22
    1094:	5a 01       	movw	r10, r20
	for(double x = -radius; x <= radius; x += 0.02){
    1096:	66 27       	eor	r22, r22
    1098:	77 27       	eor	r23, r23
    109a:	64 1b       	sub	r22, r20
    109c:	75 0b       	sbc	r23, r21
    109e:	88 27       	eor	r24, r24
    10a0:	77 fd       	sbrc	r23, 7
    10a2:	80 95       	com	r24
    10a4:	98 2f       	mov	r25, r24
    10a6:	0e 94 6d 0a 	call	0x14da	; 0x14da <__floatsisf>
    10aa:	2b 01       	movw	r4, r22
    10ac:	3c 01       	movw	r6, r24
    10ae:	b5 01       	movw	r22, r10
    10b0:	88 27       	eor	r24, r24
    10b2:	77 fd       	sbrc	r23, 7
    10b4:	80 95       	com	r24
    10b6:	98 2f       	mov	r25, r24
    10b8:	0e 94 6d 0a 	call	0x14da	; 0x14da <__floatsisf>
    10bc:	69 87       	std	Y+9, r22	; 0x09
    10be:	7a 87       	std	Y+10, r23	; 0x0a
    10c0:	8b 87       	std	Y+11, r24	; 0x0b
    10c2:	9c 87       	std	Y+12, r25	; 0x0c
    10c4:	9b 01       	movw	r18, r22
    10c6:	ac 01       	movw	r20, r24
    10c8:	c3 01       	movw	r24, r6
    10ca:	b2 01       	movw	r22, r4
    10cc:	0e 94 ce 09 	call	0x139c	; 0x139c <__cmpsf2>
    10d0:	18 16       	cp	r1, r24
    10d2:	0c f4       	brge	.+2      	; 0x10d6 <sram_draw_circle+0x72>
    10d4:	8a c0       	rjmp	.+276    	; 0x11ea <sram_draw_circle+0x186>
		sram_pixel(x+x0,y0-sqrt((pow(radius,2)-pow(x,2))));
    10d6:	29 85       	ldd	r18, Y+9	; 0x09
    10d8:	3a 85       	ldd	r19, Y+10	; 0x0a
    10da:	4b 85       	ldd	r20, Y+11	; 0x0b
    10dc:	5c 85       	ldd	r21, Y+12	; 0x0c
    10de:	ca 01       	movw	r24, r20
    10e0:	b9 01       	movw	r22, r18
    10e2:	0e 94 1d 0b 	call	0x163a	; 0x163a <__mulsf3>
    10e6:	6d 87       	std	Y+13, r22	; 0x0d
    10e8:	7e 87       	std	Y+14, r23	; 0x0e
    10ea:	8f 87       	std	Y+15, r24	; 0x0f
    10ec:	98 8b       	std	Y+16, r25	; 0x10
    10ee:	c7 01       	movw	r24, r14
    10f0:	aa 27       	eor	r26, r26
    10f2:	97 fd       	sbrc	r25, 7
    10f4:	a0 95       	com	r26
    10f6:	ba 2f       	mov	r27, r26
    10f8:	89 8b       	std	Y+17, r24	; 0x11
    10fa:	9a 8b       	std	Y+18, r25	; 0x12
    10fc:	ab 8b       	std	Y+19, r26	; 0x13
    10fe:	bc 8b       	std	Y+20, r27	; 0x14
    1100:	c6 01       	movw	r24, r12
    1102:	aa 27       	eor	r26, r26
    1104:	97 fd       	sbrc	r25, 7
    1106:	a0 95       	com	r26
    1108:	ba 2f       	mov	r27, r26
    110a:	8d 8b       	std	Y+21, r24	; 0x15
    110c:	9e 8b       	std	Y+22, r25	; 0x16
    110e:	af 8b       	std	Y+23, r26	; 0x17
    1110:	b8 8f       	std	Y+24, r27	; 0x18
    1112:	69 89       	ldd	r22, Y+17	; 0x11
    1114:	7a 89       	ldd	r23, Y+18	; 0x12
    1116:	8b 89       	ldd	r24, Y+19	; 0x13
    1118:	9c 89       	ldd	r25, Y+20	; 0x14
    111a:	0e 94 6d 0a 	call	0x14da	; 0x14da <__floatsisf>
    111e:	4b 01       	movw	r8, r22
    1120:	5c 01       	movw	r10, r24
    1122:	a3 01       	movw	r20, r6
    1124:	92 01       	movw	r18, r4
    1126:	c3 01       	movw	r24, r6
    1128:	b2 01       	movw	r22, r4
    112a:	0e 94 1d 0b 	call	0x163a	; 0x163a <__mulsf3>
    112e:	9b 01       	movw	r18, r22
    1130:	ac 01       	movw	r20, r24
    1132:	6d 85       	ldd	r22, Y+13	; 0x0d
    1134:	7e 85       	ldd	r23, Y+14	; 0x0e
    1136:	8f 85       	ldd	r24, Y+15	; 0x0f
    1138:	98 89       	ldd	r25, Y+16	; 0x10
    113a:	0e 94 69 09 	call	0x12d2	; 0x12d2 <__subsf3>
    113e:	0e 94 84 0b 	call	0x1708	; 0x1708 <sqrt>
    1142:	69 83       	std	Y+1, r22	; 0x01
    1144:	7a 83       	std	Y+2, r23	; 0x02
    1146:	8b 83       	std	Y+3, r24	; 0x03
    1148:	9c 83       	std	Y+4, r25	; 0x04
    114a:	6d 89       	ldd	r22, Y+21	; 0x15
    114c:	7e 89       	ldd	r23, Y+22	; 0x16
    114e:	8f 89       	ldd	r24, Y+23	; 0x17
    1150:	98 8d       	ldd	r25, Y+24	; 0x18
    1152:	0e 94 6d 0a 	call	0x14da	; 0x14da <__floatsisf>
    1156:	6b 01       	movw	r12, r22
    1158:	7c 01       	movw	r14, r24
    115a:	29 81       	ldd	r18, Y+1	; 0x01
    115c:	3a 81       	ldd	r19, Y+2	; 0x02
    115e:	4b 81       	ldd	r20, Y+3	; 0x03
    1160:	5c 81       	ldd	r21, Y+4	; 0x04
    1162:	c5 01       	movw	r24, r10
    1164:	b4 01       	movw	r22, r8
    1166:	0e 94 69 09 	call	0x12d2	; 0x12d2 <__subsf3>
    116a:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__fixsfsi>
    116e:	6d 83       	std	Y+5, r22	; 0x05
    1170:	7e 83       	std	Y+6, r23	; 0x06
    1172:	8f 83       	std	Y+7, r24	; 0x07
    1174:	98 87       	std	Y+8, r25	; 0x08
    1176:	a3 01       	movw	r20, r6
    1178:	92 01       	movw	r18, r4
    117a:	c7 01       	movw	r24, r14
    117c:	b6 01       	movw	r22, r12
    117e:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__addsf3>
    1182:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__fixsfsi>
    1186:	dc 01       	movw	r26, r24
    1188:	cb 01       	movw	r24, r22
    118a:	6d 81       	ldd	r22, Y+5	; 0x05
    118c:	7e 81       	ldd	r23, Y+6	; 0x06
    118e:	0e 94 03 08 	call	0x1006	; 0x1006 <sram_pixel>
		sram_pixel(-x+x0,y0+sqrt((pow(radius,2)-pow(x,2))));
    1192:	29 81       	ldd	r18, Y+1	; 0x01
    1194:	3a 81       	ldd	r19, Y+2	; 0x02
    1196:	4b 81       	ldd	r20, Y+3	; 0x03
    1198:	5c 81       	ldd	r21, Y+4	; 0x04
    119a:	c5 01       	movw	r24, r10
    119c:	b4 01       	movw	r22, r8
    119e:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__addsf3>
    11a2:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__fixsfsi>
    11a6:	4b 01       	movw	r8, r22
    11a8:	5c 01       	movw	r10, r24
    11aa:	a3 01       	movw	r20, r6
    11ac:	92 01       	movw	r18, r4
    11ae:	c7 01       	movw	r24, r14
    11b0:	b6 01       	movw	r22, r12
    11b2:	0e 94 69 09 	call	0x12d2	; 0x12d2 <__subsf3>
    11b6:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__fixsfsi>
    11ba:	dc 01       	movw	r26, r24
    11bc:	cb 01       	movw	r24, r22
    11be:	b4 01       	movw	r22, r8
    11c0:	0e 94 03 08 	call	0x1006	; 0x1006 <sram_pixel>
		}
	}
}

void sram_draw_circle(int x0, int y0, int radius){
	for(double x = -radius; x <= radius; x += 0.02){
    11c4:	2a e0       	ldi	r18, 0x0A	; 10
    11c6:	37 ed       	ldi	r19, 0xD7	; 215
    11c8:	43 ea       	ldi	r20, 0xA3	; 163
    11ca:	5c e3       	ldi	r21, 0x3C	; 60
    11cc:	c3 01       	movw	r24, r6
    11ce:	b2 01       	movw	r22, r4
    11d0:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__addsf3>
    11d4:	2b 01       	movw	r4, r22
    11d6:	3c 01       	movw	r6, r24
    11d8:	29 85       	ldd	r18, Y+9	; 0x09
    11da:	3a 85       	ldd	r19, Y+10	; 0x0a
    11dc:	4b 85       	ldd	r20, Y+11	; 0x0b
    11de:	5c 85       	ldd	r21, Y+12	; 0x0c
    11e0:	0e 94 ce 09 	call	0x139c	; 0x139c <__cmpsf2>
    11e4:	18 16       	cp	r1, r24
    11e6:	0c f0       	brlt	.+2      	; 0x11ea <sram_draw_circle+0x186>
    11e8:	94 cf       	rjmp	.-216    	; 0x1112 <sram_draw_circle+0xae>
		sram_pixel(x+x0,y0-sqrt((pow(radius,2)-pow(x,2))));
		sram_pixel(-x+x0,y0+sqrt((pow(radius,2)-pow(x,2))));
	}
}
    11ea:	68 96       	adiw	r28, 0x18	; 24
    11ec:	0f b6       	in	r0, 0x3f	; 63
    11ee:	f8 94       	cli
    11f0:	de bf       	out	0x3e, r29	; 62
    11f2:	0f be       	out	0x3f, r0	; 63
    11f4:	cd bf       	out	0x3d, r28	; 61
    11f6:	df 91       	pop	r29
    11f8:	cf 91       	pop	r28
    11fa:	ff 90       	pop	r15
    11fc:	ef 90       	pop	r14
    11fe:	df 90       	pop	r13
    1200:	cf 90       	pop	r12
    1202:	bf 90       	pop	r11
    1204:	af 90       	pop	r10
    1206:	9f 90       	pop	r9
    1208:	8f 90       	pop	r8
    120a:	7f 90       	pop	r7
    120c:	6f 90       	pop	r6
    120e:	5f 90       	pop	r5
    1210:	4f 90       	pop	r4
    1212:	08 95       	ret

00001214 <write_screen>:


void write_screen(void){//update all the pages that are edited
    1214:	cf 92       	push	r12
    1216:	df 92       	push	r13
    1218:	ef 92       	push	r14
    121a:	ff 92       	push	r15
    121c:	0f 93       	push	r16
    121e:	1f 93       	push	r17
    1220:	cf 93       	push	r28
    1222:	df 93       	push	r29
	int line = 0;
	while (edited != 0b00000000){ //if there is an edited page it will update
    1224:	80 91 cc 03 	lds	r24, 0x03CC
    1228:	88 23       	and	r24, r24
    122a:	b1 f1       	breq	.+108    	; 0x1298 <write_screen+0x84>
    122c:	e1 2c       	mov	r14, r1
    122e:	f1 2c       	mov	r15, r1
	}
}


void write_screen(void){//update all the pages that are edited
	int line = 0;
    1230:	c0 e0       	ldi	r28, 0x00	; 0
    1232:	d0 e0       	ldi	r29, 0x00	; 0
	while (edited != 0b00000000){ //if there is an edited page it will update
		char current_page = 1 << line; //going 1 at a time
    1234:	cc 24       	eor	r12, r12
    1236:	c3 94       	inc	r12
    1238:	d1 2c       	mov	r13, r1
    123a:	86 01       	movw	r16, r12
    123c:	0c 2e       	mov	r0, r28
    123e:	02 c0       	rjmp	.+4      	; 0x1244 <write_screen+0x30>
    1240:	00 0f       	add	r16, r16
    1242:	11 1f       	adc	r17, r17
    1244:	0a 94       	dec	r0
    1246:	e2 f7       	brpl	.-8      	; 0x1240 <write_screen+0x2c>
		if(current_page & edited){ //checks if the page is edited
    1248:	80 23       	and	r24, r16
    124a:	c1 f0       	breq	.+48     	; 0x127c <write_screen+0x68>
			oled_goto_line(line);//changing the line to the edited one
    124c:	ce 01       	movw	r24, r28
    124e:	0e 94 a7 06 	call	0xd4e	; 0xd4e <oled_goto_line>
    1252:	c7 01       	movw	r24, r14
    1254:	80 58       	subi	r24, 0x80	; 128
    1256:	9f 4f       	sbci	r25, 0xFF	; 255
    1258:	97 01       	movw	r18, r14
			for(unsigned int k = 0; k < 128; k++){//cycling through the columns in the edited page
				write_d(ext_ram[line*128 + k]);//printing the column from memory
    125a:	e0 91 0a 01 	lds	r30, 0x010A
    125e:	f0 91 0b 01 	lds	r31, 0x010B
    1262:	e2 0f       	add	r30, r18
    1264:	f3 1f       	adc	r31, r19
    1266:	40 81       	ld	r20, Z
}


void write_d(uint8_t data)
{
	*oled_data = data;
    1268:	e0 91 0c 01 	lds	r30, 0x010C
    126c:	f0 91 0d 01 	lds	r31, 0x010D
    1270:	40 83       	st	Z, r20
    1272:	2f 5f       	subi	r18, 0xFF	; 255
    1274:	3f 4f       	sbci	r19, 0xFF	; 255
	int line = 0;
	while (edited != 0b00000000){ //if there is an edited page it will update
		char current_page = 1 << line; //going 1 at a time
		if(current_page & edited){ //checks if the page is edited
			oled_goto_line(line);//changing the line to the edited one
			for(unsigned int k = 0; k < 128; k++){//cycling through the columns in the edited page
    1276:	28 17       	cp	r18, r24
    1278:	39 07       	cpc	r19, r25
    127a:	79 f7       	brne	.-34     	; 0x125a <write_screen+0x46>
				write_d(ext_ram[line*128 + k]);//printing the column from memory
			}			
		} 
		edited &= ~(current_page);//removes the edited-flag for this line
    127c:	00 95       	com	r16
    127e:	80 91 cc 03 	lds	r24, 0x03CC
    1282:	08 23       	and	r16, r24
    1284:	00 93 cc 03 	sts	0x03CC, r16
		line++;//check next line!
    1288:	21 96       	adiw	r28, 0x01	; 1
    128a:	80 e8       	ldi	r24, 0x80	; 128
    128c:	e8 0e       	add	r14, r24
    128e:	f1 1c       	adc	r15, r1
}


void write_screen(void){//update all the pages that are edited
	int line = 0;
	while (edited != 0b00000000){ //if there is an edited page it will update
    1290:	00 23       	and	r16, r16
    1292:	11 f0       	breq	.+4      	; 0x1298 <write_screen+0x84>
    1294:	80 2f       	mov	r24, r16
    1296:	d1 cf       	rjmp	.-94     	; 0x123a <write_screen+0x26>
		oled_goto_line(r);
		for(unsigned int k = 0; k < 128; k++){
			write_d(ext_ram[r*128 + k]);
		}
	}*/
}
    1298:	df 91       	pop	r29
    129a:	cf 91       	pop	r28
    129c:	1f 91       	pop	r17
    129e:	0f 91       	pop	r16
    12a0:	ff 90       	pop	r15
    12a2:	ef 90       	pop	r14
    12a4:	df 90       	pop	r13
    12a6:	cf 90       	pop	r12
    12a8:	08 95       	ret

000012aa <send_UART>:
    12aa:	5d 9b       	sbis	0x0b, 5	; 11
    12ac:	fe cf       	rjmp	.-4      	; 0x12aa <send_UART>
    12ae:	8c b9       	out	0x0c, r24	; 12
    12b0:	08 95       	ret

000012b2 <recieve_UART>:
    12b2:	5f 9b       	sbis	0x0b, 7	; 11
    12b4:	fe cf       	rjmp	.-4      	; 0x12b2 <recieve_UART>
    12b6:	8c b1       	in	r24, 0x0c	; 12
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	08 95       	ret

000012bc <init_UART>:
    12bc:	90 bd       	out	0x20, r25	; 32
    12be:	89 b9       	out	0x09, r24	; 9
    12c0:	88 e1       	ldi	r24, 0x18	; 24
    12c2:	8a b9       	out	0x0a, r24	; 10
    12c4:	69 e5       	ldi	r22, 0x59	; 89
    12c6:	79 e0       	ldi	r23, 0x09	; 9
    12c8:	85 e5       	ldi	r24, 0x55	; 85
    12ca:	99 e0       	ldi	r25, 0x09	; 9
    12cc:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <fdevopen>
    12d0:	08 95       	ret

000012d2 <__subsf3>:
    12d2:	50 58       	subi	r21, 0x80	; 128

000012d4 <__addsf3>:
    12d4:	bb 27       	eor	r27, r27
    12d6:	aa 27       	eor	r26, r26
    12d8:	0e d0       	rcall	.+28     	; 0x12f6 <__addsf3x>
    12da:	75 c1       	rjmp	.+746    	; 0x15c6 <__fp_round>
    12dc:	66 d1       	rcall	.+716    	; 0x15aa <__fp_pscA>
    12de:	30 f0       	brcs	.+12     	; 0x12ec <__addsf3+0x18>
    12e0:	6b d1       	rcall	.+726    	; 0x15b8 <__fp_pscB>
    12e2:	20 f0       	brcs	.+8      	; 0x12ec <__addsf3+0x18>
    12e4:	31 f4       	brne	.+12     	; 0x12f2 <__addsf3+0x1e>
    12e6:	9f 3f       	cpi	r25, 0xFF	; 255
    12e8:	11 f4       	brne	.+4      	; 0x12ee <__addsf3+0x1a>
    12ea:	1e f4       	brtc	.+6      	; 0x12f2 <__addsf3+0x1e>
    12ec:	5b c1       	rjmp	.+694    	; 0x15a4 <__fp_nan>
    12ee:	0e f4       	brtc	.+2      	; 0x12f2 <__addsf3+0x1e>
    12f0:	e0 95       	com	r30
    12f2:	e7 fb       	bst	r30, 7
    12f4:	51 c1       	rjmp	.+674    	; 0x1598 <__fp_inf>

000012f6 <__addsf3x>:
    12f6:	e9 2f       	mov	r30, r25
    12f8:	77 d1       	rcall	.+750    	; 0x15e8 <__fp_split3>
    12fa:	80 f3       	brcs	.-32     	; 0x12dc <__addsf3+0x8>
    12fc:	ba 17       	cp	r27, r26
    12fe:	62 07       	cpc	r22, r18
    1300:	73 07       	cpc	r23, r19
    1302:	84 07       	cpc	r24, r20
    1304:	95 07       	cpc	r25, r21
    1306:	18 f0       	brcs	.+6      	; 0x130e <__addsf3x+0x18>
    1308:	71 f4       	brne	.+28     	; 0x1326 <__addsf3x+0x30>
    130a:	9e f5       	brtc	.+102    	; 0x1372 <__addsf3x+0x7c>
    130c:	8f c1       	rjmp	.+798    	; 0x162c <__fp_zero>
    130e:	0e f4       	brtc	.+2      	; 0x1312 <__addsf3x+0x1c>
    1310:	e0 95       	com	r30
    1312:	0b 2e       	mov	r0, r27
    1314:	ba 2f       	mov	r27, r26
    1316:	a0 2d       	mov	r26, r0
    1318:	0b 01       	movw	r0, r22
    131a:	b9 01       	movw	r22, r18
    131c:	90 01       	movw	r18, r0
    131e:	0c 01       	movw	r0, r24
    1320:	ca 01       	movw	r24, r20
    1322:	a0 01       	movw	r20, r0
    1324:	11 24       	eor	r1, r1
    1326:	ff 27       	eor	r31, r31
    1328:	59 1b       	sub	r21, r25
    132a:	99 f0       	breq	.+38     	; 0x1352 <__addsf3x+0x5c>
    132c:	59 3f       	cpi	r21, 0xF9	; 249
    132e:	50 f4       	brcc	.+20     	; 0x1344 <__addsf3x+0x4e>
    1330:	50 3e       	cpi	r21, 0xE0	; 224
    1332:	68 f1       	brcs	.+90     	; 0x138e <__addsf3x+0x98>
    1334:	1a 16       	cp	r1, r26
    1336:	f0 40       	sbci	r31, 0x00	; 0
    1338:	a2 2f       	mov	r26, r18
    133a:	23 2f       	mov	r18, r19
    133c:	34 2f       	mov	r19, r20
    133e:	44 27       	eor	r20, r20
    1340:	58 5f       	subi	r21, 0xF8	; 248
    1342:	f3 cf       	rjmp	.-26     	; 0x132a <__addsf3x+0x34>
    1344:	46 95       	lsr	r20
    1346:	37 95       	ror	r19
    1348:	27 95       	ror	r18
    134a:	a7 95       	ror	r26
    134c:	f0 40       	sbci	r31, 0x00	; 0
    134e:	53 95       	inc	r21
    1350:	c9 f7       	brne	.-14     	; 0x1344 <__addsf3x+0x4e>
    1352:	7e f4       	brtc	.+30     	; 0x1372 <__addsf3x+0x7c>
    1354:	1f 16       	cp	r1, r31
    1356:	ba 0b       	sbc	r27, r26
    1358:	62 0b       	sbc	r22, r18
    135a:	73 0b       	sbc	r23, r19
    135c:	84 0b       	sbc	r24, r20
    135e:	ba f0       	brmi	.+46     	; 0x138e <__addsf3x+0x98>
    1360:	91 50       	subi	r25, 0x01	; 1
    1362:	a1 f0       	breq	.+40     	; 0x138c <__addsf3x+0x96>
    1364:	ff 0f       	add	r31, r31
    1366:	bb 1f       	adc	r27, r27
    1368:	66 1f       	adc	r22, r22
    136a:	77 1f       	adc	r23, r23
    136c:	88 1f       	adc	r24, r24
    136e:	c2 f7       	brpl	.-16     	; 0x1360 <__addsf3x+0x6a>
    1370:	0e c0       	rjmp	.+28     	; 0x138e <__addsf3x+0x98>
    1372:	ba 0f       	add	r27, r26
    1374:	62 1f       	adc	r22, r18
    1376:	73 1f       	adc	r23, r19
    1378:	84 1f       	adc	r24, r20
    137a:	48 f4       	brcc	.+18     	; 0x138e <__addsf3x+0x98>
    137c:	87 95       	ror	r24
    137e:	77 95       	ror	r23
    1380:	67 95       	ror	r22
    1382:	b7 95       	ror	r27
    1384:	f7 95       	ror	r31
    1386:	9e 3f       	cpi	r25, 0xFE	; 254
    1388:	08 f0       	brcs	.+2      	; 0x138c <__addsf3x+0x96>
    138a:	b3 cf       	rjmp	.-154    	; 0x12f2 <__addsf3+0x1e>
    138c:	93 95       	inc	r25
    138e:	88 0f       	add	r24, r24
    1390:	08 f0       	brcs	.+2      	; 0x1394 <__addsf3x+0x9e>
    1392:	99 27       	eor	r25, r25
    1394:	ee 0f       	add	r30, r30
    1396:	97 95       	ror	r25
    1398:	87 95       	ror	r24
    139a:	08 95       	ret

0000139c <__cmpsf2>:
    139c:	d9 d0       	rcall	.+434    	; 0x1550 <__fp_cmp>
    139e:	08 f4       	brcc	.+2      	; 0x13a2 <__cmpsf2+0x6>
    13a0:	81 e0       	ldi	r24, 0x01	; 1
    13a2:	08 95       	ret

000013a4 <__divsf3>:
    13a4:	0c d0       	rcall	.+24     	; 0x13be <__divsf3x>
    13a6:	0f c1       	rjmp	.+542    	; 0x15c6 <__fp_round>
    13a8:	07 d1       	rcall	.+526    	; 0x15b8 <__fp_pscB>
    13aa:	40 f0       	brcs	.+16     	; 0x13bc <__divsf3+0x18>
    13ac:	fe d0       	rcall	.+508    	; 0x15aa <__fp_pscA>
    13ae:	30 f0       	brcs	.+12     	; 0x13bc <__divsf3+0x18>
    13b0:	21 f4       	brne	.+8      	; 0x13ba <__divsf3+0x16>
    13b2:	5f 3f       	cpi	r21, 0xFF	; 255
    13b4:	19 f0       	breq	.+6      	; 0x13bc <__divsf3+0x18>
    13b6:	f0 c0       	rjmp	.+480    	; 0x1598 <__fp_inf>
    13b8:	51 11       	cpse	r21, r1
    13ba:	39 c1       	rjmp	.+626    	; 0x162e <__fp_szero>
    13bc:	f3 c0       	rjmp	.+486    	; 0x15a4 <__fp_nan>

000013be <__divsf3x>:
    13be:	14 d1       	rcall	.+552    	; 0x15e8 <__fp_split3>
    13c0:	98 f3       	brcs	.-26     	; 0x13a8 <__divsf3+0x4>

000013c2 <__divsf3_pse>:
    13c2:	99 23       	and	r25, r25
    13c4:	c9 f3       	breq	.-14     	; 0x13b8 <__divsf3+0x14>
    13c6:	55 23       	and	r21, r21
    13c8:	b1 f3       	breq	.-20     	; 0x13b6 <__divsf3+0x12>
    13ca:	95 1b       	sub	r25, r21
    13cc:	55 0b       	sbc	r21, r21
    13ce:	bb 27       	eor	r27, r27
    13d0:	aa 27       	eor	r26, r26
    13d2:	62 17       	cp	r22, r18
    13d4:	73 07       	cpc	r23, r19
    13d6:	84 07       	cpc	r24, r20
    13d8:	38 f0       	brcs	.+14     	; 0x13e8 <__divsf3_pse+0x26>
    13da:	9f 5f       	subi	r25, 0xFF	; 255
    13dc:	5f 4f       	sbci	r21, 0xFF	; 255
    13de:	22 0f       	add	r18, r18
    13e0:	33 1f       	adc	r19, r19
    13e2:	44 1f       	adc	r20, r20
    13e4:	aa 1f       	adc	r26, r26
    13e6:	a9 f3       	breq	.-22     	; 0x13d2 <__divsf3_pse+0x10>
    13e8:	33 d0       	rcall	.+102    	; 0x1450 <__divsf3_pse+0x8e>
    13ea:	0e 2e       	mov	r0, r30
    13ec:	3a f0       	brmi	.+14     	; 0x13fc <__divsf3_pse+0x3a>
    13ee:	e0 e8       	ldi	r30, 0x80	; 128
    13f0:	30 d0       	rcall	.+96     	; 0x1452 <__divsf3_pse+0x90>
    13f2:	91 50       	subi	r25, 0x01	; 1
    13f4:	50 40       	sbci	r21, 0x00	; 0
    13f6:	e6 95       	lsr	r30
    13f8:	00 1c       	adc	r0, r0
    13fa:	ca f7       	brpl	.-14     	; 0x13ee <__divsf3_pse+0x2c>
    13fc:	29 d0       	rcall	.+82     	; 0x1450 <__divsf3_pse+0x8e>
    13fe:	fe 2f       	mov	r31, r30
    1400:	27 d0       	rcall	.+78     	; 0x1450 <__divsf3_pse+0x8e>
    1402:	66 0f       	add	r22, r22
    1404:	77 1f       	adc	r23, r23
    1406:	88 1f       	adc	r24, r24
    1408:	bb 1f       	adc	r27, r27
    140a:	26 17       	cp	r18, r22
    140c:	37 07       	cpc	r19, r23
    140e:	48 07       	cpc	r20, r24
    1410:	ab 07       	cpc	r26, r27
    1412:	b0 e8       	ldi	r27, 0x80	; 128
    1414:	09 f0       	breq	.+2      	; 0x1418 <__divsf3_pse+0x56>
    1416:	bb 0b       	sbc	r27, r27
    1418:	80 2d       	mov	r24, r0
    141a:	bf 01       	movw	r22, r30
    141c:	ff 27       	eor	r31, r31
    141e:	93 58       	subi	r25, 0x83	; 131
    1420:	5f 4f       	sbci	r21, 0xFF	; 255
    1422:	2a f0       	brmi	.+10     	; 0x142e <__divsf3_pse+0x6c>
    1424:	9e 3f       	cpi	r25, 0xFE	; 254
    1426:	51 05       	cpc	r21, r1
    1428:	68 f0       	brcs	.+26     	; 0x1444 <__divsf3_pse+0x82>
    142a:	b6 c0       	rjmp	.+364    	; 0x1598 <__fp_inf>
    142c:	00 c1       	rjmp	.+512    	; 0x162e <__fp_szero>
    142e:	5f 3f       	cpi	r21, 0xFF	; 255
    1430:	ec f3       	brlt	.-6      	; 0x142c <__divsf3_pse+0x6a>
    1432:	98 3e       	cpi	r25, 0xE8	; 232
    1434:	dc f3       	brlt	.-10     	; 0x142c <__divsf3_pse+0x6a>
    1436:	86 95       	lsr	r24
    1438:	77 95       	ror	r23
    143a:	67 95       	ror	r22
    143c:	b7 95       	ror	r27
    143e:	f7 95       	ror	r31
    1440:	9f 5f       	subi	r25, 0xFF	; 255
    1442:	c9 f7       	brne	.-14     	; 0x1436 <__divsf3_pse+0x74>
    1444:	88 0f       	add	r24, r24
    1446:	91 1d       	adc	r25, r1
    1448:	96 95       	lsr	r25
    144a:	87 95       	ror	r24
    144c:	97 f9       	bld	r25, 7
    144e:	08 95       	ret
    1450:	e1 e0       	ldi	r30, 0x01	; 1
    1452:	66 0f       	add	r22, r22
    1454:	77 1f       	adc	r23, r23
    1456:	88 1f       	adc	r24, r24
    1458:	bb 1f       	adc	r27, r27
    145a:	62 17       	cp	r22, r18
    145c:	73 07       	cpc	r23, r19
    145e:	84 07       	cpc	r24, r20
    1460:	ba 07       	cpc	r27, r26
    1462:	20 f0       	brcs	.+8      	; 0x146c <__divsf3_pse+0xaa>
    1464:	62 1b       	sub	r22, r18
    1466:	73 0b       	sbc	r23, r19
    1468:	84 0b       	sbc	r24, r20
    146a:	ba 0b       	sbc	r27, r26
    146c:	ee 1f       	adc	r30, r30
    146e:	88 f7       	brcc	.-30     	; 0x1452 <__divsf3_pse+0x90>
    1470:	e0 95       	com	r30
    1472:	08 95       	ret

00001474 <__fixsfsi>:
    1474:	04 d0       	rcall	.+8      	; 0x147e <__fixunssfsi>
    1476:	68 94       	set
    1478:	b1 11       	cpse	r27, r1
    147a:	d9 c0       	rjmp	.+434    	; 0x162e <__fp_szero>
    147c:	08 95       	ret

0000147e <__fixunssfsi>:
    147e:	bc d0       	rcall	.+376    	; 0x15f8 <__fp_splitA>
    1480:	88 f0       	brcs	.+34     	; 0x14a4 <__fixunssfsi+0x26>
    1482:	9f 57       	subi	r25, 0x7F	; 127
    1484:	90 f0       	brcs	.+36     	; 0x14aa <__fixunssfsi+0x2c>
    1486:	b9 2f       	mov	r27, r25
    1488:	99 27       	eor	r25, r25
    148a:	b7 51       	subi	r27, 0x17	; 23
    148c:	a0 f0       	brcs	.+40     	; 0x14b6 <__fixunssfsi+0x38>
    148e:	d1 f0       	breq	.+52     	; 0x14c4 <__fixunssfsi+0x46>
    1490:	66 0f       	add	r22, r22
    1492:	77 1f       	adc	r23, r23
    1494:	88 1f       	adc	r24, r24
    1496:	99 1f       	adc	r25, r25
    1498:	1a f0       	brmi	.+6      	; 0x14a0 <__fixunssfsi+0x22>
    149a:	ba 95       	dec	r27
    149c:	c9 f7       	brne	.-14     	; 0x1490 <__fixunssfsi+0x12>
    149e:	12 c0       	rjmp	.+36     	; 0x14c4 <__fixunssfsi+0x46>
    14a0:	b1 30       	cpi	r27, 0x01	; 1
    14a2:	81 f0       	breq	.+32     	; 0x14c4 <__fixunssfsi+0x46>
    14a4:	c3 d0       	rcall	.+390    	; 0x162c <__fp_zero>
    14a6:	b1 e0       	ldi	r27, 0x01	; 1
    14a8:	08 95       	ret
    14aa:	c0 c0       	rjmp	.+384    	; 0x162c <__fp_zero>
    14ac:	67 2f       	mov	r22, r23
    14ae:	78 2f       	mov	r23, r24
    14b0:	88 27       	eor	r24, r24
    14b2:	b8 5f       	subi	r27, 0xF8	; 248
    14b4:	39 f0       	breq	.+14     	; 0x14c4 <__fixunssfsi+0x46>
    14b6:	b9 3f       	cpi	r27, 0xF9	; 249
    14b8:	cc f3       	brlt	.-14     	; 0x14ac <__fixunssfsi+0x2e>
    14ba:	86 95       	lsr	r24
    14bc:	77 95       	ror	r23
    14be:	67 95       	ror	r22
    14c0:	b3 95       	inc	r27
    14c2:	d9 f7       	brne	.-10     	; 0x14ba <__fixunssfsi+0x3c>
    14c4:	3e f4       	brtc	.+14     	; 0x14d4 <__fixunssfsi+0x56>
    14c6:	90 95       	com	r25
    14c8:	80 95       	com	r24
    14ca:	70 95       	com	r23
    14cc:	61 95       	neg	r22
    14ce:	7f 4f       	sbci	r23, 0xFF	; 255
    14d0:	8f 4f       	sbci	r24, 0xFF	; 255
    14d2:	9f 4f       	sbci	r25, 0xFF	; 255
    14d4:	08 95       	ret

000014d6 <__floatunsisf>:
    14d6:	e8 94       	clt
    14d8:	09 c0       	rjmp	.+18     	; 0x14ec <__floatsisf+0x12>

000014da <__floatsisf>:
    14da:	97 fb       	bst	r25, 7
    14dc:	3e f4       	brtc	.+14     	; 0x14ec <__floatsisf+0x12>
    14de:	90 95       	com	r25
    14e0:	80 95       	com	r24
    14e2:	70 95       	com	r23
    14e4:	61 95       	neg	r22
    14e6:	7f 4f       	sbci	r23, 0xFF	; 255
    14e8:	8f 4f       	sbci	r24, 0xFF	; 255
    14ea:	9f 4f       	sbci	r25, 0xFF	; 255
    14ec:	99 23       	and	r25, r25
    14ee:	a9 f0       	breq	.+42     	; 0x151a <__floatsisf+0x40>
    14f0:	f9 2f       	mov	r31, r25
    14f2:	96 e9       	ldi	r25, 0x96	; 150
    14f4:	bb 27       	eor	r27, r27
    14f6:	93 95       	inc	r25
    14f8:	f6 95       	lsr	r31
    14fa:	87 95       	ror	r24
    14fc:	77 95       	ror	r23
    14fe:	67 95       	ror	r22
    1500:	b7 95       	ror	r27
    1502:	f1 11       	cpse	r31, r1
    1504:	f8 cf       	rjmp	.-16     	; 0x14f6 <__floatsisf+0x1c>
    1506:	fa f4       	brpl	.+62     	; 0x1546 <__floatsisf+0x6c>
    1508:	bb 0f       	add	r27, r27
    150a:	11 f4       	brne	.+4      	; 0x1510 <__floatsisf+0x36>
    150c:	60 ff       	sbrs	r22, 0
    150e:	1b c0       	rjmp	.+54     	; 0x1546 <__floatsisf+0x6c>
    1510:	6f 5f       	subi	r22, 0xFF	; 255
    1512:	7f 4f       	sbci	r23, 0xFF	; 255
    1514:	8f 4f       	sbci	r24, 0xFF	; 255
    1516:	9f 4f       	sbci	r25, 0xFF	; 255
    1518:	16 c0       	rjmp	.+44     	; 0x1546 <__floatsisf+0x6c>
    151a:	88 23       	and	r24, r24
    151c:	11 f0       	breq	.+4      	; 0x1522 <__floatsisf+0x48>
    151e:	96 e9       	ldi	r25, 0x96	; 150
    1520:	11 c0       	rjmp	.+34     	; 0x1544 <__floatsisf+0x6a>
    1522:	77 23       	and	r23, r23
    1524:	21 f0       	breq	.+8      	; 0x152e <__floatsisf+0x54>
    1526:	9e e8       	ldi	r25, 0x8E	; 142
    1528:	87 2f       	mov	r24, r23
    152a:	76 2f       	mov	r23, r22
    152c:	05 c0       	rjmp	.+10     	; 0x1538 <__floatsisf+0x5e>
    152e:	66 23       	and	r22, r22
    1530:	71 f0       	breq	.+28     	; 0x154e <__floatsisf+0x74>
    1532:	96 e8       	ldi	r25, 0x86	; 134
    1534:	86 2f       	mov	r24, r22
    1536:	70 e0       	ldi	r23, 0x00	; 0
    1538:	60 e0       	ldi	r22, 0x00	; 0
    153a:	2a f0       	brmi	.+10     	; 0x1546 <__floatsisf+0x6c>
    153c:	9a 95       	dec	r25
    153e:	66 0f       	add	r22, r22
    1540:	77 1f       	adc	r23, r23
    1542:	88 1f       	adc	r24, r24
    1544:	da f7       	brpl	.-10     	; 0x153c <__floatsisf+0x62>
    1546:	88 0f       	add	r24, r24
    1548:	96 95       	lsr	r25
    154a:	87 95       	ror	r24
    154c:	97 f9       	bld	r25, 7
    154e:	08 95       	ret

00001550 <__fp_cmp>:
    1550:	99 0f       	add	r25, r25
    1552:	00 08       	sbc	r0, r0
    1554:	55 0f       	add	r21, r21
    1556:	aa 0b       	sbc	r26, r26
    1558:	e0 e8       	ldi	r30, 0x80	; 128
    155a:	fe ef       	ldi	r31, 0xFE	; 254
    155c:	16 16       	cp	r1, r22
    155e:	17 06       	cpc	r1, r23
    1560:	e8 07       	cpc	r30, r24
    1562:	f9 07       	cpc	r31, r25
    1564:	c0 f0       	brcs	.+48     	; 0x1596 <__fp_cmp+0x46>
    1566:	12 16       	cp	r1, r18
    1568:	13 06       	cpc	r1, r19
    156a:	e4 07       	cpc	r30, r20
    156c:	f5 07       	cpc	r31, r21
    156e:	98 f0       	brcs	.+38     	; 0x1596 <__fp_cmp+0x46>
    1570:	62 1b       	sub	r22, r18
    1572:	73 0b       	sbc	r23, r19
    1574:	84 0b       	sbc	r24, r20
    1576:	95 0b       	sbc	r25, r21
    1578:	39 f4       	brne	.+14     	; 0x1588 <__fp_cmp+0x38>
    157a:	0a 26       	eor	r0, r26
    157c:	61 f0       	breq	.+24     	; 0x1596 <__fp_cmp+0x46>
    157e:	23 2b       	or	r18, r19
    1580:	24 2b       	or	r18, r20
    1582:	25 2b       	or	r18, r21
    1584:	21 f4       	brne	.+8      	; 0x158e <__fp_cmp+0x3e>
    1586:	08 95       	ret
    1588:	0a 26       	eor	r0, r26
    158a:	09 f4       	brne	.+2      	; 0x158e <__fp_cmp+0x3e>
    158c:	a1 40       	sbci	r26, 0x01	; 1
    158e:	a6 95       	lsr	r26
    1590:	8f ef       	ldi	r24, 0xFF	; 255
    1592:	81 1d       	adc	r24, r1
    1594:	81 1d       	adc	r24, r1
    1596:	08 95       	ret

00001598 <__fp_inf>:
    1598:	97 f9       	bld	r25, 7
    159a:	9f 67       	ori	r25, 0x7F	; 127
    159c:	80 e8       	ldi	r24, 0x80	; 128
    159e:	70 e0       	ldi	r23, 0x00	; 0
    15a0:	60 e0       	ldi	r22, 0x00	; 0
    15a2:	08 95       	ret

000015a4 <__fp_nan>:
    15a4:	9f ef       	ldi	r25, 0xFF	; 255
    15a6:	80 ec       	ldi	r24, 0xC0	; 192
    15a8:	08 95       	ret

000015aa <__fp_pscA>:
    15aa:	00 24       	eor	r0, r0
    15ac:	0a 94       	dec	r0
    15ae:	16 16       	cp	r1, r22
    15b0:	17 06       	cpc	r1, r23
    15b2:	18 06       	cpc	r1, r24
    15b4:	09 06       	cpc	r0, r25
    15b6:	08 95       	ret

000015b8 <__fp_pscB>:
    15b8:	00 24       	eor	r0, r0
    15ba:	0a 94       	dec	r0
    15bc:	12 16       	cp	r1, r18
    15be:	13 06       	cpc	r1, r19
    15c0:	14 06       	cpc	r1, r20
    15c2:	05 06       	cpc	r0, r21
    15c4:	08 95       	ret

000015c6 <__fp_round>:
    15c6:	09 2e       	mov	r0, r25
    15c8:	03 94       	inc	r0
    15ca:	00 0c       	add	r0, r0
    15cc:	11 f4       	brne	.+4      	; 0x15d2 <__fp_round+0xc>
    15ce:	88 23       	and	r24, r24
    15d0:	52 f0       	brmi	.+20     	; 0x15e6 <__fp_round+0x20>
    15d2:	bb 0f       	add	r27, r27
    15d4:	40 f4       	brcc	.+16     	; 0x15e6 <__fp_round+0x20>
    15d6:	bf 2b       	or	r27, r31
    15d8:	11 f4       	brne	.+4      	; 0x15de <__fp_round+0x18>
    15da:	60 ff       	sbrs	r22, 0
    15dc:	04 c0       	rjmp	.+8      	; 0x15e6 <__fp_round+0x20>
    15de:	6f 5f       	subi	r22, 0xFF	; 255
    15e0:	7f 4f       	sbci	r23, 0xFF	; 255
    15e2:	8f 4f       	sbci	r24, 0xFF	; 255
    15e4:	9f 4f       	sbci	r25, 0xFF	; 255
    15e6:	08 95       	ret

000015e8 <__fp_split3>:
    15e8:	57 fd       	sbrc	r21, 7
    15ea:	90 58       	subi	r25, 0x80	; 128
    15ec:	44 0f       	add	r20, r20
    15ee:	55 1f       	adc	r21, r21
    15f0:	59 f0       	breq	.+22     	; 0x1608 <__fp_splitA+0x10>
    15f2:	5f 3f       	cpi	r21, 0xFF	; 255
    15f4:	71 f0       	breq	.+28     	; 0x1612 <__fp_splitA+0x1a>
    15f6:	47 95       	ror	r20

000015f8 <__fp_splitA>:
    15f8:	88 0f       	add	r24, r24
    15fa:	97 fb       	bst	r25, 7
    15fc:	99 1f       	adc	r25, r25
    15fe:	61 f0       	breq	.+24     	; 0x1618 <__fp_splitA+0x20>
    1600:	9f 3f       	cpi	r25, 0xFF	; 255
    1602:	79 f0       	breq	.+30     	; 0x1622 <__fp_splitA+0x2a>
    1604:	87 95       	ror	r24
    1606:	08 95       	ret
    1608:	12 16       	cp	r1, r18
    160a:	13 06       	cpc	r1, r19
    160c:	14 06       	cpc	r1, r20
    160e:	55 1f       	adc	r21, r21
    1610:	f2 cf       	rjmp	.-28     	; 0x15f6 <__fp_split3+0xe>
    1612:	46 95       	lsr	r20
    1614:	f1 df       	rcall	.-30     	; 0x15f8 <__fp_splitA>
    1616:	08 c0       	rjmp	.+16     	; 0x1628 <__fp_splitA+0x30>
    1618:	16 16       	cp	r1, r22
    161a:	17 06       	cpc	r1, r23
    161c:	18 06       	cpc	r1, r24
    161e:	99 1f       	adc	r25, r25
    1620:	f1 cf       	rjmp	.-30     	; 0x1604 <__fp_splitA+0xc>
    1622:	86 95       	lsr	r24
    1624:	71 05       	cpc	r23, r1
    1626:	61 05       	cpc	r22, r1
    1628:	08 94       	sec
    162a:	08 95       	ret

0000162c <__fp_zero>:
    162c:	e8 94       	clt

0000162e <__fp_szero>:
    162e:	bb 27       	eor	r27, r27
    1630:	66 27       	eor	r22, r22
    1632:	77 27       	eor	r23, r23
    1634:	cb 01       	movw	r24, r22
    1636:	97 f9       	bld	r25, 7
    1638:	08 95       	ret

0000163a <__mulsf3>:
    163a:	0b d0       	rcall	.+22     	; 0x1652 <__mulsf3x>
    163c:	c4 cf       	rjmp	.-120    	; 0x15c6 <__fp_round>
    163e:	b5 df       	rcall	.-150    	; 0x15aa <__fp_pscA>
    1640:	28 f0       	brcs	.+10     	; 0x164c <__mulsf3+0x12>
    1642:	ba df       	rcall	.-140    	; 0x15b8 <__fp_pscB>
    1644:	18 f0       	brcs	.+6      	; 0x164c <__mulsf3+0x12>
    1646:	95 23       	and	r25, r21
    1648:	09 f0       	breq	.+2      	; 0x164c <__mulsf3+0x12>
    164a:	a6 cf       	rjmp	.-180    	; 0x1598 <__fp_inf>
    164c:	ab cf       	rjmp	.-170    	; 0x15a4 <__fp_nan>
    164e:	11 24       	eor	r1, r1
    1650:	ee cf       	rjmp	.-36     	; 0x162e <__fp_szero>

00001652 <__mulsf3x>:
    1652:	ca df       	rcall	.-108    	; 0x15e8 <__fp_split3>
    1654:	a0 f3       	brcs	.-24     	; 0x163e <__mulsf3+0x4>

00001656 <__mulsf3_pse>:
    1656:	95 9f       	mul	r25, r21
    1658:	d1 f3       	breq	.-12     	; 0x164e <__mulsf3+0x14>
    165a:	95 0f       	add	r25, r21
    165c:	50 e0       	ldi	r21, 0x00	; 0
    165e:	55 1f       	adc	r21, r21
    1660:	62 9f       	mul	r22, r18
    1662:	f0 01       	movw	r30, r0
    1664:	72 9f       	mul	r23, r18
    1666:	bb 27       	eor	r27, r27
    1668:	f0 0d       	add	r31, r0
    166a:	b1 1d       	adc	r27, r1
    166c:	63 9f       	mul	r22, r19
    166e:	aa 27       	eor	r26, r26
    1670:	f0 0d       	add	r31, r0
    1672:	b1 1d       	adc	r27, r1
    1674:	aa 1f       	adc	r26, r26
    1676:	64 9f       	mul	r22, r20
    1678:	66 27       	eor	r22, r22
    167a:	b0 0d       	add	r27, r0
    167c:	a1 1d       	adc	r26, r1
    167e:	66 1f       	adc	r22, r22
    1680:	82 9f       	mul	r24, r18
    1682:	22 27       	eor	r18, r18
    1684:	b0 0d       	add	r27, r0
    1686:	a1 1d       	adc	r26, r1
    1688:	62 1f       	adc	r22, r18
    168a:	73 9f       	mul	r23, r19
    168c:	b0 0d       	add	r27, r0
    168e:	a1 1d       	adc	r26, r1
    1690:	62 1f       	adc	r22, r18
    1692:	83 9f       	mul	r24, r19
    1694:	a0 0d       	add	r26, r0
    1696:	61 1d       	adc	r22, r1
    1698:	22 1f       	adc	r18, r18
    169a:	74 9f       	mul	r23, r20
    169c:	33 27       	eor	r19, r19
    169e:	a0 0d       	add	r26, r0
    16a0:	61 1d       	adc	r22, r1
    16a2:	23 1f       	adc	r18, r19
    16a4:	84 9f       	mul	r24, r20
    16a6:	60 0d       	add	r22, r0
    16a8:	21 1d       	adc	r18, r1
    16aa:	82 2f       	mov	r24, r18
    16ac:	76 2f       	mov	r23, r22
    16ae:	6a 2f       	mov	r22, r26
    16b0:	11 24       	eor	r1, r1
    16b2:	9f 57       	subi	r25, 0x7F	; 127
    16b4:	50 40       	sbci	r21, 0x00	; 0
    16b6:	8a f0       	brmi	.+34     	; 0x16da <__mulsf3_pse+0x84>
    16b8:	e1 f0       	breq	.+56     	; 0x16f2 <__mulsf3_pse+0x9c>
    16ba:	88 23       	and	r24, r24
    16bc:	4a f0       	brmi	.+18     	; 0x16d0 <__mulsf3_pse+0x7a>
    16be:	ee 0f       	add	r30, r30
    16c0:	ff 1f       	adc	r31, r31
    16c2:	bb 1f       	adc	r27, r27
    16c4:	66 1f       	adc	r22, r22
    16c6:	77 1f       	adc	r23, r23
    16c8:	88 1f       	adc	r24, r24
    16ca:	91 50       	subi	r25, 0x01	; 1
    16cc:	50 40       	sbci	r21, 0x00	; 0
    16ce:	a9 f7       	brne	.-22     	; 0x16ba <__mulsf3_pse+0x64>
    16d0:	9e 3f       	cpi	r25, 0xFE	; 254
    16d2:	51 05       	cpc	r21, r1
    16d4:	70 f0       	brcs	.+28     	; 0x16f2 <__mulsf3_pse+0x9c>
    16d6:	60 cf       	rjmp	.-320    	; 0x1598 <__fp_inf>
    16d8:	aa cf       	rjmp	.-172    	; 0x162e <__fp_szero>
    16da:	5f 3f       	cpi	r21, 0xFF	; 255
    16dc:	ec f3       	brlt	.-6      	; 0x16d8 <__mulsf3_pse+0x82>
    16de:	98 3e       	cpi	r25, 0xE8	; 232
    16e0:	dc f3       	brlt	.-10     	; 0x16d8 <__mulsf3_pse+0x82>
    16e2:	86 95       	lsr	r24
    16e4:	77 95       	ror	r23
    16e6:	67 95       	ror	r22
    16e8:	b7 95       	ror	r27
    16ea:	f7 95       	ror	r31
    16ec:	e7 95       	ror	r30
    16ee:	9f 5f       	subi	r25, 0xFF	; 255
    16f0:	c1 f7       	brne	.-16     	; 0x16e2 <__mulsf3_pse+0x8c>
    16f2:	fe 2b       	or	r31, r30
    16f4:	88 0f       	add	r24, r24
    16f6:	91 1d       	adc	r25, r1
    16f8:	96 95       	lsr	r25
    16fa:	87 95       	ror	r24
    16fc:	97 f9       	bld	r25, 7
    16fe:	08 95       	ret
    1700:	11 f4       	brne	.+4      	; 0x1706 <__mulsf3_pse+0xb0>
    1702:	0e f4       	brtc	.+2      	; 0x1706 <__mulsf3_pse+0xb0>
    1704:	4f cf       	rjmp	.-354    	; 0x15a4 <__fp_nan>
    1706:	3e c0       	rjmp	.+124    	; 0x1784 <__fp_mpack>

00001708 <sqrt>:
    1708:	77 df       	rcall	.-274    	; 0x15f8 <__fp_splitA>
    170a:	d0 f3       	brcs	.-12     	; 0x1700 <__mulsf3_pse+0xaa>
    170c:	99 23       	and	r25, r25
    170e:	d9 f3       	breq	.-10     	; 0x1706 <__mulsf3_pse+0xb0>
    1710:	ce f3       	brts	.-14     	; 0x1704 <__mulsf3_pse+0xae>
    1712:	9f 57       	subi	r25, 0x7F	; 127
    1714:	55 0b       	sbc	r21, r21
    1716:	87 ff       	sbrs	r24, 7
    1718:	43 d0       	rcall	.+134    	; 0x17a0 <__fp_norm2>
    171a:	00 24       	eor	r0, r0
    171c:	a0 e6       	ldi	r26, 0x60	; 96
    171e:	40 ea       	ldi	r20, 0xA0	; 160
    1720:	90 01       	movw	r18, r0
    1722:	80 58       	subi	r24, 0x80	; 128
    1724:	56 95       	lsr	r21
    1726:	97 95       	ror	r25
    1728:	28 f4       	brcc	.+10     	; 0x1734 <sqrt+0x2c>
    172a:	80 5c       	subi	r24, 0xC0	; 192
    172c:	66 0f       	add	r22, r22
    172e:	77 1f       	adc	r23, r23
    1730:	88 1f       	adc	r24, r24
    1732:	20 f0       	brcs	.+8      	; 0x173c <sqrt+0x34>
    1734:	26 17       	cp	r18, r22
    1736:	37 07       	cpc	r19, r23
    1738:	48 07       	cpc	r20, r24
    173a:	30 f4       	brcc	.+12     	; 0x1748 <sqrt+0x40>
    173c:	62 1b       	sub	r22, r18
    173e:	73 0b       	sbc	r23, r19
    1740:	84 0b       	sbc	r24, r20
    1742:	20 29       	or	r18, r0
    1744:	31 29       	or	r19, r1
    1746:	4a 2b       	or	r20, r26
    1748:	a6 95       	lsr	r26
    174a:	17 94       	ror	r1
    174c:	07 94       	ror	r0
    174e:	20 25       	eor	r18, r0
    1750:	31 25       	eor	r19, r1
    1752:	4a 27       	eor	r20, r26
    1754:	58 f7       	brcc	.-42     	; 0x172c <sqrt+0x24>
    1756:	66 0f       	add	r22, r22
    1758:	77 1f       	adc	r23, r23
    175a:	88 1f       	adc	r24, r24
    175c:	20 f0       	brcs	.+8      	; 0x1766 <sqrt+0x5e>
    175e:	26 17       	cp	r18, r22
    1760:	37 07       	cpc	r19, r23
    1762:	48 07       	cpc	r20, r24
    1764:	30 f4       	brcc	.+12     	; 0x1772 <sqrt+0x6a>
    1766:	62 0b       	sbc	r22, r18
    1768:	73 0b       	sbc	r23, r19
    176a:	84 0b       	sbc	r24, r20
    176c:	20 0d       	add	r18, r0
    176e:	31 1d       	adc	r19, r1
    1770:	41 1d       	adc	r20, r1
    1772:	a0 95       	com	r26
    1774:	81 f7       	brne	.-32     	; 0x1756 <sqrt+0x4e>
    1776:	b9 01       	movw	r22, r18
    1778:	84 2f       	mov	r24, r20
    177a:	91 58       	subi	r25, 0x81	; 129
    177c:	88 0f       	add	r24, r24
    177e:	96 95       	lsr	r25
    1780:	87 95       	ror	r24
    1782:	08 95       	ret

00001784 <__fp_mpack>:
    1784:	9f 3f       	cpi	r25, 0xFF	; 255
    1786:	31 f0       	breq	.+12     	; 0x1794 <__fp_mpack_finite+0xc>

00001788 <__fp_mpack_finite>:
    1788:	91 50       	subi	r25, 0x01	; 1
    178a:	20 f4       	brcc	.+8      	; 0x1794 <__fp_mpack_finite+0xc>
    178c:	87 95       	ror	r24
    178e:	77 95       	ror	r23
    1790:	67 95       	ror	r22
    1792:	b7 95       	ror	r27
    1794:	88 0f       	add	r24, r24
    1796:	91 1d       	adc	r25, r1
    1798:	96 95       	lsr	r25
    179a:	87 95       	ror	r24
    179c:	97 f9       	bld	r25, 7
    179e:	08 95       	ret

000017a0 <__fp_norm2>:
    17a0:	91 50       	subi	r25, 0x01	; 1
    17a2:	50 40       	sbci	r21, 0x00	; 0
    17a4:	66 0f       	add	r22, r22
    17a6:	77 1f       	adc	r23, r23
    17a8:	88 1f       	adc	r24, r24
    17aa:	d2 f7       	brpl	.-12     	; 0x17a0 <__fp_norm2>
    17ac:	08 95       	ret

000017ae <__divmodhi4>:
    17ae:	97 fb       	bst	r25, 7
    17b0:	07 2e       	mov	r0, r23
    17b2:	16 f4       	brtc	.+4      	; 0x17b8 <__divmodhi4+0xa>
    17b4:	00 94       	com	r0
    17b6:	07 d0       	rcall	.+14     	; 0x17c6 <__divmodhi4_neg1>
    17b8:	77 fd       	sbrc	r23, 7
    17ba:	09 d0       	rcall	.+18     	; 0x17ce <__divmodhi4_neg2>
    17bc:	0e 94 eb 0b 	call	0x17d6	; 0x17d6 <__udivmodhi4>
    17c0:	07 fc       	sbrc	r0, 7
    17c2:	05 d0       	rcall	.+10     	; 0x17ce <__divmodhi4_neg2>
    17c4:	3e f4       	brtc	.+14     	; 0x17d4 <__divmodhi4_exit>

000017c6 <__divmodhi4_neg1>:
    17c6:	90 95       	com	r25
    17c8:	81 95       	neg	r24
    17ca:	9f 4f       	sbci	r25, 0xFF	; 255
    17cc:	08 95       	ret

000017ce <__divmodhi4_neg2>:
    17ce:	70 95       	com	r23
    17d0:	61 95       	neg	r22
    17d2:	7f 4f       	sbci	r23, 0xFF	; 255

000017d4 <__divmodhi4_exit>:
    17d4:	08 95       	ret

000017d6 <__udivmodhi4>:
    17d6:	aa 1b       	sub	r26, r26
    17d8:	bb 1b       	sub	r27, r27
    17da:	51 e1       	ldi	r21, 0x11	; 17
    17dc:	07 c0       	rjmp	.+14     	; 0x17ec <__udivmodhi4_ep>

000017de <__udivmodhi4_loop>:
    17de:	aa 1f       	adc	r26, r26
    17e0:	bb 1f       	adc	r27, r27
    17e2:	a6 17       	cp	r26, r22
    17e4:	b7 07       	cpc	r27, r23
    17e6:	10 f0       	brcs	.+4      	; 0x17ec <__udivmodhi4_ep>
    17e8:	a6 1b       	sub	r26, r22
    17ea:	b7 0b       	sbc	r27, r23

000017ec <__udivmodhi4_ep>:
    17ec:	88 1f       	adc	r24, r24
    17ee:	99 1f       	adc	r25, r25
    17f0:	5a 95       	dec	r21
    17f2:	a9 f7       	brne	.-22     	; 0x17de <__udivmodhi4_loop>
    17f4:	80 95       	com	r24
    17f6:	90 95       	com	r25
    17f8:	bc 01       	movw	r22, r24
    17fa:	cd 01       	movw	r24, r26
    17fc:	08 95       	ret

000017fe <do_rand>:
    17fe:	8f 92       	push	r8
    1800:	9f 92       	push	r9
    1802:	af 92       	push	r10
    1804:	bf 92       	push	r11
    1806:	cf 92       	push	r12
    1808:	df 92       	push	r13
    180a:	ef 92       	push	r14
    180c:	ff 92       	push	r15
    180e:	cf 93       	push	r28
    1810:	df 93       	push	r29
    1812:	ec 01       	movw	r28, r24
    1814:	68 81       	ld	r22, Y
    1816:	79 81       	ldd	r23, Y+1	; 0x01
    1818:	8a 81       	ldd	r24, Y+2	; 0x02
    181a:	9b 81       	ldd	r25, Y+3	; 0x03
    181c:	61 15       	cp	r22, r1
    181e:	71 05       	cpc	r23, r1
    1820:	81 05       	cpc	r24, r1
    1822:	91 05       	cpc	r25, r1
    1824:	21 f4       	brne	.+8      	; 0x182e <do_rand+0x30>
    1826:	64 e2       	ldi	r22, 0x24	; 36
    1828:	79 ed       	ldi	r23, 0xD9	; 217
    182a:	8b e5       	ldi	r24, 0x5B	; 91
    182c:	97 e0       	ldi	r25, 0x07	; 7
    182e:	2d e1       	ldi	r18, 0x1D	; 29
    1830:	33 ef       	ldi	r19, 0xF3	; 243
    1832:	41 e0       	ldi	r20, 0x01	; 1
    1834:	50 e0       	ldi	r21, 0x00	; 0
    1836:	0e 94 ab 10 	call	0x2156	; 0x2156 <__divmodsi4>
    183a:	49 01       	movw	r8, r18
    183c:	5a 01       	movw	r10, r20
    183e:	9b 01       	movw	r18, r22
    1840:	ac 01       	movw	r20, r24
    1842:	a7 ea       	ldi	r26, 0xA7	; 167
    1844:	b1 e4       	ldi	r27, 0x41	; 65
    1846:	0e 94 ca 10 	call	0x2194	; 0x2194 <__muluhisi3>
    184a:	6b 01       	movw	r12, r22
    184c:	7c 01       	movw	r14, r24
    184e:	ac ee       	ldi	r26, 0xEC	; 236
    1850:	b4 ef       	ldi	r27, 0xF4	; 244
    1852:	a5 01       	movw	r20, r10
    1854:	94 01       	movw	r18, r8
    1856:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <__mulohisi3>
    185a:	c6 0e       	add	r12, r22
    185c:	d7 1e       	adc	r13, r23
    185e:	e8 1e       	adc	r14, r24
    1860:	f9 1e       	adc	r15, r25
    1862:	f7 fe       	sbrs	r15, 7
    1864:	06 c0       	rjmp	.+12     	; 0x1872 <do_rand+0x74>
    1866:	81 e0       	ldi	r24, 0x01	; 1
    1868:	c8 1a       	sub	r12, r24
    186a:	d1 08       	sbc	r13, r1
    186c:	e1 08       	sbc	r14, r1
    186e:	80 e8       	ldi	r24, 0x80	; 128
    1870:	f8 0a       	sbc	r15, r24
    1872:	c8 82       	st	Y, r12
    1874:	d9 82       	std	Y+1, r13	; 0x01
    1876:	ea 82       	std	Y+2, r14	; 0x02
    1878:	fb 82       	std	Y+3, r15	; 0x03
    187a:	c6 01       	movw	r24, r12
    187c:	9f 77       	andi	r25, 0x7F	; 127
    187e:	df 91       	pop	r29
    1880:	cf 91       	pop	r28
    1882:	ff 90       	pop	r15
    1884:	ef 90       	pop	r14
    1886:	df 90       	pop	r13
    1888:	cf 90       	pop	r12
    188a:	bf 90       	pop	r11
    188c:	af 90       	pop	r10
    188e:	9f 90       	pop	r9
    1890:	8f 90       	pop	r8
    1892:	08 95       	ret

00001894 <rand_r>:
    1894:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <do_rand>
    1898:	08 95       	ret

0000189a <rand>:
    189a:	80 e0       	ldi	r24, 0x00	; 0
    189c:	91 e0       	ldi	r25, 0x01	; 1
    189e:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <do_rand>
    18a2:	08 95       	ret

000018a4 <srand>:
    18a4:	a0 e0       	ldi	r26, 0x00	; 0
    18a6:	b0 e0       	ldi	r27, 0x00	; 0
    18a8:	80 93 00 01 	sts	0x0100, r24
    18ac:	90 93 01 01 	sts	0x0101, r25
    18b0:	a0 93 02 01 	sts	0x0102, r26
    18b4:	b0 93 03 01 	sts	0x0103, r27
    18b8:	08 95       	ret

000018ba <fdevopen>:
    18ba:	0f 93       	push	r16
    18bc:	1f 93       	push	r17
    18be:	cf 93       	push	r28
    18c0:	df 93       	push	r29
    18c2:	ec 01       	movw	r28, r24
    18c4:	8b 01       	movw	r16, r22
    18c6:	00 97       	sbiw	r24, 0x00	; 0
    18c8:	31 f4       	brne	.+12     	; 0x18d6 <fdevopen+0x1c>
    18ca:	61 15       	cp	r22, r1
    18cc:	71 05       	cpc	r23, r1
    18ce:	19 f4       	brne	.+6      	; 0x18d6 <fdevopen+0x1c>
    18d0:	80 e0       	ldi	r24, 0x00	; 0
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	38 c0       	rjmp	.+112    	; 0x1946 <fdevopen+0x8c>
    18d6:	6e e0       	ldi	r22, 0x0E	; 14
    18d8:	70 e0       	ldi	r23, 0x00	; 0
    18da:	81 e0       	ldi	r24, 0x01	; 1
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <calloc>
    18e2:	fc 01       	movw	r30, r24
    18e4:	00 97       	sbiw	r24, 0x00	; 0
    18e6:	a1 f3       	breq	.-24     	; 0x18d0 <fdevopen+0x16>
    18e8:	80 e8       	ldi	r24, 0x80	; 128
    18ea:	83 83       	std	Z+3, r24	; 0x03
    18ec:	01 15       	cp	r16, r1
    18ee:	11 05       	cpc	r17, r1
    18f0:	71 f0       	breq	.+28     	; 0x190e <fdevopen+0x54>
    18f2:	13 87       	std	Z+11, r17	; 0x0b
    18f4:	02 87       	std	Z+10, r16	; 0x0a
    18f6:	81 e8       	ldi	r24, 0x81	; 129
    18f8:	83 83       	std	Z+3, r24	; 0x03
    18fa:	80 91 2b 04 	lds	r24, 0x042B
    18fe:	90 91 2c 04 	lds	r25, 0x042C
    1902:	89 2b       	or	r24, r25
    1904:	21 f4       	brne	.+8      	; 0x190e <fdevopen+0x54>
    1906:	f0 93 2c 04 	sts	0x042C, r31
    190a:	e0 93 2b 04 	sts	0x042B, r30
    190e:	20 97       	sbiw	r28, 0x00	; 0
    1910:	c9 f0       	breq	.+50     	; 0x1944 <fdevopen+0x8a>
    1912:	d1 87       	std	Z+9, r29	; 0x09
    1914:	c0 87       	std	Z+8, r28	; 0x08
    1916:	83 81       	ldd	r24, Z+3	; 0x03
    1918:	82 60       	ori	r24, 0x02	; 2
    191a:	83 83       	std	Z+3, r24	; 0x03
    191c:	80 91 2d 04 	lds	r24, 0x042D
    1920:	90 91 2e 04 	lds	r25, 0x042E
    1924:	89 2b       	or	r24, r25
    1926:	71 f4       	brne	.+28     	; 0x1944 <fdevopen+0x8a>
    1928:	f0 93 2e 04 	sts	0x042E, r31
    192c:	e0 93 2d 04 	sts	0x042D, r30
    1930:	80 91 2f 04 	lds	r24, 0x042F
    1934:	90 91 30 04 	lds	r25, 0x0430
    1938:	89 2b       	or	r24, r25
    193a:	21 f4       	brne	.+8      	; 0x1944 <fdevopen+0x8a>
    193c:	f0 93 30 04 	sts	0x0430, r31
    1940:	e0 93 2f 04 	sts	0x042F, r30
    1944:	cf 01       	movw	r24, r30
    1946:	df 91       	pop	r29
    1948:	cf 91       	pop	r28
    194a:	1f 91       	pop	r17
    194c:	0f 91       	pop	r16
    194e:	08 95       	ret

00001950 <printf>:
    1950:	a0 e0       	ldi	r26, 0x00	; 0
    1952:	b0 e0       	ldi	r27, 0x00	; 0
    1954:	ee ea       	ldi	r30, 0xAE	; 174
    1956:	fc e0       	ldi	r31, 0x0C	; 12
    1958:	0c 94 ed 10 	jmp	0x21da	; 0x21da <__prologue_saves__+0x20>
    195c:	fe 01       	movw	r30, r28
    195e:	35 96       	adiw	r30, 0x05	; 5
    1960:	61 91       	ld	r22, Z+
    1962:	71 91       	ld	r23, Z+
    1964:	af 01       	movw	r20, r30
    1966:	80 91 2d 04 	lds	r24, 0x042D
    196a:	90 91 2e 04 	lds	r25, 0x042E
    196e:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <vfprintf>
    1972:	e2 e0       	ldi	r30, 0x02	; 2
    1974:	0c 94 09 11 	jmp	0x2212	; 0x2212 <__epilogue_restores__+0x20>

00001978 <puts>:
    1978:	0f 93       	push	r16
    197a:	1f 93       	push	r17
    197c:	cf 93       	push	r28
    197e:	df 93       	push	r29
    1980:	e0 91 2d 04 	lds	r30, 0x042D
    1984:	f0 91 2e 04 	lds	r31, 0x042E
    1988:	23 81       	ldd	r18, Z+3	; 0x03
    198a:	21 ff       	sbrs	r18, 1
    198c:	1b c0       	rjmp	.+54     	; 0x19c4 <puts+0x4c>
    198e:	ec 01       	movw	r28, r24
    1990:	00 e0       	ldi	r16, 0x00	; 0
    1992:	10 e0       	ldi	r17, 0x00	; 0
    1994:	89 91       	ld	r24, Y+
    1996:	60 91 2d 04 	lds	r22, 0x042D
    199a:	70 91 2e 04 	lds	r23, 0x042E
    199e:	db 01       	movw	r26, r22
    19a0:	18 96       	adiw	r26, 0x08	; 8
    19a2:	ed 91       	ld	r30, X+
    19a4:	fc 91       	ld	r31, X
    19a6:	19 97       	sbiw	r26, 0x09	; 9
    19a8:	88 23       	and	r24, r24
    19aa:	31 f0       	breq	.+12     	; 0x19b8 <puts+0x40>
    19ac:	09 95       	icall
    19ae:	89 2b       	or	r24, r25
    19b0:	89 f3       	breq	.-30     	; 0x1994 <puts+0x1c>
    19b2:	0f ef       	ldi	r16, 0xFF	; 255
    19b4:	1f ef       	ldi	r17, 0xFF	; 255
    19b6:	ee cf       	rjmp	.-36     	; 0x1994 <puts+0x1c>
    19b8:	8a e0       	ldi	r24, 0x0A	; 10
    19ba:	09 95       	icall
    19bc:	89 2b       	or	r24, r25
    19be:	11 f4       	brne	.+4      	; 0x19c4 <puts+0x4c>
    19c0:	c8 01       	movw	r24, r16
    19c2:	02 c0       	rjmp	.+4      	; 0x19c8 <puts+0x50>
    19c4:	8f ef       	ldi	r24, 0xFF	; 255
    19c6:	9f ef       	ldi	r25, 0xFF	; 255
    19c8:	df 91       	pop	r29
    19ca:	cf 91       	pop	r28
    19cc:	1f 91       	pop	r17
    19ce:	0f 91       	pop	r16
    19d0:	08 95       	ret

000019d2 <vfprintf>:
    19d2:	ac e0       	ldi	r26, 0x0C	; 12
    19d4:	b0 e0       	ldi	r27, 0x00	; 0
    19d6:	ef ee       	ldi	r30, 0xEF	; 239
    19d8:	fc e0       	ldi	r31, 0x0C	; 12
    19da:	0c 94 dd 10 	jmp	0x21ba	; 0x21ba <__prologue_saves__>
    19de:	7c 01       	movw	r14, r24
    19e0:	6b 01       	movw	r12, r22
    19e2:	8a 01       	movw	r16, r20
    19e4:	fc 01       	movw	r30, r24
    19e6:	17 82       	std	Z+7, r1	; 0x07
    19e8:	16 82       	std	Z+6, r1	; 0x06
    19ea:	83 81       	ldd	r24, Z+3	; 0x03
    19ec:	81 ff       	sbrs	r24, 1
    19ee:	bd c1       	rjmp	.+890    	; 0x1d6a <vfprintf+0x398>
    19f0:	ce 01       	movw	r24, r28
    19f2:	01 96       	adiw	r24, 0x01	; 1
    19f4:	4c 01       	movw	r8, r24
    19f6:	f7 01       	movw	r30, r14
    19f8:	93 81       	ldd	r25, Z+3	; 0x03
    19fa:	f6 01       	movw	r30, r12
    19fc:	93 fd       	sbrc	r25, 3
    19fe:	85 91       	lpm	r24, Z+
    1a00:	93 ff       	sbrs	r25, 3
    1a02:	81 91       	ld	r24, Z+
    1a04:	6f 01       	movw	r12, r30
    1a06:	88 23       	and	r24, r24
    1a08:	09 f4       	brne	.+2      	; 0x1a0c <vfprintf+0x3a>
    1a0a:	ab c1       	rjmp	.+854    	; 0x1d62 <vfprintf+0x390>
    1a0c:	85 32       	cpi	r24, 0x25	; 37
    1a0e:	39 f4       	brne	.+14     	; 0x1a1e <vfprintf+0x4c>
    1a10:	93 fd       	sbrc	r25, 3
    1a12:	85 91       	lpm	r24, Z+
    1a14:	93 ff       	sbrs	r25, 3
    1a16:	81 91       	ld	r24, Z+
    1a18:	6f 01       	movw	r12, r30
    1a1a:	85 32       	cpi	r24, 0x25	; 37
    1a1c:	29 f4       	brne	.+10     	; 0x1a28 <vfprintf+0x56>
    1a1e:	b7 01       	movw	r22, r14
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	0e 94 1b 10 	call	0x2036	; 0x2036 <fputc>
    1a26:	e7 cf       	rjmp	.-50     	; 0x19f6 <vfprintf+0x24>
    1a28:	51 2c       	mov	r5, r1
    1a2a:	31 2c       	mov	r3, r1
    1a2c:	20 e0       	ldi	r18, 0x00	; 0
    1a2e:	20 32       	cpi	r18, 0x20	; 32
    1a30:	a0 f4       	brcc	.+40     	; 0x1a5a <vfprintf+0x88>
    1a32:	8b 32       	cpi	r24, 0x2B	; 43
    1a34:	69 f0       	breq	.+26     	; 0x1a50 <vfprintf+0x7e>
    1a36:	30 f4       	brcc	.+12     	; 0x1a44 <vfprintf+0x72>
    1a38:	80 32       	cpi	r24, 0x20	; 32
    1a3a:	59 f0       	breq	.+22     	; 0x1a52 <vfprintf+0x80>
    1a3c:	83 32       	cpi	r24, 0x23	; 35
    1a3e:	69 f4       	brne	.+26     	; 0x1a5a <vfprintf+0x88>
    1a40:	20 61       	ori	r18, 0x10	; 16
    1a42:	2c c0       	rjmp	.+88     	; 0x1a9c <vfprintf+0xca>
    1a44:	8d 32       	cpi	r24, 0x2D	; 45
    1a46:	39 f0       	breq	.+14     	; 0x1a56 <vfprintf+0x84>
    1a48:	80 33       	cpi	r24, 0x30	; 48
    1a4a:	39 f4       	brne	.+14     	; 0x1a5a <vfprintf+0x88>
    1a4c:	21 60       	ori	r18, 0x01	; 1
    1a4e:	26 c0       	rjmp	.+76     	; 0x1a9c <vfprintf+0xca>
    1a50:	22 60       	ori	r18, 0x02	; 2
    1a52:	24 60       	ori	r18, 0x04	; 4
    1a54:	23 c0       	rjmp	.+70     	; 0x1a9c <vfprintf+0xca>
    1a56:	28 60       	ori	r18, 0x08	; 8
    1a58:	21 c0       	rjmp	.+66     	; 0x1a9c <vfprintf+0xca>
    1a5a:	27 fd       	sbrc	r18, 7
    1a5c:	27 c0       	rjmp	.+78     	; 0x1aac <vfprintf+0xda>
    1a5e:	30 ed       	ldi	r19, 0xD0	; 208
    1a60:	38 0f       	add	r19, r24
    1a62:	3a 30       	cpi	r19, 0x0A	; 10
    1a64:	78 f4       	brcc	.+30     	; 0x1a84 <vfprintf+0xb2>
    1a66:	26 ff       	sbrs	r18, 6
    1a68:	06 c0       	rjmp	.+12     	; 0x1a76 <vfprintf+0xa4>
    1a6a:	fa e0       	ldi	r31, 0x0A	; 10
    1a6c:	5f 9e       	mul	r5, r31
    1a6e:	30 0d       	add	r19, r0
    1a70:	11 24       	eor	r1, r1
    1a72:	53 2e       	mov	r5, r19
    1a74:	13 c0       	rjmp	.+38     	; 0x1a9c <vfprintf+0xca>
    1a76:	8a e0       	ldi	r24, 0x0A	; 10
    1a78:	38 9e       	mul	r3, r24
    1a7a:	30 0d       	add	r19, r0
    1a7c:	11 24       	eor	r1, r1
    1a7e:	33 2e       	mov	r3, r19
    1a80:	20 62       	ori	r18, 0x20	; 32
    1a82:	0c c0       	rjmp	.+24     	; 0x1a9c <vfprintf+0xca>
    1a84:	8e 32       	cpi	r24, 0x2E	; 46
    1a86:	21 f4       	brne	.+8      	; 0x1a90 <vfprintf+0xbe>
    1a88:	26 fd       	sbrc	r18, 6
    1a8a:	6b c1       	rjmp	.+726    	; 0x1d62 <vfprintf+0x390>
    1a8c:	20 64       	ori	r18, 0x40	; 64
    1a8e:	06 c0       	rjmp	.+12     	; 0x1a9c <vfprintf+0xca>
    1a90:	8c 36       	cpi	r24, 0x6C	; 108
    1a92:	11 f4       	brne	.+4      	; 0x1a98 <vfprintf+0xc6>
    1a94:	20 68       	ori	r18, 0x80	; 128
    1a96:	02 c0       	rjmp	.+4      	; 0x1a9c <vfprintf+0xca>
    1a98:	88 36       	cpi	r24, 0x68	; 104
    1a9a:	41 f4       	brne	.+16     	; 0x1aac <vfprintf+0xda>
    1a9c:	f6 01       	movw	r30, r12
    1a9e:	93 fd       	sbrc	r25, 3
    1aa0:	85 91       	lpm	r24, Z+
    1aa2:	93 ff       	sbrs	r25, 3
    1aa4:	81 91       	ld	r24, Z+
    1aa6:	6f 01       	movw	r12, r30
    1aa8:	81 11       	cpse	r24, r1
    1aaa:	c1 cf       	rjmp	.-126    	; 0x1a2e <vfprintf+0x5c>
    1aac:	98 2f       	mov	r25, r24
    1aae:	9f 7d       	andi	r25, 0xDF	; 223
    1ab0:	95 54       	subi	r25, 0x45	; 69
    1ab2:	93 30       	cpi	r25, 0x03	; 3
    1ab4:	28 f4       	brcc	.+10     	; 0x1ac0 <vfprintf+0xee>
    1ab6:	0c 5f       	subi	r16, 0xFC	; 252
    1ab8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aba:	ff e3       	ldi	r31, 0x3F	; 63
    1abc:	f9 83       	std	Y+1, r31	; 0x01
    1abe:	0d c0       	rjmp	.+26     	; 0x1ada <vfprintf+0x108>
    1ac0:	83 36       	cpi	r24, 0x63	; 99
    1ac2:	31 f0       	breq	.+12     	; 0x1ad0 <vfprintf+0xfe>
    1ac4:	83 37       	cpi	r24, 0x73	; 115
    1ac6:	71 f0       	breq	.+28     	; 0x1ae4 <vfprintf+0x112>
    1ac8:	83 35       	cpi	r24, 0x53	; 83
    1aca:	09 f0       	breq	.+2      	; 0x1ace <vfprintf+0xfc>
    1acc:	5b c0       	rjmp	.+182    	; 0x1b84 <vfprintf+0x1b2>
    1ace:	22 c0       	rjmp	.+68     	; 0x1b14 <vfprintf+0x142>
    1ad0:	f8 01       	movw	r30, r16
    1ad2:	80 81       	ld	r24, Z
    1ad4:	89 83       	std	Y+1, r24	; 0x01
    1ad6:	0e 5f       	subi	r16, 0xFE	; 254
    1ad8:	1f 4f       	sbci	r17, 0xFF	; 255
    1ada:	44 24       	eor	r4, r4
    1adc:	43 94       	inc	r4
    1ade:	51 2c       	mov	r5, r1
    1ae0:	54 01       	movw	r10, r8
    1ae2:	15 c0       	rjmp	.+42     	; 0x1b0e <vfprintf+0x13c>
    1ae4:	38 01       	movw	r6, r16
    1ae6:	f2 e0       	ldi	r31, 0x02	; 2
    1ae8:	6f 0e       	add	r6, r31
    1aea:	71 1c       	adc	r7, r1
    1aec:	f8 01       	movw	r30, r16
    1aee:	a0 80       	ld	r10, Z
    1af0:	b1 80       	ldd	r11, Z+1	; 0x01
    1af2:	26 ff       	sbrs	r18, 6
    1af4:	03 c0       	rjmp	.+6      	; 0x1afc <vfprintf+0x12a>
    1af6:	65 2d       	mov	r22, r5
    1af8:	70 e0       	ldi	r23, 0x00	; 0
    1afa:	02 c0       	rjmp	.+4      	; 0x1b00 <vfprintf+0x12e>
    1afc:	6f ef       	ldi	r22, 0xFF	; 255
    1afe:	7f ef       	ldi	r23, 0xFF	; 255
    1b00:	c5 01       	movw	r24, r10
    1b02:	2c 87       	std	Y+12, r18	; 0x0c
    1b04:	0e 94 10 10 	call	0x2020	; 0x2020 <strnlen>
    1b08:	2c 01       	movw	r4, r24
    1b0a:	83 01       	movw	r16, r6
    1b0c:	2c 85       	ldd	r18, Y+12	; 0x0c
    1b0e:	2f 77       	andi	r18, 0x7F	; 127
    1b10:	22 2e       	mov	r2, r18
    1b12:	17 c0       	rjmp	.+46     	; 0x1b42 <vfprintf+0x170>
    1b14:	38 01       	movw	r6, r16
    1b16:	f2 e0       	ldi	r31, 0x02	; 2
    1b18:	6f 0e       	add	r6, r31
    1b1a:	71 1c       	adc	r7, r1
    1b1c:	f8 01       	movw	r30, r16
    1b1e:	a0 80       	ld	r10, Z
    1b20:	b1 80       	ldd	r11, Z+1	; 0x01
    1b22:	26 ff       	sbrs	r18, 6
    1b24:	03 c0       	rjmp	.+6      	; 0x1b2c <vfprintf+0x15a>
    1b26:	65 2d       	mov	r22, r5
    1b28:	70 e0       	ldi	r23, 0x00	; 0
    1b2a:	02 c0       	rjmp	.+4      	; 0x1b30 <vfprintf+0x15e>
    1b2c:	6f ef       	ldi	r22, 0xFF	; 255
    1b2e:	7f ef       	ldi	r23, 0xFF	; 255
    1b30:	c5 01       	movw	r24, r10
    1b32:	2c 87       	std	Y+12, r18	; 0x0c
    1b34:	0e 94 fe 0f 	call	0x1ffc	; 0x1ffc <strnlen_P>
    1b38:	2c 01       	movw	r4, r24
    1b3a:	2c 85       	ldd	r18, Y+12	; 0x0c
    1b3c:	20 68       	ori	r18, 0x80	; 128
    1b3e:	22 2e       	mov	r2, r18
    1b40:	83 01       	movw	r16, r6
    1b42:	23 fc       	sbrc	r2, 3
    1b44:	1b c0       	rjmp	.+54     	; 0x1b7c <vfprintf+0x1aa>
    1b46:	83 2d       	mov	r24, r3
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	48 16       	cp	r4, r24
    1b4c:	59 06       	cpc	r5, r25
    1b4e:	b0 f4       	brcc	.+44     	; 0x1b7c <vfprintf+0x1aa>
    1b50:	b7 01       	movw	r22, r14
    1b52:	80 e2       	ldi	r24, 0x20	; 32
    1b54:	90 e0       	ldi	r25, 0x00	; 0
    1b56:	0e 94 1b 10 	call	0x2036	; 0x2036 <fputc>
    1b5a:	3a 94       	dec	r3
    1b5c:	f4 cf       	rjmp	.-24     	; 0x1b46 <vfprintf+0x174>
    1b5e:	f5 01       	movw	r30, r10
    1b60:	27 fc       	sbrc	r2, 7
    1b62:	85 91       	lpm	r24, Z+
    1b64:	27 fe       	sbrs	r2, 7
    1b66:	81 91       	ld	r24, Z+
    1b68:	5f 01       	movw	r10, r30
    1b6a:	b7 01       	movw	r22, r14
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	0e 94 1b 10 	call	0x2036	; 0x2036 <fputc>
    1b72:	31 10       	cpse	r3, r1
    1b74:	3a 94       	dec	r3
    1b76:	f1 e0       	ldi	r31, 0x01	; 1
    1b78:	4f 1a       	sub	r4, r31
    1b7a:	51 08       	sbc	r5, r1
    1b7c:	41 14       	cp	r4, r1
    1b7e:	51 04       	cpc	r5, r1
    1b80:	71 f7       	brne	.-36     	; 0x1b5e <vfprintf+0x18c>
    1b82:	e5 c0       	rjmp	.+458    	; 0x1d4e <vfprintf+0x37c>
    1b84:	84 36       	cpi	r24, 0x64	; 100
    1b86:	11 f0       	breq	.+4      	; 0x1b8c <vfprintf+0x1ba>
    1b88:	89 36       	cpi	r24, 0x69	; 105
    1b8a:	39 f5       	brne	.+78     	; 0x1bda <vfprintf+0x208>
    1b8c:	f8 01       	movw	r30, r16
    1b8e:	27 ff       	sbrs	r18, 7
    1b90:	07 c0       	rjmp	.+14     	; 0x1ba0 <vfprintf+0x1ce>
    1b92:	60 81       	ld	r22, Z
    1b94:	71 81       	ldd	r23, Z+1	; 0x01
    1b96:	82 81       	ldd	r24, Z+2	; 0x02
    1b98:	93 81       	ldd	r25, Z+3	; 0x03
    1b9a:	0c 5f       	subi	r16, 0xFC	; 252
    1b9c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b9e:	08 c0       	rjmp	.+16     	; 0x1bb0 <vfprintf+0x1de>
    1ba0:	60 81       	ld	r22, Z
    1ba2:	71 81       	ldd	r23, Z+1	; 0x01
    1ba4:	88 27       	eor	r24, r24
    1ba6:	77 fd       	sbrc	r23, 7
    1ba8:	80 95       	com	r24
    1baa:	98 2f       	mov	r25, r24
    1bac:	0e 5f       	subi	r16, 0xFE	; 254
    1bae:	1f 4f       	sbci	r17, 0xFF	; 255
    1bb0:	2f 76       	andi	r18, 0x6F	; 111
    1bb2:	b2 2e       	mov	r11, r18
    1bb4:	97 ff       	sbrs	r25, 7
    1bb6:	09 c0       	rjmp	.+18     	; 0x1bca <vfprintf+0x1f8>
    1bb8:	90 95       	com	r25
    1bba:	80 95       	com	r24
    1bbc:	70 95       	com	r23
    1bbe:	61 95       	neg	r22
    1bc0:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc2:	8f 4f       	sbci	r24, 0xFF	; 255
    1bc4:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc6:	20 68       	ori	r18, 0x80	; 128
    1bc8:	b2 2e       	mov	r11, r18
    1bca:	2a e0       	ldi	r18, 0x0A	; 10
    1bcc:	30 e0       	ldi	r19, 0x00	; 0
    1bce:	a4 01       	movw	r20, r8
    1bd0:	0e 94 4d 10 	call	0x209a	; 0x209a <__ultoa_invert>
    1bd4:	a8 2e       	mov	r10, r24
    1bd6:	a8 18       	sub	r10, r8
    1bd8:	44 c0       	rjmp	.+136    	; 0x1c62 <vfprintf+0x290>
    1bda:	85 37       	cpi	r24, 0x75	; 117
    1bdc:	29 f4       	brne	.+10     	; 0x1be8 <vfprintf+0x216>
    1bde:	2f 7e       	andi	r18, 0xEF	; 239
    1be0:	b2 2e       	mov	r11, r18
    1be2:	2a e0       	ldi	r18, 0x0A	; 10
    1be4:	30 e0       	ldi	r19, 0x00	; 0
    1be6:	25 c0       	rjmp	.+74     	; 0x1c32 <vfprintf+0x260>
    1be8:	f2 2f       	mov	r31, r18
    1bea:	f9 7f       	andi	r31, 0xF9	; 249
    1bec:	bf 2e       	mov	r11, r31
    1bee:	8f 36       	cpi	r24, 0x6F	; 111
    1bf0:	c1 f0       	breq	.+48     	; 0x1c22 <vfprintf+0x250>
    1bf2:	18 f4       	brcc	.+6      	; 0x1bfa <vfprintf+0x228>
    1bf4:	88 35       	cpi	r24, 0x58	; 88
    1bf6:	79 f0       	breq	.+30     	; 0x1c16 <vfprintf+0x244>
    1bf8:	b4 c0       	rjmp	.+360    	; 0x1d62 <vfprintf+0x390>
    1bfa:	80 37       	cpi	r24, 0x70	; 112
    1bfc:	19 f0       	breq	.+6      	; 0x1c04 <vfprintf+0x232>
    1bfe:	88 37       	cpi	r24, 0x78	; 120
    1c00:	21 f0       	breq	.+8      	; 0x1c0a <vfprintf+0x238>
    1c02:	af c0       	rjmp	.+350    	; 0x1d62 <vfprintf+0x390>
    1c04:	2f 2f       	mov	r18, r31
    1c06:	20 61       	ori	r18, 0x10	; 16
    1c08:	b2 2e       	mov	r11, r18
    1c0a:	b4 fe       	sbrs	r11, 4
    1c0c:	0d c0       	rjmp	.+26     	; 0x1c28 <vfprintf+0x256>
    1c0e:	8b 2d       	mov	r24, r11
    1c10:	84 60       	ori	r24, 0x04	; 4
    1c12:	b8 2e       	mov	r11, r24
    1c14:	09 c0       	rjmp	.+18     	; 0x1c28 <vfprintf+0x256>
    1c16:	24 ff       	sbrs	r18, 4
    1c18:	0a c0       	rjmp	.+20     	; 0x1c2e <vfprintf+0x25c>
    1c1a:	9f 2f       	mov	r25, r31
    1c1c:	96 60       	ori	r25, 0x06	; 6
    1c1e:	b9 2e       	mov	r11, r25
    1c20:	06 c0       	rjmp	.+12     	; 0x1c2e <vfprintf+0x25c>
    1c22:	28 e0       	ldi	r18, 0x08	; 8
    1c24:	30 e0       	ldi	r19, 0x00	; 0
    1c26:	05 c0       	rjmp	.+10     	; 0x1c32 <vfprintf+0x260>
    1c28:	20 e1       	ldi	r18, 0x10	; 16
    1c2a:	30 e0       	ldi	r19, 0x00	; 0
    1c2c:	02 c0       	rjmp	.+4      	; 0x1c32 <vfprintf+0x260>
    1c2e:	20 e1       	ldi	r18, 0x10	; 16
    1c30:	32 e0       	ldi	r19, 0x02	; 2
    1c32:	f8 01       	movw	r30, r16
    1c34:	b7 fe       	sbrs	r11, 7
    1c36:	07 c0       	rjmp	.+14     	; 0x1c46 <vfprintf+0x274>
    1c38:	60 81       	ld	r22, Z
    1c3a:	71 81       	ldd	r23, Z+1	; 0x01
    1c3c:	82 81       	ldd	r24, Z+2	; 0x02
    1c3e:	93 81       	ldd	r25, Z+3	; 0x03
    1c40:	0c 5f       	subi	r16, 0xFC	; 252
    1c42:	1f 4f       	sbci	r17, 0xFF	; 255
    1c44:	06 c0       	rjmp	.+12     	; 0x1c52 <vfprintf+0x280>
    1c46:	60 81       	ld	r22, Z
    1c48:	71 81       	ldd	r23, Z+1	; 0x01
    1c4a:	80 e0       	ldi	r24, 0x00	; 0
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	0e 5f       	subi	r16, 0xFE	; 254
    1c50:	1f 4f       	sbci	r17, 0xFF	; 255
    1c52:	a4 01       	movw	r20, r8
    1c54:	0e 94 4d 10 	call	0x209a	; 0x209a <__ultoa_invert>
    1c58:	a8 2e       	mov	r10, r24
    1c5a:	a8 18       	sub	r10, r8
    1c5c:	fb 2d       	mov	r31, r11
    1c5e:	ff 77       	andi	r31, 0x7F	; 127
    1c60:	bf 2e       	mov	r11, r31
    1c62:	b6 fe       	sbrs	r11, 6
    1c64:	0b c0       	rjmp	.+22     	; 0x1c7c <vfprintf+0x2aa>
    1c66:	2b 2d       	mov	r18, r11
    1c68:	2e 7f       	andi	r18, 0xFE	; 254
    1c6a:	a5 14       	cp	r10, r5
    1c6c:	50 f4       	brcc	.+20     	; 0x1c82 <vfprintf+0x2b0>
    1c6e:	b4 fe       	sbrs	r11, 4
    1c70:	0a c0       	rjmp	.+20     	; 0x1c86 <vfprintf+0x2b4>
    1c72:	b2 fc       	sbrc	r11, 2
    1c74:	08 c0       	rjmp	.+16     	; 0x1c86 <vfprintf+0x2b4>
    1c76:	2b 2d       	mov	r18, r11
    1c78:	2e 7e       	andi	r18, 0xEE	; 238
    1c7a:	05 c0       	rjmp	.+10     	; 0x1c86 <vfprintf+0x2b4>
    1c7c:	7a 2c       	mov	r7, r10
    1c7e:	2b 2d       	mov	r18, r11
    1c80:	03 c0       	rjmp	.+6      	; 0x1c88 <vfprintf+0x2b6>
    1c82:	7a 2c       	mov	r7, r10
    1c84:	01 c0       	rjmp	.+2      	; 0x1c88 <vfprintf+0x2b6>
    1c86:	75 2c       	mov	r7, r5
    1c88:	24 ff       	sbrs	r18, 4
    1c8a:	0d c0       	rjmp	.+26     	; 0x1ca6 <vfprintf+0x2d4>
    1c8c:	fe 01       	movw	r30, r28
    1c8e:	ea 0d       	add	r30, r10
    1c90:	f1 1d       	adc	r31, r1
    1c92:	80 81       	ld	r24, Z
    1c94:	80 33       	cpi	r24, 0x30	; 48
    1c96:	11 f4       	brne	.+4      	; 0x1c9c <vfprintf+0x2ca>
    1c98:	29 7e       	andi	r18, 0xE9	; 233
    1c9a:	09 c0       	rjmp	.+18     	; 0x1cae <vfprintf+0x2dc>
    1c9c:	22 ff       	sbrs	r18, 2
    1c9e:	06 c0       	rjmp	.+12     	; 0x1cac <vfprintf+0x2da>
    1ca0:	73 94       	inc	r7
    1ca2:	73 94       	inc	r7
    1ca4:	04 c0       	rjmp	.+8      	; 0x1cae <vfprintf+0x2dc>
    1ca6:	82 2f       	mov	r24, r18
    1ca8:	86 78       	andi	r24, 0x86	; 134
    1caa:	09 f0       	breq	.+2      	; 0x1cae <vfprintf+0x2dc>
    1cac:	73 94       	inc	r7
    1cae:	23 fd       	sbrc	r18, 3
    1cb0:	13 c0       	rjmp	.+38     	; 0x1cd8 <vfprintf+0x306>
    1cb2:	20 ff       	sbrs	r18, 0
    1cb4:	06 c0       	rjmp	.+12     	; 0x1cc2 <vfprintf+0x2f0>
    1cb6:	5a 2c       	mov	r5, r10
    1cb8:	73 14       	cp	r7, r3
    1cba:	18 f4       	brcc	.+6      	; 0x1cc2 <vfprintf+0x2f0>
    1cbc:	53 0c       	add	r5, r3
    1cbe:	57 18       	sub	r5, r7
    1cc0:	73 2c       	mov	r7, r3
    1cc2:	73 14       	cp	r7, r3
    1cc4:	68 f4       	brcc	.+26     	; 0x1ce0 <vfprintf+0x30e>
    1cc6:	b7 01       	movw	r22, r14
    1cc8:	80 e2       	ldi	r24, 0x20	; 32
    1cca:	90 e0       	ldi	r25, 0x00	; 0
    1ccc:	2c 87       	std	Y+12, r18	; 0x0c
    1cce:	0e 94 1b 10 	call	0x2036	; 0x2036 <fputc>
    1cd2:	73 94       	inc	r7
    1cd4:	2c 85       	ldd	r18, Y+12	; 0x0c
    1cd6:	f5 cf       	rjmp	.-22     	; 0x1cc2 <vfprintf+0x2f0>
    1cd8:	73 14       	cp	r7, r3
    1cda:	10 f4       	brcc	.+4      	; 0x1ce0 <vfprintf+0x30e>
    1cdc:	37 18       	sub	r3, r7
    1cde:	01 c0       	rjmp	.+2      	; 0x1ce2 <vfprintf+0x310>
    1ce0:	31 2c       	mov	r3, r1
    1ce2:	24 ff       	sbrs	r18, 4
    1ce4:	12 c0       	rjmp	.+36     	; 0x1d0a <vfprintf+0x338>
    1ce6:	b7 01       	movw	r22, r14
    1ce8:	80 e3       	ldi	r24, 0x30	; 48
    1cea:	90 e0       	ldi	r25, 0x00	; 0
    1cec:	2c 87       	std	Y+12, r18	; 0x0c
    1cee:	0e 94 1b 10 	call	0x2036	; 0x2036 <fputc>
    1cf2:	2c 85       	ldd	r18, Y+12	; 0x0c
    1cf4:	22 ff       	sbrs	r18, 2
    1cf6:	17 c0       	rjmp	.+46     	; 0x1d26 <vfprintf+0x354>
    1cf8:	21 ff       	sbrs	r18, 1
    1cfa:	03 c0       	rjmp	.+6      	; 0x1d02 <vfprintf+0x330>
    1cfc:	88 e5       	ldi	r24, 0x58	; 88
    1cfe:	90 e0       	ldi	r25, 0x00	; 0
    1d00:	02 c0       	rjmp	.+4      	; 0x1d06 <vfprintf+0x334>
    1d02:	88 e7       	ldi	r24, 0x78	; 120
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	b7 01       	movw	r22, r14
    1d08:	0c c0       	rjmp	.+24     	; 0x1d22 <vfprintf+0x350>
    1d0a:	82 2f       	mov	r24, r18
    1d0c:	86 78       	andi	r24, 0x86	; 134
    1d0e:	59 f0       	breq	.+22     	; 0x1d26 <vfprintf+0x354>
    1d10:	21 fd       	sbrc	r18, 1
    1d12:	02 c0       	rjmp	.+4      	; 0x1d18 <vfprintf+0x346>
    1d14:	80 e2       	ldi	r24, 0x20	; 32
    1d16:	01 c0       	rjmp	.+2      	; 0x1d1a <vfprintf+0x348>
    1d18:	8b e2       	ldi	r24, 0x2B	; 43
    1d1a:	27 fd       	sbrc	r18, 7
    1d1c:	8d e2       	ldi	r24, 0x2D	; 45
    1d1e:	b7 01       	movw	r22, r14
    1d20:	90 e0       	ldi	r25, 0x00	; 0
    1d22:	0e 94 1b 10 	call	0x2036	; 0x2036 <fputc>
    1d26:	a5 14       	cp	r10, r5
    1d28:	38 f4       	brcc	.+14     	; 0x1d38 <vfprintf+0x366>
    1d2a:	b7 01       	movw	r22, r14
    1d2c:	80 e3       	ldi	r24, 0x30	; 48
    1d2e:	90 e0       	ldi	r25, 0x00	; 0
    1d30:	0e 94 1b 10 	call	0x2036	; 0x2036 <fputc>
    1d34:	5a 94       	dec	r5
    1d36:	f7 cf       	rjmp	.-18     	; 0x1d26 <vfprintf+0x354>
    1d38:	aa 94       	dec	r10
    1d3a:	f4 01       	movw	r30, r8
    1d3c:	ea 0d       	add	r30, r10
    1d3e:	f1 1d       	adc	r31, r1
    1d40:	80 81       	ld	r24, Z
    1d42:	b7 01       	movw	r22, r14
    1d44:	90 e0       	ldi	r25, 0x00	; 0
    1d46:	0e 94 1b 10 	call	0x2036	; 0x2036 <fputc>
    1d4a:	a1 10       	cpse	r10, r1
    1d4c:	f5 cf       	rjmp	.-22     	; 0x1d38 <vfprintf+0x366>
    1d4e:	33 20       	and	r3, r3
    1d50:	09 f4       	brne	.+2      	; 0x1d54 <vfprintf+0x382>
    1d52:	51 ce       	rjmp	.-862    	; 0x19f6 <vfprintf+0x24>
    1d54:	b7 01       	movw	r22, r14
    1d56:	80 e2       	ldi	r24, 0x20	; 32
    1d58:	90 e0       	ldi	r25, 0x00	; 0
    1d5a:	0e 94 1b 10 	call	0x2036	; 0x2036 <fputc>
    1d5e:	3a 94       	dec	r3
    1d60:	f6 cf       	rjmp	.-20     	; 0x1d4e <vfprintf+0x37c>
    1d62:	f7 01       	movw	r30, r14
    1d64:	86 81       	ldd	r24, Z+6	; 0x06
    1d66:	97 81       	ldd	r25, Z+7	; 0x07
    1d68:	02 c0       	rjmp	.+4      	; 0x1d6e <vfprintf+0x39c>
    1d6a:	8f ef       	ldi	r24, 0xFF	; 255
    1d6c:	9f ef       	ldi	r25, 0xFF	; 255
    1d6e:	2c 96       	adiw	r28, 0x0c	; 12
    1d70:	e2 e1       	ldi	r30, 0x12	; 18
    1d72:	0c 94 f9 10 	jmp	0x21f2	; 0x21f2 <__epilogue_restores__>

00001d76 <calloc>:
    1d76:	0f 93       	push	r16
    1d78:	1f 93       	push	r17
    1d7a:	cf 93       	push	r28
    1d7c:	df 93       	push	r29
    1d7e:	86 9f       	mul	r24, r22
    1d80:	80 01       	movw	r16, r0
    1d82:	87 9f       	mul	r24, r23
    1d84:	10 0d       	add	r17, r0
    1d86:	96 9f       	mul	r25, r22
    1d88:	10 0d       	add	r17, r0
    1d8a:	11 24       	eor	r1, r1
    1d8c:	c8 01       	movw	r24, r16
    1d8e:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <malloc>
    1d92:	ec 01       	movw	r28, r24
    1d94:	00 97       	sbiw	r24, 0x00	; 0
    1d96:	29 f0       	breq	.+10     	; 0x1da2 <calloc+0x2c>
    1d98:	a8 01       	movw	r20, r16
    1d9a:	60 e0       	ldi	r22, 0x00	; 0
    1d9c:	70 e0       	ldi	r23, 0x00	; 0
    1d9e:	0e 94 09 10 	call	0x2012	; 0x2012 <memset>
    1da2:	ce 01       	movw	r24, r28
    1da4:	df 91       	pop	r29
    1da6:	cf 91       	pop	r28
    1da8:	1f 91       	pop	r17
    1daa:	0f 91       	pop	r16
    1dac:	08 95       	ret

00001dae <malloc>:
    1dae:	cf 93       	push	r28
    1db0:	df 93       	push	r29
    1db2:	82 30       	cpi	r24, 0x02	; 2
    1db4:	91 05       	cpc	r25, r1
    1db6:	10 f4       	brcc	.+4      	; 0x1dbc <malloc+0xe>
    1db8:	82 e0       	ldi	r24, 0x02	; 2
    1dba:	90 e0       	ldi	r25, 0x00	; 0
    1dbc:	e0 91 33 04 	lds	r30, 0x0433
    1dc0:	f0 91 34 04 	lds	r31, 0x0434
    1dc4:	20 e0       	ldi	r18, 0x00	; 0
    1dc6:	30 e0       	ldi	r19, 0x00	; 0
    1dc8:	a0 e0       	ldi	r26, 0x00	; 0
    1dca:	b0 e0       	ldi	r27, 0x00	; 0
    1dcc:	30 97       	sbiw	r30, 0x00	; 0
    1dce:	39 f1       	breq	.+78     	; 0x1e1e <malloc+0x70>
    1dd0:	40 81       	ld	r20, Z
    1dd2:	51 81       	ldd	r21, Z+1	; 0x01
    1dd4:	48 17       	cp	r20, r24
    1dd6:	59 07       	cpc	r21, r25
    1dd8:	b8 f0       	brcs	.+46     	; 0x1e08 <malloc+0x5a>
    1dda:	48 17       	cp	r20, r24
    1ddc:	59 07       	cpc	r21, r25
    1dde:	71 f4       	brne	.+28     	; 0x1dfc <malloc+0x4e>
    1de0:	82 81       	ldd	r24, Z+2	; 0x02
    1de2:	93 81       	ldd	r25, Z+3	; 0x03
    1de4:	10 97       	sbiw	r26, 0x00	; 0
    1de6:	29 f0       	breq	.+10     	; 0x1df2 <malloc+0x44>
    1de8:	13 96       	adiw	r26, 0x03	; 3
    1dea:	9c 93       	st	X, r25
    1dec:	8e 93       	st	-X, r24
    1dee:	12 97       	sbiw	r26, 0x02	; 2
    1df0:	2c c0       	rjmp	.+88     	; 0x1e4a <malloc+0x9c>
    1df2:	90 93 34 04 	sts	0x0434, r25
    1df6:	80 93 33 04 	sts	0x0433, r24
    1dfa:	27 c0       	rjmp	.+78     	; 0x1e4a <malloc+0x9c>
    1dfc:	21 15       	cp	r18, r1
    1dfe:	31 05       	cpc	r19, r1
    1e00:	31 f0       	breq	.+12     	; 0x1e0e <malloc+0x60>
    1e02:	42 17       	cp	r20, r18
    1e04:	53 07       	cpc	r21, r19
    1e06:	18 f0       	brcs	.+6      	; 0x1e0e <malloc+0x60>
    1e08:	a9 01       	movw	r20, r18
    1e0a:	db 01       	movw	r26, r22
    1e0c:	01 c0       	rjmp	.+2      	; 0x1e10 <malloc+0x62>
    1e0e:	ef 01       	movw	r28, r30
    1e10:	9a 01       	movw	r18, r20
    1e12:	bd 01       	movw	r22, r26
    1e14:	df 01       	movw	r26, r30
    1e16:	02 80       	ldd	r0, Z+2	; 0x02
    1e18:	f3 81       	ldd	r31, Z+3	; 0x03
    1e1a:	e0 2d       	mov	r30, r0
    1e1c:	d7 cf       	rjmp	.-82     	; 0x1dcc <malloc+0x1e>
    1e1e:	21 15       	cp	r18, r1
    1e20:	31 05       	cpc	r19, r1
    1e22:	f9 f0       	breq	.+62     	; 0x1e62 <malloc+0xb4>
    1e24:	28 1b       	sub	r18, r24
    1e26:	39 0b       	sbc	r19, r25
    1e28:	24 30       	cpi	r18, 0x04	; 4
    1e2a:	31 05       	cpc	r19, r1
    1e2c:	80 f4       	brcc	.+32     	; 0x1e4e <malloc+0xa0>
    1e2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e30:	9b 81       	ldd	r25, Y+3	; 0x03
    1e32:	61 15       	cp	r22, r1
    1e34:	71 05       	cpc	r23, r1
    1e36:	21 f0       	breq	.+8      	; 0x1e40 <malloc+0x92>
    1e38:	fb 01       	movw	r30, r22
    1e3a:	93 83       	std	Z+3, r25	; 0x03
    1e3c:	82 83       	std	Z+2, r24	; 0x02
    1e3e:	04 c0       	rjmp	.+8      	; 0x1e48 <malloc+0x9a>
    1e40:	90 93 34 04 	sts	0x0434, r25
    1e44:	80 93 33 04 	sts	0x0433, r24
    1e48:	fe 01       	movw	r30, r28
    1e4a:	32 96       	adiw	r30, 0x02	; 2
    1e4c:	44 c0       	rjmp	.+136    	; 0x1ed6 <malloc+0x128>
    1e4e:	fe 01       	movw	r30, r28
    1e50:	e2 0f       	add	r30, r18
    1e52:	f3 1f       	adc	r31, r19
    1e54:	81 93       	st	Z+, r24
    1e56:	91 93       	st	Z+, r25
    1e58:	22 50       	subi	r18, 0x02	; 2
    1e5a:	31 09       	sbc	r19, r1
    1e5c:	39 83       	std	Y+1, r19	; 0x01
    1e5e:	28 83       	st	Y, r18
    1e60:	3a c0       	rjmp	.+116    	; 0x1ed6 <malloc+0x128>
    1e62:	20 91 31 04 	lds	r18, 0x0431
    1e66:	30 91 32 04 	lds	r19, 0x0432
    1e6a:	23 2b       	or	r18, r19
    1e6c:	41 f4       	brne	.+16     	; 0x1e7e <malloc+0xd0>
    1e6e:	20 91 06 01 	lds	r18, 0x0106
    1e72:	30 91 07 01 	lds	r19, 0x0107
    1e76:	30 93 32 04 	sts	0x0432, r19
    1e7a:	20 93 31 04 	sts	0x0431, r18
    1e7e:	20 91 04 01 	lds	r18, 0x0104
    1e82:	30 91 05 01 	lds	r19, 0x0105
    1e86:	21 15       	cp	r18, r1
    1e88:	31 05       	cpc	r19, r1
    1e8a:	41 f4       	brne	.+16     	; 0x1e9c <malloc+0xee>
    1e8c:	2d b7       	in	r18, 0x3d	; 61
    1e8e:	3e b7       	in	r19, 0x3e	; 62
    1e90:	40 91 08 01 	lds	r20, 0x0108
    1e94:	50 91 09 01 	lds	r21, 0x0109
    1e98:	24 1b       	sub	r18, r20
    1e9a:	35 0b       	sbc	r19, r21
    1e9c:	e0 91 31 04 	lds	r30, 0x0431
    1ea0:	f0 91 32 04 	lds	r31, 0x0432
    1ea4:	e2 17       	cp	r30, r18
    1ea6:	f3 07       	cpc	r31, r19
    1ea8:	a0 f4       	brcc	.+40     	; 0x1ed2 <malloc+0x124>
    1eaa:	2e 1b       	sub	r18, r30
    1eac:	3f 0b       	sbc	r19, r31
    1eae:	28 17       	cp	r18, r24
    1eb0:	39 07       	cpc	r19, r25
    1eb2:	78 f0       	brcs	.+30     	; 0x1ed2 <malloc+0x124>
    1eb4:	ac 01       	movw	r20, r24
    1eb6:	4e 5f       	subi	r20, 0xFE	; 254
    1eb8:	5f 4f       	sbci	r21, 0xFF	; 255
    1eba:	24 17       	cp	r18, r20
    1ebc:	35 07       	cpc	r19, r21
    1ebe:	48 f0       	brcs	.+18     	; 0x1ed2 <malloc+0x124>
    1ec0:	4e 0f       	add	r20, r30
    1ec2:	5f 1f       	adc	r21, r31
    1ec4:	50 93 32 04 	sts	0x0432, r21
    1ec8:	40 93 31 04 	sts	0x0431, r20
    1ecc:	81 93       	st	Z+, r24
    1ece:	91 93       	st	Z+, r25
    1ed0:	02 c0       	rjmp	.+4      	; 0x1ed6 <malloc+0x128>
    1ed2:	e0 e0       	ldi	r30, 0x00	; 0
    1ed4:	f0 e0       	ldi	r31, 0x00	; 0
    1ed6:	cf 01       	movw	r24, r30
    1ed8:	df 91       	pop	r29
    1eda:	cf 91       	pop	r28
    1edc:	08 95       	ret

00001ede <free>:
    1ede:	cf 93       	push	r28
    1ee0:	df 93       	push	r29
    1ee2:	00 97       	sbiw	r24, 0x00	; 0
    1ee4:	09 f4       	brne	.+2      	; 0x1ee8 <free+0xa>
    1ee6:	87 c0       	rjmp	.+270    	; 0x1ff6 <free+0x118>
    1ee8:	fc 01       	movw	r30, r24
    1eea:	32 97       	sbiw	r30, 0x02	; 2
    1eec:	13 82       	std	Z+3, r1	; 0x03
    1eee:	12 82       	std	Z+2, r1	; 0x02
    1ef0:	c0 91 33 04 	lds	r28, 0x0433
    1ef4:	d0 91 34 04 	lds	r29, 0x0434
    1ef8:	20 97       	sbiw	r28, 0x00	; 0
    1efa:	81 f4       	brne	.+32     	; 0x1f1c <free+0x3e>
    1efc:	20 81       	ld	r18, Z
    1efe:	31 81       	ldd	r19, Z+1	; 0x01
    1f00:	28 0f       	add	r18, r24
    1f02:	39 1f       	adc	r19, r25
    1f04:	80 91 31 04 	lds	r24, 0x0431
    1f08:	90 91 32 04 	lds	r25, 0x0432
    1f0c:	82 17       	cp	r24, r18
    1f0e:	93 07       	cpc	r25, r19
    1f10:	79 f5       	brne	.+94     	; 0x1f70 <free+0x92>
    1f12:	f0 93 32 04 	sts	0x0432, r31
    1f16:	e0 93 31 04 	sts	0x0431, r30
    1f1a:	6d c0       	rjmp	.+218    	; 0x1ff6 <free+0x118>
    1f1c:	de 01       	movw	r26, r28
    1f1e:	20 e0       	ldi	r18, 0x00	; 0
    1f20:	30 e0       	ldi	r19, 0x00	; 0
    1f22:	ae 17       	cp	r26, r30
    1f24:	bf 07       	cpc	r27, r31
    1f26:	50 f4       	brcc	.+20     	; 0x1f3c <free+0x5e>
    1f28:	12 96       	adiw	r26, 0x02	; 2
    1f2a:	4d 91       	ld	r20, X+
    1f2c:	5c 91       	ld	r21, X
    1f2e:	13 97       	sbiw	r26, 0x03	; 3
    1f30:	9d 01       	movw	r18, r26
    1f32:	41 15       	cp	r20, r1
    1f34:	51 05       	cpc	r21, r1
    1f36:	09 f1       	breq	.+66     	; 0x1f7a <free+0x9c>
    1f38:	da 01       	movw	r26, r20
    1f3a:	f3 cf       	rjmp	.-26     	; 0x1f22 <free+0x44>
    1f3c:	b3 83       	std	Z+3, r27	; 0x03
    1f3e:	a2 83       	std	Z+2, r26	; 0x02
    1f40:	40 81       	ld	r20, Z
    1f42:	51 81       	ldd	r21, Z+1	; 0x01
    1f44:	84 0f       	add	r24, r20
    1f46:	95 1f       	adc	r25, r21
    1f48:	8a 17       	cp	r24, r26
    1f4a:	9b 07       	cpc	r25, r27
    1f4c:	71 f4       	brne	.+28     	; 0x1f6a <free+0x8c>
    1f4e:	8d 91       	ld	r24, X+
    1f50:	9c 91       	ld	r25, X
    1f52:	11 97       	sbiw	r26, 0x01	; 1
    1f54:	84 0f       	add	r24, r20
    1f56:	95 1f       	adc	r25, r21
    1f58:	02 96       	adiw	r24, 0x02	; 2
    1f5a:	91 83       	std	Z+1, r25	; 0x01
    1f5c:	80 83       	st	Z, r24
    1f5e:	12 96       	adiw	r26, 0x02	; 2
    1f60:	8d 91       	ld	r24, X+
    1f62:	9c 91       	ld	r25, X
    1f64:	13 97       	sbiw	r26, 0x03	; 3
    1f66:	93 83       	std	Z+3, r25	; 0x03
    1f68:	82 83       	std	Z+2, r24	; 0x02
    1f6a:	21 15       	cp	r18, r1
    1f6c:	31 05       	cpc	r19, r1
    1f6e:	29 f4       	brne	.+10     	; 0x1f7a <free+0x9c>
    1f70:	f0 93 34 04 	sts	0x0434, r31
    1f74:	e0 93 33 04 	sts	0x0433, r30
    1f78:	3e c0       	rjmp	.+124    	; 0x1ff6 <free+0x118>
    1f7a:	d9 01       	movw	r26, r18
    1f7c:	13 96       	adiw	r26, 0x03	; 3
    1f7e:	fc 93       	st	X, r31
    1f80:	ee 93       	st	-X, r30
    1f82:	12 97       	sbiw	r26, 0x02	; 2
    1f84:	4d 91       	ld	r20, X+
    1f86:	5d 91       	ld	r21, X+
    1f88:	a4 0f       	add	r26, r20
    1f8a:	b5 1f       	adc	r27, r21
    1f8c:	ea 17       	cp	r30, r26
    1f8e:	fb 07       	cpc	r31, r27
    1f90:	79 f4       	brne	.+30     	; 0x1fb0 <free+0xd2>
    1f92:	80 81       	ld	r24, Z
    1f94:	91 81       	ldd	r25, Z+1	; 0x01
    1f96:	84 0f       	add	r24, r20
    1f98:	95 1f       	adc	r25, r21
    1f9a:	02 96       	adiw	r24, 0x02	; 2
    1f9c:	d9 01       	movw	r26, r18
    1f9e:	11 96       	adiw	r26, 0x01	; 1
    1fa0:	9c 93       	st	X, r25
    1fa2:	8e 93       	st	-X, r24
    1fa4:	82 81       	ldd	r24, Z+2	; 0x02
    1fa6:	93 81       	ldd	r25, Z+3	; 0x03
    1fa8:	13 96       	adiw	r26, 0x03	; 3
    1faa:	9c 93       	st	X, r25
    1fac:	8e 93       	st	-X, r24
    1fae:	12 97       	sbiw	r26, 0x02	; 2
    1fb0:	e0 e0       	ldi	r30, 0x00	; 0
    1fb2:	f0 e0       	ldi	r31, 0x00	; 0
    1fb4:	8a 81       	ldd	r24, Y+2	; 0x02
    1fb6:	9b 81       	ldd	r25, Y+3	; 0x03
    1fb8:	00 97       	sbiw	r24, 0x00	; 0
    1fba:	19 f0       	breq	.+6      	; 0x1fc2 <free+0xe4>
    1fbc:	fe 01       	movw	r30, r28
    1fbe:	ec 01       	movw	r28, r24
    1fc0:	f9 cf       	rjmp	.-14     	; 0x1fb4 <free+0xd6>
    1fc2:	ce 01       	movw	r24, r28
    1fc4:	02 96       	adiw	r24, 0x02	; 2
    1fc6:	28 81       	ld	r18, Y
    1fc8:	39 81       	ldd	r19, Y+1	; 0x01
    1fca:	82 0f       	add	r24, r18
    1fcc:	93 1f       	adc	r25, r19
    1fce:	20 91 31 04 	lds	r18, 0x0431
    1fd2:	30 91 32 04 	lds	r19, 0x0432
    1fd6:	28 17       	cp	r18, r24
    1fd8:	39 07       	cpc	r19, r25
    1fda:	69 f4       	brne	.+26     	; 0x1ff6 <free+0x118>
    1fdc:	30 97       	sbiw	r30, 0x00	; 0
    1fde:	29 f4       	brne	.+10     	; 0x1fea <free+0x10c>
    1fe0:	10 92 34 04 	sts	0x0434, r1
    1fe4:	10 92 33 04 	sts	0x0433, r1
    1fe8:	02 c0       	rjmp	.+4      	; 0x1fee <free+0x110>
    1fea:	13 82       	std	Z+3, r1	; 0x03
    1fec:	12 82       	std	Z+2, r1	; 0x02
    1fee:	d0 93 32 04 	sts	0x0432, r29
    1ff2:	c0 93 31 04 	sts	0x0431, r28
    1ff6:	df 91       	pop	r29
    1ff8:	cf 91       	pop	r28
    1ffa:	08 95       	ret

00001ffc <strnlen_P>:
    1ffc:	fc 01       	movw	r30, r24
    1ffe:	05 90       	lpm	r0, Z+
    2000:	61 50       	subi	r22, 0x01	; 1
    2002:	70 40       	sbci	r23, 0x00	; 0
    2004:	01 10       	cpse	r0, r1
    2006:	d8 f7       	brcc	.-10     	; 0x1ffe <strnlen_P+0x2>
    2008:	80 95       	com	r24
    200a:	90 95       	com	r25
    200c:	8e 0f       	add	r24, r30
    200e:	9f 1f       	adc	r25, r31
    2010:	08 95       	ret

00002012 <memset>:
    2012:	dc 01       	movw	r26, r24
    2014:	01 c0       	rjmp	.+2      	; 0x2018 <memset+0x6>
    2016:	6d 93       	st	X+, r22
    2018:	41 50       	subi	r20, 0x01	; 1
    201a:	50 40       	sbci	r21, 0x00	; 0
    201c:	e0 f7       	brcc	.-8      	; 0x2016 <memset+0x4>
    201e:	08 95       	ret

00002020 <strnlen>:
    2020:	fc 01       	movw	r30, r24
    2022:	61 50       	subi	r22, 0x01	; 1
    2024:	70 40       	sbci	r23, 0x00	; 0
    2026:	01 90       	ld	r0, Z+
    2028:	01 10       	cpse	r0, r1
    202a:	d8 f7       	brcc	.-10     	; 0x2022 <strnlen+0x2>
    202c:	80 95       	com	r24
    202e:	90 95       	com	r25
    2030:	8e 0f       	add	r24, r30
    2032:	9f 1f       	adc	r25, r31
    2034:	08 95       	ret

00002036 <fputc>:
    2036:	0f 93       	push	r16
    2038:	1f 93       	push	r17
    203a:	cf 93       	push	r28
    203c:	df 93       	push	r29
    203e:	18 2f       	mov	r17, r24
    2040:	09 2f       	mov	r16, r25
    2042:	eb 01       	movw	r28, r22
    2044:	8b 81       	ldd	r24, Y+3	; 0x03
    2046:	81 fd       	sbrc	r24, 1
    2048:	03 c0       	rjmp	.+6      	; 0x2050 <fputc+0x1a>
    204a:	8f ef       	ldi	r24, 0xFF	; 255
    204c:	9f ef       	ldi	r25, 0xFF	; 255
    204e:	20 c0       	rjmp	.+64     	; 0x2090 <fputc+0x5a>
    2050:	82 ff       	sbrs	r24, 2
    2052:	10 c0       	rjmp	.+32     	; 0x2074 <fputc+0x3e>
    2054:	4e 81       	ldd	r20, Y+6	; 0x06
    2056:	5f 81       	ldd	r21, Y+7	; 0x07
    2058:	2c 81       	ldd	r18, Y+4	; 0x04
    205a:	3d 81       	ldd	r19, Y+5	; 0x05
    205c:	42 17       	cp	r20, r18
    205e:	53 07       	cpc	r21, r19
    2060:	7c f4       	brge	.+30     	; 0x2080 <fputc+0x4a>
    2062:	e8 81       	ld	r30, Y
    2064:	f9 81       	ldd	r31, Y+1	; 0x01
    2066:	9f 01       	movw	r18, r30
    2068:	2f 5f       	subi	r18, 0xFF	; 255
    206a:	3f 4f       	sbci	r19, 0xFF	; 255
    206c:	39 83       	std	Y+1, r19	; 0x01
    206e:	28 83       	st	Y, r18
    2070:	10 83       	st	Z, r17
    2072:	06 c0       	rjmp	.+12     	; 0x2080 <fputc+0x4a>
    2074:	e8 85       	ldd	r30, Y+8	; 0x08
    2076:	f9 85       	ldd	r31, Y+9	; 0x09
    2078:	81 2f       	mov	r24, r17
    207a:	09 95       	icall
    207c:	89 2b       	or	r24, r25
    207e:	29 f7       	brne	.-54     	; 0x204a <fputc+0x14>
    2080:	2e 81       	ldd	r18, Y+6	; 0x06
    2082:	3f 81       	ldd	r19, Y+7	; 0x07
    2084:	2f 5f       	subi	r18, 0xFF	; 255
    2086:	3f 4f       	sbci	r19, 0xFF	; 255
    2088:	3f 83       	std	Y+7, r19	; 0x07
    208a:	2e 83       	std	Y+6, r18	; 0x06
    208c:	81 2f       	mov	r24, r17
    208e:	90 2f       	mov	r25, r16
    2090:	df 91       	pop	r29
    2092:	cf 91       	pop	r28
    2094:	1f 91       	pop	r17
    2096:	0f 91       	pop	r16
    2098:	08 95       	ret

0000209a <__ultoa_invert>:
    209a:	fa 01       	movw	r30, r20
    209c:	aa 27       	eor	r26, r26
    209e:	28 30       	cpi	r18, 0x08	; 8
    20a0:	51 f1       	breq	.+84     	; 0x20f6 <__ultoa_invert+0x5c>
    20a2:	20 31       	cpi	r18, 0x10	; 16
    20a4:	81 f1       	breq	.+96     	; 0x2106 <__ultoa_invert+0x6c>
    20a6:	e8 94       	clt
    20a8:	6f 93       	push	r22
    20aa:	6e 7f       	andi	r22, 0xFE	; 254
    20ac:	6e 5f       	subi	r22, 0xFE	; 254
    20ae:	7f 4f       	sbci	r23, 0xFF	; 255
    20b0:	8f 4f       	sbci	r24, 0xFF	; 255
    20b2:	9f 4f       	sbci	r25, 0xFF	; 255
    20b4:	af 4f       	sbci	r26, 0xFF	; 255
    20b6:	b1 e0       	ldi	r27, 0x01	; 1
    20b8:	3e d0       	rcall	.+124    	; 0x2136 <__ultoa_invert+0x9c>
    20ba:	b4 e0       	ldi	r27, 0x04	; 4
    20bc:	3c d0       	rcall	.+120    	; 0x2136 <__ultoa_invert+0x9c>
    20be:	67 0f       	add	r22, r23
    20c0:	78 1f       	adc	r23, r24
    20c2:	89 1f       	adc	r24, r25
    20c4:	9a 1f       	adc	r25, r26
    20c6:	a1 1d       	adc	r26, r1
    20c8:	68 0f       	add	r22, r24
    20ca:	79 1f       	adc	r23, r25
    20cc:	8a 1f       	adc	r24, r26
    20ce:	91 1d       	adc	r25, r1
    20d0:	a1 1d       	adc	r26, r1
    20d2:	6a 0f       	add	r22, r26
    20d4:	71 1d       	adc	r23, r1
    20d6:	81 1d       	adc	r24, r1
    20d8:	91 1d       	adc	r25, r1
    20da:	a1 1d       	adc	r26, r1
    20dc:	20 d0       	rcall	.+64     	; 0x211e <__ultoa_invert+0x84>
    20de:	09 f4       	brne	.+2      	; 0x20e2 <__ultoa_invert+0x48>
    20e0:	68 94       	set
    20e2:	3f 91       	pop	r19
    20e4:	2a e0       	ldi	r18, 0x0A	; 10
    20e6:	26 9f       	mul	r18, r22
    20e8:	11 24       	eor	r1, r1
    20ea:	30 19       	sub	r19, r0
    20ec:	30 5d       	subi	r19, 0xD0	; 208
    20ee:	31 93       	st	Z+, r19
    20f0:	de f6       	brtc	.-74     	; 0x20a8 <__ultoa_invert+0xe>
    20f2:	cf 01       	movw	r24, r30
    20f4:	08 95       	ret
    20f6:	46 2f       	mov	r20, r22
    20f8:	47 70       	andi	r20, 0x07	; 7
    20fa:	40 5d       	subi	r20, 0xD0	; 208
    20fc:	41 93       	st	Z+, r20
    20fe:	b3 e0       	ldi	r27, 0x03	; 3
    2100:	0f d0       	rcall	.+30     	; 0x2120 <__ultoa_invert+0x86>
    2102:	c9 f7       	brne	.-14     	; 0x20f6 <__ultoa_invert+0x5c>
    2104:	f6 cf       	rjmp	.-20     	; 0x20f2 <__ultoa_invert+0x58>
    2106:	46 2f       	mov	r20, r22
    2108:	4f 70       	andi	r20, 0x0F	; 15
    210a:	40 5d       	subi	r20, 0xD0	; 208
    210c:	4a 33       	cpi	r20, 0x3A	; 58
    210e:	18 f0       	brcs	.+6      	; 0x2116 <__ultoa_invert+0x7c>
    2110:	49 5d       	subi	r20, 0xD9	; 217
    2112:	31 fd       	sbrc	r19, 1
    2114:	40 52       	subi	r20, 0x20	; 32
    2116:	41 93       	st	Z+, r20
    2118:	02 d0       	rcall	.+4      	; 0x211e <__ultoa_invert+0x84>
    211a:	a9 f7       	brne	.-22     	; 0x2106 <__ultoa_invert+0x6c>
    211c:	ea cf       	rjmp	.-44     	; 0x20f2 <__ultoa_invert+0x58>
    211e:	b4 e0       	ldi	r27, 0x04	; 4
    2120:	a6 95       	lsr	r26
    2122:	97 95       	ror	r25
    2124:	87 95       	ror	r24
    2126:	77 95       	ror	r23
    2128:	67 95       	ror	r22
    212a:	ba 95       	dec	r27
    212c:	c9 f7       	brne	.-14     	; 0x2120 <__ultoa_invert+0x86>
    212e:	00 97       	sbiw	r24, 0x00	; 0
    2130:	61 05       	cpc	r22, r1
    2132:	71 05       	cpc	r23, r1
    2134:	08 95       	ret
    2136:	9b 01       	movw	r18, r22
    2138:	ac 01       	movw	r20, r24
    213a:	0a 2e       	mov	r0, r26
    213c:	06 94       	lsr	r0
    213e:	57 95       	ror	r21
    2140:	47 95       	ror	r20
    2142:	37 95       	ror	r19
    2144:	27 95       	ror	r18
    2146:	ba 95       	dec	r27
    2148:	c9 f7       	brne	.-14     	; 0x213c <__ultoa_invert+0xa2>
    214a:	62 0f       	add	r22, r18
    214c:	73 1f       	adc	r23, r19
    214e:	84 1f       	adc	r24, r20
    2150:	95 1f       	adc	r25, r21
    2152:	a0 1d       	adc	r26, r0
    2154:	08 95       	ret

00002156 <__divmodsi4>:
    2156:	05 2e       	mov	r0, r21
    2158:	97 fb       	bst	r25, 7
    215a:	1e f4       	brtc	.+6      	; 0x2162 <__divmodsi4+0xc>
    215c:	00 94       	com	r0
    215e:	0e 94 c2 10 	call	0x2184	; 0x2184 <__negsi2>
    2162:	57 fd       	sbrc	r21, 7
    2164:	07 d0       	rcall	.+14     	; 0x2174 <__divmodsi4_neg2>
    2166:	0e 94 14 11 	call	0x2228	; 0x2228 <__udivmodsi4>
    216a:	07 fc       	sbrc	r0, 7
    216c:	03 d0       	rcall	.+6      	; 0x2174 <__divmodsi4_neg2>
    216e:	4e f4       	brtc	.+18     	; 0x2182 <__divmodsi4_exit>
    2170:	0c 94 c2 10 	jmp	0x2184	; 0x2184 <__negsi2>

00002174 <__divmodsi4_neg2>:
    2174:	50 95       	com	r21
    2176:	40 95       	com	r20
    2178:	30 95       	com	r19
    217a:	21 95       	neg	r18
    217c:	3f 4f       	sbci	r19, 0xFF	; 255
    217e:	4f 4f       	sbci	r20, 0xFF	; 255
    2180:	5f 4f       	sbci	r21, 0xFF	; 255

00002182 <__divmodsi4_exit>:
    2182:	08 95       	ret

00002184 <__negsi2>:
    2184:	90 95       	com	r25
    2186:	80 95       	com	r24
    2188:	70 95       	com	r23
    218a:	61 95       	neg	r22
    218c:	7f 4f       	sbci	r23, 0xFF	; 255
    218e:	8f 4f       	sbci	r24, 0xFF	; 255
    2190:	9f 4f       	sbci	r25, 0xFF	; 255
    2192:	08 95       	ret

00002194 <__muluhisi3>:
    2194:	0e 94 36 11 	call	0x226c	; 0x226c <__umulhisi3>
    2198:	a5 9f       	mul	r26, r21
    219a:	90 0d       	add	r25, r0
    219c:	b4 9f       	mul	r27, r20
    219e:	90 0d       	add	r25, r0
    21a0:	a4 9f       	mul	r26, r20
    21a2:	80 0d       	add	r24, r0
    21a4:	91 1d       	adc	r25, r1
    21a6:	11 24       	eor	r1, r1
    21a8:	08 95       	ret

000021aa <__mulshisi3>:
    21aa:	b7 ff       	sbrs	r27, 7
    21ac:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__muluhisi3>

000021b0 <__mulohisi3>:
    21b0:	0e 94 ca 10 	call	0x2194	; 0x2194 <__muluhisi3>
    21b4:	82 1b       	sub	r24, r18
    21b6:	93 0b       	sbc	r25, r19
    21b8:	08 95       	ret

000021ba <__prologue_saves__>:
    21ba:	2f 92       	push	r2
    21bc:	3f 92       	push	r3
    21be:	4f 92       	push	r4
    21c0:	5f 92       	push	r5
    21c2:	6f 92       	push	r6
    21c4:	7f 92       	push	r7
    21c6:	8f 92       	push	r8
    21c8:	9f 92       	push	r9
    21ca:	af 92       	push	r10
    21cc:	bf 92       	push	r11
    21ce:	cf 92       	push	r12
    21d0:	df 92       	push	r13
    21d2:	ef 92       	push	r14
    21d4:	ff 92       	push	r15
    21d6:	0f 93       	push	r16
    21d8:	1f 93       	push	r17
    21da:	cf 93       	push	r28
    21dc:	df 93       	push	r29
    21de:	cd b7       	in	r28, 0x3d	; 61
    21e0:	de b7       	in	r29, 0x3e	; 62
    21e2:	ca 1b       	sub	r28, r26
    21e4:	db 0b       	sbc	r29, r27
    21e6:	0f b6       	in	r0, 0x3f	; 63
    21e8:	f8 94       	cli
    21ea:	de bf       	out	0x3e, r29	; 62
    21ec:	0f be       	out	0x3f, r0	; 63
    21ee:	cd bf       	out	0x3d, r28	; 61
    21f0:	09 94       	ijmp

000021f2 <__epilogue_restores__>:
    21f2:	2a 88       	ldd	r2, Y+18	; 0x12
    21f4:	39 88       	ldd	r3, Y+17	; 0x11
    21f6:	48 88       	ldd	r4, Y+16	; 0x10
    21f8:	5f 84       	ldd	r5, Y+15	; 0x0f
    21fa:	6e 84       	ldd	r6, Y+14	; 0x0e
    21fc:	7d 84       	ldd	r7, Y+13	; 0x0d
    21fe:	8c 84       	ldd	r8, Y+12	; 0x0c
    2200:	9b 84       	ldd	r9, Y+11	; 0x0b
    2202:	aa 84       	ldd	r10, Y+10	; 0x0a
    2204:	b9 84       	ldd	r11, Y+9	; 0x09
    2206:	c8 84       	ldd	r12, Y+8	; 0x08
    2208:	df 80       	ldd	r13, Y+7	; 0x07
    220a:	ee 80       	ldd	r14, Y+6	; 0x06
    220c:	fd 80       	ldd	r15, Y+5	; 0x05
    220e:	0c 81       	ldd	r16, Y+4	; 0x04
    2210:	1b 81       	ldd	r17, Y+3	; 0x03
    2212:	aa 81       	ldd	r26, Y+2	; 0x02
    2214:	b9 81       	ldd	r27, Y+1	; 0x01
    2216:	ce 0f       	add	r28, r30
    2218:	d1 1d       	adc	r29, r1
    221a:	0f b6       	in	r0, 0x3f	; 63
    221c:	f8 94       	cli
    221e:	de bf       	out	0x3e, r29	; 62
    2220:	0f be       	out	0x3f, r0	; 63
    2222:	cd bf       	out	0x3d, r28	; 61
    2224:	ed 01       	movw	r28, r26
    2226:	08 95       	ret

00002228 <__udivmodsi4>:
    2228:	a1 e2       	ldi	r26, 0x21	; 33
    222a:	1a 2e       	mov	r1, r26
    222c:	aa 1b       	sub	r26, r26
    222e:	bb 1b       	sub	r27, r27
    2230:	fd 01       	movw	r30, r26
    2232:	0d c0       	rjmp	.+26     	; 0x224e <__udivmodsi4_ep>

00002234 <__udivmodsi4_loop>:
    2234:	aa 1f       	adc	r26, r26
    2236:	bb 1f       	adc	r27, r27
    2238:	ee 1f       	adc	r30, r30
    223a:	ff 1f       	adc	r31, r31
    223c:	a2 17       	cp	r26, r18
    223e:	b3 07       	cpc	r27, r19
    2240:	e4 07       	cpc	r30, r20
    2242:	f5 07       	cpc	r31, r21
    2244:	20 f0       	brcs	.+8      	; 0x224e <__udivmodsi4_ep>
    2246:	a2 1b       	sub	r26, r18
    2248:	b3 0b       	sbc	r27, r19
    224a:	e4 0b       	sbc	r30, r20
    224c:	f5 0b       	sbc	r31, r21

0000224e <__udivmodsi4_ep>:
    224e:	66 1f       	adc	r22, r22
    2250:	77 1f       	adc	r23, r23
    2252:	88 1f       	adc	r24, r24
    2254:	99 1f       	adc	r25, r25
    2256:	1a 94       	dec	r1
    2258:	69 f7       	brne	.-38     	; 0x2234 <__udivmodsi4_loop>
    225a:	60 95       	com	r22
    225c:	70 95       	com	r23
    225e:	80 95       	com	r24
    2260:	90 95       	com	r25
    2262:	9b 01       	movw	r18, r22
    2264:	ac 01       	movw	r20, r24
    2266:	bd 01       	movw	r22, r26
    2268:	cf 01       	movw	r24, r30
    226a:	08 95       	ret

0000226c <__umulhisi3>:
    226c:	a2 9f       	mul	r26, r18
    226e:	b0 01       	movw	r22, r0
    2270:	b3 9f       	mul	r27, r19
    2272:	c0 01       	movw	r24, r0
    2274:	a3 9f       	mul	r26, r19
    2276:	70 0d       	add	r23, r0
    2278:	81 1d       	adc	r24, r1
    227a:	11 24       	eor	r1, r1
    227c:	91 1d       	adc	r25, r1
    227e:	b2 9f       	mul	r27, r18
    2280:	70 0d       	add	r23, r0
    2282:	81 1d       	adc	r24, r1
    2284:	11 24       	eor	r1, r1
    2286:	91 1d       	adc	r25, r1
    2288:	08 95       	ret

0000228a <_exit>:
    228a:	f8 94       	cli

0000228c <__stop_program>:
    228c:	ff cf       	rjmp	.-2      	; 0x228c <__stop_program>
